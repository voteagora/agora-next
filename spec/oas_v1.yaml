openapi: 3.1.0
info:
  title: Agora API
  description: Public API for interacting with the Agora platform
  version: 0.1.0-beta
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: vote.optimisim.io/api/v1
    description: Base URL for optimism production
security:
  - ApiKeyAuth: []
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
  schemas:
    PageMetadata:
      summary: Pagination metadata
      description: Metadata associated with paginated requests.
      type: object
      properties:
        hasNext:
          summary: Flag indicating if there's more data for retieval
          description: A boolean flag indicating if there is additional data past the returned page to retrieve.
          type: boolean
        totalReturned:
          summary: Total records returned
          description: A number indicating the total amount of records returned for the request.
          type: integer
          format: int32
        nextOffset: 
          summary: Offset to supply to the next request
          description: A number indicating the offset at which a subsequent request may retrieve the next set of records.
          type: integer
          format: int32
    Delegation:
      summary: A delegation of voting power
      description: A delegation of voting power from one address to another.
      type: object
      properties:
        address: 
          summary: Delegate address
          description: Address of the delegator or delegatee.
          type: string 
          examples:
          - summary: Address of the delegator or delegatee.
            value: "0xDa6d1F091B672C0f9e215eB9fa6B5a84bF2c5e11"
        totalAllowance:
          summary: Voting allowance for delegate
          description: Total amount of voting power delegated to or from address. 
          type: string
          examples:
          - summary: Amount of voting power delegated to or from address.
            value: "100000"
        delegatedOn:
          summary: When delegation occured
          description: The datetime on which the delegation of voting power occurred. 
          type: string
          format: date-time
          examples:
          - summary: The datetime on which the delegation of voting power occurred.
        type:
          $ref: "#/components/schemas/DelegationType"
    DelegationType:
      summary: Type of delegation
      description: The type of delegation; can be advanced or standard.
      type: string
      enum:
        - advanced
        - standard
    BaseDelegate:
      summary: A voting delegate
      description: Data associated with a voting delegate. Sub-resources under this delegate are not expanded. 
      type: object
      properties:
        address:
          summary: Delegate address
          description: Address of the delegate.
          type: string
          examples: 
            - summary: Address of the delegate.
              value: "0xDa6d1F091B672C0f9e215eB9fa6B5a84bF2c5e11"
        votingPower:
          summary: Delegate's available voting power
          description: An object providing a breakdown of a delegate's overall voting power between direct, advanced, and total.
          type: object
          properties:
            advanced:
              description: Advanced voting power.
              type: string
              examples:
                - summary: Advanced voting power.
                  value: "10000"
            direct:
              description: Direct voting power.
              type: string
              examples:
                - summary: Direct voting power
                  value: "20000"
            total:
              description: Total voting power.
              type: string
              examples:
                - summary: Total voting power
                  value: "30000"
        isCitizen:
          description: A boolean flag indicating whether or not this delegate is an Agora citizen.
          type: boolean
        twitter:
          description: Optional twitter handle for a particular delegate.
          type: string
          examples:
            - summary: Twitter handle
              value: "@flip_liquide"
        statement:
          description: A statement from the delegate describing their voting positions.
          type: string
          examples:
            - summary: Delegate statement
              value: "hello! I am a great delegate for reasons xyz"
        openToSponsoringProposals:
          description: A boolean flag indicating if this delegate is willing to act as a sponsor for new proposals.
          type: boolean
        topIssues:
          description: The most important issues for a given delegate.
          type: array
          items: 
              $ref: '#/components/schemas/Issue'
    Issue:
      summary: Description of a governance issue
      description: An object describing a particular view on a particular governance issue.
      type: object
      properties:
        type: 
          type: string
          examples: 
            - "Funding"
        value:
          type: string
          examples: 
            - "Grant funding should be directed to projects with a great track record"
  parameters:
   limitParam:
      name: limit
      in: query
      description: Limits the number of returned results
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        default: 10
   offsetParam:
      name: offset
      in: query
      description: Offset from which start returned results
      required: false
      schema:
        type: integer
        format: int32
        minimum: 0
        default: 0
paths:
  /delegates:
    get:
      summary: Gets a list of delegates.
      description: >
        Retrieves a list of voting delegates on Agora as a JSON array.
        Limit, offset, and sort parameters can be used to customize the returned list.
      operationId: getDelegates
      tags:
        - delegates
      parameters:
        - $ref: "#/components/parameters/limitParam"
        - $ref: "#/components/parameters/offsetParam"
        - name: sort
          in: query
          description: >
            The desired method by which returned delegates will be sorted.
            Supported values are: 'most_delegators', 'weighted_random'
          required: false
          schema: 
            type: string
      responses: 
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/PageMetadata'
                  delegates:
                    type: array
                    items:
                      $ref: '#/components/schemas/BaseDelegate'
        '400':
          description: Bad Request
        '401': 
          description: Unauthorized
        '500':
          description: Internal Server Error
  /delegates/{addressOrEnsName}:
    get:
      summary: Gets a specific delegate.
      description: >
        Retrieves a specific delegate on Agora by address or ENS name.
      operationId: getDelegate
      tags: 
        - delegates
      parameters:
        - name: addressOrEnsName
          in: path
          description: The address or ENS name of the delegate to retrieve
          required: true
          schema:
            type: string
          examples: 
            address: 
              value: "0xDa6d1F091B672C0f9e215eB9fa6B5a84bF2c5e11"
              summary: Address of the delegate. 
            ensName:
              value: "flipliquid.eth"
              summary: ENS name of the delegate.
      responses: 
        '200':
          description: OK
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/BaseDelegate'
        '400':
          description: Bad Request
        '401': 
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error