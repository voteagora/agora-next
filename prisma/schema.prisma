generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema", "views"]
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["agora", "alltenant", "boost", "config", "cyber", "derive", "ens", "etherfi", "optimism", "pguild", "retro_funding", "snapshot", "scroll", "uniswap"]
}

model DelegateStatements {
  address   String
  dao_slug  DaoSlug
  signature String
  payload   Json
  twitter   String?
  discord   String?
  email     String?
  createdAt DateTime? @default(now()) @map("created_at") @db.Date
  updatedAt DateTime? @default(now()) @map("updated_at") @db.Date
  warpcast  String?
  endorsed  Boolean   @default(false)
  scw_address  String?
  notification_preferences Json?

  @@id([address, dao_slug])
  @@index([email], map: "idx_delegate_statements_email")
  @@map("delegate_statements")
  @@schema("agora")
}

model Contracts {
  address       String        @id
  chain         Chain?
  contract_type ContractType?
  dao           String
  env           Env?

  @@map("contracts")
  @@schema("config")
}

model AddressMetadata {
  address    String
  kind       String
  dao_slug   DaoSlug
  metadata   Json?
  created_at DateTime? @default(now()) @db.Timestamptz(6)

  @@id([address, kind, dao_slug])
  @@map("address_metadata")
  @@schema("agora")
}

view Citizens {
  address             String
  dao_slug            DaoSlug
  retro_funding_round String
  time_created        BigInt?

  @@id([address, dao_slug, retro_funding_round])
  @@map("citizens")
  @@schema("agora")
}

view Badgeholders {
  address             String
  dao_slug            DaoSlug
  retro_funding_round String
  time_created        BigInt
  metadata            String

  @@id([address, dao_slug, retro_funding_round])
  @@map("badgeholders")
  @@schema("agora")
}

model SnapshotProposal {
  id             String    @id
  dao_slug       DaoSlug
  author         String?
  body           String?
  choices        String[]
  created        Decimal?  @db.Decimal
  end            Decimal?  @db.Decimal
  link           String?
  network        String?
  scores         Decimal[] @db.Decimal
  scores_state   String?
  scores_total   Decimal?  @db.Decimal
  scores_updated Decimal?  @db.Decimal
  snapshot       String?
  start          Decimal?  @db.Decimal
  state          String?
  title          String?
  type           String?
  votes          Decimal?  @db.Decimal

  @@map("proposals_v2")
  @@schema("snapshot")
}

model SnapshotVotes {
  id             String   @id @unique
  voter          String?  // enforced lower case at ingestion
  created        Int?
  choice         String?
  metadata       Json?
  reason         String?
  app            String?
  vp             Float?
  vp_by_strategy Json?
  vp_state       String?
  proposal_id    String?
  choice_labels  Json?
  dao_slug       String?

  @@index([id], name: "ix_snapshot_votes_id")
  @@schema("snapshot")
  @@map("votes")
}



model api_user {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  api_key     String?   @unique @default(dbgenerated("gen_random_uuid()"))
  email       String?
  address     String
  chain_id    String
  description String?
  enabled     Boolean?  @default(true)
  created_at  DateTime? @default(now()) @db.Date
  updated_at  DateTime? @default(now()) @db.Date
  chain       chain     @relation(fields: [chain_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([address, chain_id])
  @@index([address], map: "idx_api_user_address")
  @@index([api_key], map: "idx_api_user_api_key")
  @@schema("agora")
}

model chain {
  id         String     @id
  name       String
  created_at DateTime?  @default(now()) @db.Date
  updated_at DateTime?  @default(now()) @db.Date
  api_user   api_user[]

  @@schema("agora")
}

model Ballots {
  address              String                @db.VarChar(255)
  round                Int
  os_only              Boolean               @default(false)
  os_multiplier        Float                 @default(1)
  created_at           DateTime              @default(now()) @db.Timestamptz(6)
  updated_at           DateTime              @default(now()) @db.Timestamptz(6)
  budget               Int?
  allocations          allocations[]
  category_allocations CategoryAllocations[]
  project_allocations  ProjectAllocations[]

  @@id([address, round])
  @@map("ballots")
  @@schema("retro_funding")
}

model allocations {
  address      String       @db.VarChar(255)
  round        Int
  metric_id    String       @db.VarChar(255)
  allocation   Decimal      @default(0) @db.Decimal
  locked       Boolean?     @default(false)
  created_at   DateTime     @default(now()) @db.Timestamptz(6)
  updated_at   DateTime     @default(now()) @db.Timestamptz(6)
  ballots      Ballots      @relation(fields: [address, round], references: [address, round], onDelete: Cascade, onUpdate: NoAction)
  metrics_data metrics_data @relation(fields: [metric_id], references: [metric_id], onDelete: NoAction, onUpdate: NoAction)

  @@id([address, round, metric_id])
  @@schema("retro_funding")
}

model ProjectAllocations {
  address       String            @db.VarChar(255)
  round         Int
  project_id    String            @db.VarChar(255)
  allocation    Decimal?          @db.Decimal
  locked        Boolean?          @default(false)
  rank          Int?
  impact        Int               @default(0)
  created_at    DateTime          @default(now()) @db.Timestamptz(6)
  updated_at    DateTime          @default(now()) @db.Timestamptz(6)
  ballots       Ballots           @relation(fields: [address, round], references: [address, round], onDelete: Cascade, onUpdate: NoAction)
  projects_data ProjectApplicants @relation(fields: [project_id], references: [application_id], onDelete: NoAction, onUpdate: NoAction)

  @@id([address, round, project_id])
  @@map("project_allocations")
  @@schema("retro_funding")
}

model ProjectApplicants {
  application_id          String               @id
  project_id              String?
  round                   String?
  farcaser_id             String?
  name                    String?
  category                String?
  ipfs_data               Json?                @db.Json
  org_id                  String?
  org_name                String?
  org_ipfs_data           Json?                @db.Json
  application_category    String?              @db.VarChar(255)
  application_subcategory Json?
  impact_statement        Json?
  team                    Json?
  ProjectAllocations      ProjectAllocations[]
  categories              Categories?          @relation(fields: [application_category], references: [slug], onDelete: NoAction, onUpdate: NoAction, map: "project_applicants_final_category_slug_fkey")

  @@map("project_applicants_final")
  @@schema("retro_funding")
}

model Categories {
  slug                 String                @id
  name                 String
  description          String
  created_at           DateTime              @default(now()) @db.Timestamptz(6)
  updated_at           DateTime              @default(now()) @db.Timestamptz(6)
  round                Int                   @default(5)
  category_allocations CategoryAllocations[]
  impact_statments     ImpactStatements[]
  project_applicants   ProjectApplicants[]

  @@unique([slug, round], map: "unique_slug_round")
  @@map("categories")
  @@schema("retro_funding")
}

model CategoryAllocations {
  address       String     @db.VarChar(255)
  round         Int
  category_slug String     @db.VarChar(255)
  allocation    Decimal?   @db.Decimal
  locked        Boolean?   @default(false)
  created_at    DateTime   @default(now()) @db.Timestamptz(6)
  updated_at    DateTime   @default(now()) @db.Timestamptz(6)
  ballots       Ballots    @relation(fields: [address, round], references: [address, round], onDelete: Cascade, onUpdate: NoAction)
  categories    Categories @relation(fields: [category_slug, round], references: [slug, round], onDelete: NoAction, onUpdate: NoAction)

  @@id([address, round, category_slug])
  @@map("category_allocations")
  @@schema("retro_funding")
}

model BallotSubmittions {
  address    String   @db.VarChar(255)
  round      Int
  signature  String
  payload    String
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)

  @@id([address, round])
  @@map("ballot_submittions")
  @@schema("retro_funding")
}

model metrics_comments {
  comment_id             Int                      @id @default(autoincrement())
  metric_id              String                   @db.VarChar
  address                String                   @db.VarChar
  comment                String                   @db.VarChar
  created_at             DateTime                 @default(now()) @db.Timestamptz(6)
  updated_at             DateTime                 @default(now()) @db.Timestamptz(6)
  metrics_data           metrics_data             @relation(fields: [metric_id], references: [metric_id], onDelete: NoAction, onUpdate: NoAction)
  metrics_comments_votes metrics_comments_votes[]

  @@schema("retro_funding")
}

model metrics_comments_votes {
  comment_id       Int
  voter            String           @db.VarChar
  vote             Int
  created_at       DateTime         @default(now()) @db.Timestamptz(6)
  updated_at       DateTime         @default(now()) @db.Timestamptz(6)
  metrics_comments metrics_comments @relation(fields: [comment_id], references: [comment_id], onDelete: Cascade, onUpdate: NoAction)

  @@id([comment_id, voter])
  @@schema("retro_funding")
}

model metrics_data {
  metric_id        String             @id @db.VarChar
  name             String             @db.VarChar
  description      String             @db.VarChar
  url              String?            @db.VarChar
  allocations      allocations[]
  metrics_comments metrics_comments[]
  metrics_projects metrics_projects[]
  metrics_views    metrics_views[]

  @@schema("retro_funding")
}

model metrics_projects {
  metric_id     String        @db.VarChar
  project_id    String        @db.VarChar
  is_os         Boolean       @default(false)
  allocation    Decimal       @db.Decimal
  values        Decimal?      @db.Decimal
  metrics_data  metrics_data  @relation(fields: [metric_id], references: [metric_id], onDelete: NoAction, onUpdate: NoAction)
  projects_data projects_data @relation(fields: [project_id], references: [project_id], onDelete: NoAction, onUpdate: NoAction)

  @@id([metric_id, project_id])
  @@schema("retro_funding")
}

model metrics_views {
  metric_id    String       @db.VarChar
  address      String       @db.VarChar
  ts           DateTime     @default(now()) @db.Timestamptz(6)
  metrics_data metrics_data @relation(fields: [metric_id], references: [metric_id], onDelete: NoAction, onUpdate: NoAction)

  @@id([metric_id, address])
  @@schema("retro_funding")
}

model projects_data {
  project_id         String               @id @db.VarChar
  project_name       String               @db.VarChar
  project_image      String?              @db.VarChar
  metrics_projects   metrics_projects[]

  @@schema("retro_funding")
}

model ImpactStatements {
  application_id   String     @id @db.VarChar(255)
  round            Int
  category         String     @db.VarChar(255)
  subcategory      Json?
  impact_statement Json?
  categories       Categories @relation(fields: [category], references: [slug], onDelete: NoAction, onUpdate: NoAction)

  @@map("impact_statements")
  @@schema("retro_funding")
}

model TeamMetadata {
  application_id String @id @db.VarChar(255)
  round          Int
  team           Json?

  @@map("team_metadata")
  @@schema("retro_funding")
}

view projects {
  project_id                         String  @unique
  attestation_id                     String?
  farcaster_id                       String?
  name                               String?
  category                           String?
  parent_project_id                  String?
  metadata_url                       String?
  description                        String?
  project_avatar_url                 String?
  project_cover_image_url            String?
  oso_slug                           String?
  team                               Json?   @db.Json
  github                             Json?   @db.Json
  packages                           Json?   @db.Json
  contracts                          Json?   @db.Json
  social_links_website               Json?   @db.Json
  social_links_farcaster             Json?   @db.Json
  social_links_twitter               String?
  social_links_mirror                String?
  grants_and_funding_venture_funding Json?   @db.Json
  grants_and_funding_grants          Json?   @db.Json
  grants_and_funding_revenue         Json?   @db.Json

  @@schema("retro_funding")
}

view OptimismVotes {
  transaction_hash String       @unique @db.VarChar(66)
  proposal_id      String
  voter            String
  support          String
  weight           Decimal      @db.Decimal
  reason           String?
  block_number     BigInt
  params           String?
  start_block      String?
  description      String?
  proposal_data    Json
  proposal_type    ProposalType
  contract         String?      @db.VarChar(42)
  chain_id         Int?

  @@map("votes")
  @@schema("optimism")
}

view OptimismVotingPower {
  delegate     String  @unique
  voting_power String?
  contract     String  @db.VarChar(42)

  @@map("voting_power")
  @@schema("optimism")
}

view OptimismVotableSupply {
  votable_supply String @unique

  @@map("votable_supply")
  @@schema("optimism")
}

view OptimismDelegates {
  delegate          String   @unique
  num_of_delegators Decimal? @db.Decimal
  direct_vp         Decimal? @db.Decimal
  advanced_vp       Decimal? @db.Decimal
  voting_power      Decimal? @db.Decimal
  contract          String?  @db.VarChar(42)

  @@map("delegates")
  @@schema("optimism")
}

view OptimismProposals {
  proposal_id                String       @unique
  contract                   String       @db.VarChar(42)
  proposer                   String
  description                String?
  ordinal                    Decimal      @db.Decimal
  created_block              BigInt?
  start_block                String
  end_block                  String?
  cancelled_block            BigInt?
  queued_block               BigInt?
  executed_block             BigInt?
  proposal_data              Json?
  proposal_data_raw          String?
  proposal_type              ProposalType
  proposal_type_data         Json?
  proposal_results           Json?
  created_transaction_hash   String?      @db.VarChar(66)
  cancelled_transaction_hash String?      @db.VarChar
  queued_transaction_hash    String?
  executed_transaction_hash  String?      @db.VarChar

  @@map("proposals_v2")
  @@schema("optimism")
}

view OptimismAdvancedDelegatees {
  pair             String  @unique
  from             String
  to               String
  delegated_amount Decimal @db.Decimal
  delegated_share  Decimal @db.Decimal
  block_number     BigInt
  contract         String? @db.VarChar(42)
  transaction_hash String? @db.VarChar(66)

  @@map("advanced_delegatees")
  @@schema("optimism")
}

view OptimismAdvancedVotingPower {
  delegate                 String   @unique
  vp_allowance             Decimal  @db.Decimal
  vp_delegatable_allowance Decimal  @db.Decimal
  delegated_vp             Decimal  @db.Decimal
  advanced_vp              Decimal  @db.Decimal
  subdelegated_share       Decimal? @db.Decimal
  contract                 String   @db.VarChar(42)

  @@map("advanced_voting_power")
  @@schema("optimism")
}

view OptimismAuthorityChainsSnaps {
  id                   String   @unique
  delegate             String
  rules                Json[]
  chain                String[]
  proxy                String
  balance              Decimal  @db.Decimal
  balance_block_number BigInt
  allowance            Decimal  @db.Decimal
  contract             String?  @db.VarChar(42)
  balance_ordinal      Decimal? @db.Decimal

  @@map("authority_chains_snaps")
  @@schema("optimism")
}

view OptimismProposalTypes {
  id                 String @unique
  contract           String @db.VarChar(42)
  block_number       BigInt
  proposal_type_id   String
  quorum             String
  approval_threshold String
  name               String
  inputs             Json

  @@map("proposal_types")
  @@schema("optimism")
}

view OptimismVotingPowerSnaps {
  id                String   @id
  delegate          String?
  balance           String?
  block_number      BigInt?
  ordinal           Decimal? @db.Decimal
  transaction_index Int?
  log_index         Int?

  @@map("voting_power_snaps")
  @@schema("optimism")
}

view OptimismVoterStats {
  voter              String   @unique
  proposals_voted    BigInt?
  participation_rate Float?
  last_10_props      Decimal? @db.Decimal
  for                BigInt?
  abstain            BigInt?
  against            BigInt?
  proposals_proposed BigInt?

  @@map("voter_stats")
  @@schema("optimism")
}

view OptimismDelegatees {
  delegator        String  @unique
  delegatee        String
  block_number     BigInt
  balance          Decimal @db.Decimal
  contract         String? @db.VarChar(42)
  transaction_hash String? @db.VarChar(66)

  @@map("delegatees")
  @@schema("optimism")
}

view OptimismDelegateChangedEvents {
  chain_id          Int
  address           String @db.VarChar(42)
  block_number      BigInt
  block_hash        String @db.VarChar(66)
  log_index         Int
  transaction_index Int
  transaction_hash  String @db.VarChar(66) @unique
  delegator         String
  from_delegate     String
  to_delegate       String

  @@map("delegate_changed_events")
  @@schema("optimism")
}

view ensDelegatees {
  delegator        String  @unique
  delegatee        String
  block_number     BigInt
  balance          Decimal @db.Decimal
  contract         String? @db.VarChar(42)
  transaction_hash String? @db.VarChar(66)

  @@map("delegatees")
  @@schema("ens")
}

view OptimismStakedDeposits {
  deposit_id  BigInt  @unique
  depositor   String
  beneficiary String
  delegatee   String
  amount      Decimal @db.Decimal

  @@map("staked_deposits")
  @@schema("optimism")
}

view ensDelegates {
  delegate          String   @unique
  num_of_delegators Decimal? @db.Decimal
  direct_vp         Decimal? @db.Decimal
  advanced_vp       Decimal? @db.Decimal
  voting_power      Decimal? @db.Decimal
  contract          String?  @db.VarChar(42)

  @@map("delegates")
  @@schema("ens")
}

view ensProposals {
  proposal_id                String       @unique
  contract                   String       @db.VarChar
  proposer                   String
  description                String?
  ordinal                    Decimal      @db.Decimal
  created_block              BigInt?
  start_block                String
  end_block                  String?
  cancelled_block            BigInt?
  queued_block               BigInt?
  executed_block             BigInt?
  proposal_data              Json?
  proposal_data_raw          String?
  proposal_type              ProposalType
  proposal_type_data         Json?
  proposal_results           Json?
  created_transaction_hash   String?      @db.VarChar(66)
  cancelled_transaction_hash String?      @db.VarChar
  queued_transaction_hash    String?      @db.VarChar
  executed_transaction_hash  String?      @db.VarChar

  @@map("proposals_v2")
  @@schema("ens")
}

view ensVotableSupply {
  votable_supply String @unique

  @@map("votable_supply")
  @@schema("ens")
}

view ensVoterStats {
  voter              String   @unique
  proposals_proposed BigInt?
  proposals_voted    BigInt?
  participation_rate Float?
  last_10_props      Decimal? @db.Decimal
  for                BigInt?
  abstain            BigInt?
  against            BigInt?

  @@map("voter_stats")
  @@schema("ens")
}

view ensVotes {
  transaction_hash String       @unique @db.VarChar(66)
  proposal_id      String
  voter            String
  support          String
  weight           Decimal      @db.Decimal
  reason           String?
  block_number     BigInt
  params           String?
  start_block      String?
  description      String?
  proposal_data    Json
  proposal_type    ProposalType
  contract         String?
  chain_id         Int?

  @@map("votes")
  @@schema("ens")
}

view ensVotingPower {
  delegate     String  @unique
  voting_power String?
  contract     String  @db.VarChar(42)

  @@map("voting_power")
  @@schema("ens")
}

view ensVotingPowerSnaps {
  id                String   @id
  delegate          String?
  balance           String?
  block_number      BigInt?
  ordinal           Decimal? @db.Decimal
  transaction_index Int?
  log_index         Int?

  @@map("voting_power_snaps")
  @@schema("ens")
}

view ensAdvancedDelegatees {
  pair             String  @unique
  from             String
  to               String
  delegated_amount Decimal @db.Decimal
  delegated_share  Decimal @db.Decimal
  block_number     BigInt
  contract         String? @db.VarChar
  transaction_hash String?

  @@map("advanced_delegatees")
  @@schema("ens")
}

view ensAdvancedVotingPower {
  delegate                 String   @unique
  vp_allowance             Decimal  @db.Decimal
  vp_delegatable_allowance Decimal  @db.Decimal
  delegated_vp             Decimal  @db.Decimal
  advanced_vp              Decimal  @db.Decimal
  subdelegated_share       Decimal? @db.Decimal
  contract                 String   @db.VarChar

  @@map("advanced_voting_power")
  @@schema("ens")
}

view ensAuthorityChainsSnaps {
  id                   String   @unique
  delegate             String
  rules                Json[]
  chain                String[]
  proxy                String
  balance              Decimal  @db.Decimal
  allowance            Decimal  @db.Decimal
  contract             String?  @db.VarChar
  balance_block_number BigInt
  balance_ordinal      Decimal? @db.Decimal

  @@map("authority_chains_snaps")
  @@schema("ens")
}

view ensProposalTypes {
  id                 String @unique
  contract           String @db.VarChar
  block_number       BigInt
  proposal_type_id   String
  quorum             String
  approval_threshold String
  name               String
  inputs             Json

  @@map("proposal_types")
  @@schema("ens")
}

view ensStakedDeposits {
  deposit_id  BigInt  @unique
  depositor   String
  beneficiary String
  delegatee   String
  amount      Decimal @db.Decimal

  @@map("staked_deposits")
  @@schema("ens")
}

view ensDelegateChangedEvents {
chain_id          Int
  address           String @db.VarChar(42)
  block_number      BigInt
  block_hash        String @db.VarChar(66)
  log_index         Int
  transaction_index Int
  transaction_hash  String @db.VarChar(66) @unique
  delegator         String
  from_delegate     String
  to_delegate       String

  @@map("delegate_changed_events")
  @@schema("ens")
}

view etherfiDelegatees {
  delegator        String  @unique
  delegatee        String
  block_number     BigInt
  balance          Decimal @db.Decimal
  contract         String? @db.VarChar(42)
  transaction_hash String? @db.VarChar(66)

  @@map("delegatees")
  @@schema("etherfi")
}

view etherfiDelegates {
  delegate          String   @unique
  num_of_delegators Decimal? @db.Decimal
  direct_vp         Decimal? @db.Decimal
  advanced_vp       Decimal? @db.Decimal
  voting_power      Decimal? @db.Decimal
  contract          String?  @db.VarChar(42)

  @@map("delegates")
  @@schema("etherfi")
}

view etherfiVotableSupply {
  votable_supply String @unique

  @@map("votable_supply")
  @@schema("etherfi")
}

view etherfiVotingPower {
  delegate     String  @unique
  voting_power String?
  contract     String  @db.VarChar(42)

  @@map("voting_power")
  @@schema("etherfi")
}

view etherfiVotingPowerSnaps {
  id                String   @id
  delegate          String?
  balance           String?
  block_number      BigInt?
  ordinal           Decimal? @db.Decimal
  transaction_index Int?
  log_index         Int?

  @@map("voting_power_snaps")
  @@schema("etherfi")
}

view etherfiProposals {
  proposal_id                String       @unique
  contract                   String       @db.VarChar
  proposer                   String
  description                String?
  ordinal                    Decimal      @db.Decimal
  created_block              BigInt?
  start_block                String
  end_block                  String?
  cancelled_block            BigInt?
  queued_block               BigInt?
  executed_block             BigInt?
  proposal_data              Json?
  proposal_data_raw          String?
  proposal_type              ProposalType
  proposal_type_data         Json?
  proposal_results           Json?
  created_transaction_hash   String?
  queued_transaction_hash    String?
  cancelled_transaction_hash String?
  executed_transaction_hash  String?

  @@map("proposals_v2")
  @@schema("etherfi")
}

view etherfiVoterStats {
  voter              String   @unique
  proposals_voted    BigInt?
  participation_rate Float?
  last_10_props      Decimal? @db.Decimal
  for                BigInt?
  abstain            BigInt?
  against            BigInt?
  proposals_proposed BigInt?

  @@map("voter_stats")
  @@schema("etherfi")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view etherfiVotes {
  transaction_hash String       @unique @db.VarChar
  proposal_id      String
  voter            String
  support          String
  weight           Decimal      @db.Decimal
  reason           String?
  block_number     BigInt
  params           String?
  start_block      String?
  description      String?
  proposal_data    Json
  proposal_type    ProposalType
  contract         String?
  chain_id         Int?

  @@map("votes")
  @@schema("etherfi")
}

view etherfiAdvancedDelegatees {
  pair             String  @unique
  from             String
  to               String
  delegated_amount Decimal @db.Decimal
  delegated_share  Decimal @db.Decimal
  block_number     BigInt
  contract         String? @db.VarChar
  transaction_hash String?

  @@map("advanced_delegatees")
  @@schema("etherfi")
}

view etherfiAdvancedVotingPower {
  delegate                 String   @unique
  vp_allowance             Decimal  @db.Decimal
  vp_delegatable_allowance Decimal  @db.Decimal
  delegated_vp             Decimal  @db.Decimal
  advanced_vp              Decimal  @db.Decimal
  subdelegated_share       Decimal? @db.Decimal
  contract                 String   @db.VarChar

  @@map("advanced_voting_power")
  @@schema("etherfi")
}

view etherfiAuthorityChainsSnaps {
  id                   String   @unique
  delegate             String
  rules                Json[]
  chain                String[]
  proxy                String
  balance              Decimal  @db.Decimal
  allowance            Decimal  @db.Decimal
  contract             String?  @db.VarChar
  balance_block_number BigInt
  balance_ordinal      Decimal? @db.Decimal

  @@map("authority_chains_snaps")
  @@schema("etherfi")
}

view etherfiProposalTypes {
  id                 String @unique
  contract           String @db.VarChar
  block_number       BigInt
  proposal_type_id   String
  quorum             String
  approval_threshold String
  name               String
  inputs             Json

  @@map("proposal_types")
  @@schema("etherfi")
}

view etherfiStakedDeposits {
  deposit_id  BigInt  @unique
  depositor   String
  beneficiary String
  delegatee   String
  amount      Decimal @db.Decimal

  @@map("staked_deposits")
  @@schema("etherfi")
}

view etherfiDelegateChangedEvents {
  chain_id          Int
  address           String @db.VarChar(42)
  block_number      BigInt
  block_hash        String @db.VarChar(66)
  log_index         Int
  transaction_index Int
  transaction_hash  String @db.VarChar(66) @unique
  delegator         String
  from_delegate     String
  to_delegate       String

  @@map("delegate_changed_events")
  @@schema("etherfi")
}

view uniswapDelegatees {
  delegator        String  @unique
  delegatee        String
  block_number     BigInt
  balance          Decimal @db.Decimal
  contract         String? @db.VarChar(42)
  transaction_hash String? @db.VarChar(66)

  @@map("delegatees")
  @@schema("uniswap")
}

view uniswapDelegates {
  delegate          String   @unique
  num_of_delegators Decimal? @db.Decimal
  direct_vp         Decimal? @db.Decimal
  advanced_vp       Decimal? @db.Decimal
  voting_power      Decimal? @db.Decimal
  contract          String?  @db.VarChar(42)

  @@map("delegates")
  @@schema("uniswap")
}

view uniswapVotableSupply {
  votable_supply String @unique

  @@map("votable_supply")
  @@schema("uniswap")
}

view uniswapVotingPower {
  delegate     String  @unique
  voting_power String?
  contract     String  @db.VarChar(42)

  @@map("voting_power")
  @@schema("uniswap")
}

view uniswapVotingPowerSnaps {
  id                String   @id
  delegate          String?
  balance           String?
  block_number      BigInt?
  ordinal           Decimal? @db.Decimal
  transaction_index Int?
  log_index         Int?

  @@map("voting_power_snaps")
  @@schema("uniswap")
}

view uniswapProposals {
  proposal_id                String       @unique
  contract                   String       @db.VarChar
  proposer                   String
  description                String?
  ordinal                    Decimal      @db.Decimal
  created_block              BigInt?
  start_block                String
  end_block                  String?
  cancelled_block            BigInt?
  queued_block               BigInt?
  executed_block             BigInt?
  proposal_data              Json?
  proposal_data_raw          String?
  proposal_type              ProposalType
  proposal_type_data         Json?
  proposal_results           Json?
  created_transaction_hash   String?      @db.VarChar(66)
  cancelled_transaction_hash String?      @db.VarChar
  queued_transaction_hash    String?      @db.VarChar
  executed_transaction_hash  String?      @db.VarChar

  @@map("proposals_v2")
  @@schema("uniswap")
}

view uniswapVoterStats {
  voter              String   @unique
  proposals_voted    BigInt?
  participation_rate Float?
  last_10_props      Decimal? @db.Decimal
  for                BigInt?
  abstain            BigInt?
  against            BigInt?
  proposals_proposed BigInt?

  @@map("voter_stats")
  @@schema("uniswap")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view uniswapVotes {
  transaction_hash String       @unique @db.VarChar
  proposal_id      String
  voter            String
  support          String
  weight           Decimal      @db.Decimal
  reason           String?
  block_number     BigInt
  params           String?
  start_block      String?
  description      String?
  proposal_data    Json
  proposal_type    ProposalType
  contract         String?      @db.VarChar(42)
  chain_id         Int?

  @@map("votes")
  @@schema("uniswap")
}

view uniswapAdvancedDelegatees {
  pair             String  @unique
  from             String
  to               String
  delegated_amount Decimal @db.Decimal
  delegated_share  Decimal @db.Decimal
  block_number     BigInt
  contract         String? @db.VarChar
  transaction_hash String?

  @@map("advanced_delegatees")
  @@schema("uniswap")
}

view uniswapAdvancedVotingPower {
  delegate                 String   @unique
  vp_allowance             Decimal  @db.Decimal
  vp_delegatable_allowance Decimal  @db.Decimal
  delegated_vp             Decimal  @db.Decimal
  advanced_vp              Decimal  @db.Decimal
  subdelegated_share       Decimal? @db.Decimal
  contract                 String   @db.VarChar

  @@map("advanced_voting_power")
  @@schema("uniswap")
}

view uniswapAuthorityChainsSnaps {
  id                   String   @unique
  delegate             String
  rules                Json[]
  chain                String[]
  proxy                String
  balance              Decimal  @db.Decimal
  allowance            Decimal  @db.Decimal
  contract             String?  @db.VarChar
  balance_block_number BigInt
  balance_ordinal      Decimal? @db.Decimal

  @@map("authority_chains_snaps")
  @@schema("uniswap")
}

view uniswapProposalTypes {
  id                 String @unique
  contract           String @db.VarChar
  block_number       BigInt
  proposal_type_id   String
  quorum             String
  approval_threshold String
  name               String
  inputs             Json

  @@map("proposal_types")
  @@schema("uniswap")
}

view uniswapStakedDeposits {
  deposit_id  BigInt  @unique
  depositor   String
  beneficiary String
  delegatee   String
  amount      Decimal @db.Decimal

  @@map("staked_deposits")
  @@schema("uniswap")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view uniswapDelegateChangedEvents {
  chain_id          Int
  address           String @db.VarChar(42)
  block_number      BigInt
  block_hash        String @db.VarChar(66)
  log_index         Int
  transaction_index Int
  transaction_hash  String @db.VarChar(66) @unique
  delegator         String
  from_delegate     String
  to_delegate       String

  @@map("delegate_changed_events")
  @@schema("uniswap")
}

model ProposalDraft {
  id                       Int                        @id @default(autoincrement())
  temp_check_link          String
  proposal_type            String?                    @db.VarChar(50)
  voting_module_type       String?                    @db.VarChar(50)
  proposal_social_type     String?                    @db.VarChar(50)
  title                    String                     @db.VarChar(255)
  abstract                 String
  audit_url                String?
  dao_slug                 DaoSlug
  author_address           String
  sponsor_address          String
  stage                    ProposalStage
  start_date_social        DateTime?                  @db.Timestamp(6)
  end_date_social          DateTime?                  @db.Timestamp(6)
  created_at               DateTime                   @default(now()) @db.Timestamptz(6)
  updated_at               DateTime                   @default(now()) @updatedAt @db.Timestamptz(6)
  onchain_transaction_hash String?                    @db.VarChar(255)
  snapshot_link            String?
  // approval type
  max_options              Int?
  top_choices              Int?
  budget                   Int?
  threshold                Int?
  criteria                 String?
  // end approval type
  contract                 String
  chain_id                 Int
  checklist_items          ProposalChecklist[]
  social_options           ProposalSocialOption[]
  transactions             ProposalDraftTransaction[]
  approval_options         ProposalApprovalOption[]

  @@map("proposals")
  @@schema("alltenant")
}

model ProposalDraftTransaction {
  id               Int           @id @default(autoincrement())
  proposal_id      Int
  proposal_approval_option_id Int?
  order            Int
  target           String        @db.VarChar(255)
  value            String        @db.VarChar(255)
  calldata         String
  description      String
  simulation_state String        @default("UNCONFIRMED") @db.VarChar(255)
  simulation_id    String?       @db.VarChar(255)
  created_at       DateTime      @default(now()) @db.Timestamptz(6)
  updated_at       DateTime      @default(now()) @updatedAt @db.Timestamptz(6)
  proposal         ProposalDraft @relation(fields: [proposal_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  approval_option  ProposalApprovalOption?  @relation(fields: [proposal_approval_option_id], references: [id])

  @@map("proposal_transactions")
  @@schema("alltenant")
}

model ProposalApprovalOption {
  id          Int           @id @default(autoincrement())
  proposal_id Int
  title        String       @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamptz(6)
  updated_at  DateTime      @default(now()) @db.Timestamptz(6)
  proposal    ProposalDraft @relation(fields: [proposal_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  transactions ProposalDraftTransaction[]

  @@map("proposal_approval_options")
  @@schema("alltenant")
}

model ProposalSocialOption {
  id          Int           @id @default(autoincrement())
  proposal_id Int
  text        String        @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamptz(6)
  updated_at  DateTime      @default(now()) @db.Timestamptz(6)
  proposal    ProposalDraft @relation(fields: [proposal_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("proposal_options")
  @@schema("alltenant")
}

model ProposalChecklist {
  id           Int           @id @default(autoincrement())
  title        String        @db.VarChar(255)
  completed_at DateTime      @default(now()) @db.Timestamptz(6)
  completed_by String        @db.VarChar(255)
  link         String?
  proposal_id  Int
  proposal     ProposalDraft @relation(fields: [proposal_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("proposal_checklist_items")
  @@schema("alltenant")
}


/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view advanced_voting_power_raw_snaps {
  chain_str           String?
  delegate            String?
  chain               String[]
  rules               Json[]
  allowance           Decimal? @db.Decimal
  subdelegated_share  Decimal? @db.Decimal
  subdelegated_amount Decimal? @db.Decimal
  balance             Decimal? @db.Decimal
  block_number        BigInt?
  proxy               String?
  contract            String?  @db.VarChar(42)
  ordinal             Decimal? @db.Decimal

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view subdelegations {
  to                   String?
  from                 String?
  from_proxy           String?
  subdelegation_rules  String?
  block_number         BigInt?
  balance              String?
  balance_block_number BigInt?
  contract             String? @db.VarChar(42)

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view subdelegations_snaps {
  to                   String?
  from                 String?
  from_proxy           String?
  subdelegation_rules  String?
  block_number         BigInt?
  balance              String?
  balance_block_number BigInt?
  contract             String?  @db.VarChar(42)
  ordinal              Decimal? @db.Decimal
  balance_ordinal      Decimal? @db.Decimal

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view direct_chains {
  delegate  String?
  rules     Json[]
  chain     String[]
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar(42)

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view authority_chains {
  delegate  String?
  rules     Json[]
  chain     String[]
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar(42)

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view delegates_wrapper {
  delegate          String?
  num_of_delegators Decimal? @db.Decimal
  direct_vp         Decimal? @db.Decimal
  advanced_vp       Decimal? @db.Decimal
  voting_power      Decimal? @db.Decimal

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view direct_chains_snaps {
  delegate             String?
  rules                Json[]
  chain                String[]
  proxy                String?
  balance              Decimal? @db.Decimal
  balance_block_number BigInt?
  allowance            Decimal? @db.Decimal
  contract             String?  @db.VarChar(42)
  balance_ordinal      Decimal? @db.Decimal

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view vote_cast_events {
  transaction_hash String?  @db.VarChar(66)
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?  @db.VarChar(42)
  chain_id         Int?

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view vote_cast_with_params_events {
  transaction_hash String?  @db.VarChar(66)
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?  @db.VarChar(42)
  chain_id         Int?

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view authority_chains_snaps_wrapper {
  delegate             String?
  rules                Json[]
  chain                String[]
  proxy                String?
  balance              Decimal? @db.Decimal
  balance_block_number BigInt?
  allowance            Decimal? @db.Decimal
  contract             String?  @db.VarChar(42)
  balance_ordinal      Decimal? @db.Decimal

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view authority_chains_wrapper {
  delegate  String?
  rules     Json[]
  chain     String[]
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar(42)

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view proposals_wrapper {
  proposal_id                String?
  contract                   String?       @db.VarChar(42)
  proposer                   String?
  description                String?
  ordinal                    Decimal?      @db.Decimal
  created_block              BigInt?
  start_block                String?
  end_block                  String?
  cancelled_block            BigInt?
  executed_block             BigInt?
  proposal_data              Json?
  proposal_data_raw          String?
  proposal_type              ProposalType?
  proposal_type_data         Json?
  proposal_results           Json?
  created_transaction_hash   String?       @db.VarChar(66)
  cancelled_transaction_hash String?       @db.VarChar
  executed_transaction_hash  String?       @db.VarChar
  queued_block               BigInt?
  queued_transaction_hash    String?

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view subdelegation_events {
  to                  String?
  from                String?
  subdelegation_rules String?
  block_number        BigInt?
  contract            String?  @db.VarChar(42)
  ordinal             Decimal? @db.Decimal

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view ens_delegates_wrapper {
  delegate          String?
  num_of_delegators Decimal? @db.Decimal
  direct_vp         Decimal? @db.Decimal
  advanced_vp       Decimal? @db.Decimal
  voting_power      Decimal? @db.Decimal

  @@map("delegates_wrapper")
  @@ignore
  @@schema("ens")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view ens_proposals_wrapper {
  proposal_id                String?
  contract                   String?       @db.VarChar
  proposer                   String?
  description                String?
  ordinal                    Decimal?      @db.Decimal
  created_block              BigInt?
  start_block                String?
  end_block                  String?
  cancelled_block            BigInt?
  executed_block             BigInt?
  proposal_data              Json?
  proposal_data_raw          String?
  proposal_type              ProposalType?
  proposal_type_data         Json?
  proposal_results           Json?
  created_transaction_hash   String?       @db.VarChar
  cancelled_transaction_hash String?       @db.VarChar
  executed_transaction_hash  String?       @db.VarChar

  @@map("proposals_wrapper")
  @@ignore
  @@schema("ens")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view etherfi_delegates_wrapper {
  delegate          String?
  num_of_delegators Decimal? @db.Decimal
  direct_vp         Decimal? @db.Decimal
  advanced_vp       Decimal? @db.Decimal
  voting_power      Decimal? @db.Decimal

  @@map("delegates_wrapper")
  @@ignore
  @@schema("etherfi")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view ens_advanced_voting_power_raw_snaps {
  chain_str           String?
  delegate            String?
  chain               String[]
  rules               Json?
  allowance           Decimal? @db.Decimal
  subdelegated_share  Decimal? @db.Decimal
  subdelegated_amount Decimal? @db.Decimal
  balance             Decimal? @db.Decimal
  block_number        BigInt?
  proxy               String?
  contract            String?  @db.VarChar
  ordinal             Decimal? @db.Decimal

  @@map("advanced_voting_power_raw_snaps")
  @@ignore
  @@schema("ens")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view ens_authority_chains {
  delegate  String?
  rules     Json?
  chain     String[]
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("authority_chains")
  @@ignore
  @@schema("ens")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view etherfi_advanced_voting_power_raw_snaps {
  chain_str           String?
  delegate            String?
  chain               String[]
  rules               Json?
  allowance           Decimal? @db.Decimal
  subdelegated_share  Decimal? @db.Decimal
  subdelegated_amount Decimal? @db.Decimal
  balance             Decimal? @db.Decimal
  block_number        BigInt?
  proxy               String?
  contract            String?  @db.VarChar
  ordinal             Decimal? @db.Decimal

  @@map("advanced_voting_power_raw_snaps")
  @@ignore
  @@schema("etherfi")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view etherfi_authority_chains {
  delegate  String?
  rules     Json?
  chain     String[]
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("authority_chains")
  @@ignore
  @@schema("etherfi")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view ens_vote_cast_events {
  transaction_hash String?  @db.VarChar
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?
  chain_id         Int?

  @@map("vote_cast_events")
  @@ignore
  @@schema("ens")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view ens_vote_cast_with_params_events {
  transaction_hash String?  @db.VarChar
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?
  chain_id         Int?

  @@map("vote_cast_with_params_events")
  @@ignore
  @@schema("ens")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view etherfi_vote_cast_events {
  transaction_hash String?  @db.VarChar
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?
  chain_id         Int?

  @@map("vote_cast_events")
  @@ignore
  @@schema("etherfi")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view etherfi_vote_cast_with_params_events {
  transaction_hash String?  @db.VarChar
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?
  chain_id         Int?

  @@map("vote_cast_with_params_events")
  @@ignore
  @@schema("etherfi")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view uniswap_advanced_voting_power_raw_snaps {
  chain_str           String?
  delegate            String?
  chain               String[]
  rules               Json?
  allowance           Decimal? @db.Decimal
  subdelegated_share  Decimal? @db.Decimal
  subdelegated_amount Decimal? @db.Decimal
  balance             Decimal? @db.Decimal
  block_number        BigInt?
  proxy               String?
  contract            String?  @db.VarChar
  ordinal             Decimal? @db.Decimal

  @@map("advanced_voting_power_raw_snaps")
  @@ignore
  @@schema("uniswap")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view uniswap_authority_chains {
  delegate  String?
  rules     Json?
  chain     String[]
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("authority_chains")
  @@ignore
  @@schema("uniswap")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view uniswap_delegates_wrapper {
  delegate          String?
  num_of_delegators Decimal? @db.Decimal
  direct_vp         Decimal? @db.Decimal
  advanced_vp       Decimal? @db.Decimal
  voting_power      Decimal? @db.Decimal
  contract          String?  @db.VarChar(42)

  @@map("delegates_wrapper")
  @@ignore
  @@schema("uniswap")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view uniswap_direct_chains {
  delegate  String?
  rules     Json?
  chain     String?
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("direct_chains")
  @@ignore
  @@schema("uniswap")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view uniswap_direct_chains_snaps {
  delegate             String?
  rules                Json?
  chain                String?
  proxy                String?
  balance              Decimal? @db.Decimal
  balance_block_number BigInt?
  allowance            Decimal? @db.Decimal
  contract             String?  @db.VarChar
  balance_ordinal      Decimal? @db.Decimal

  @@map("direct_chains_snaps")
  @@ignore
  @@schema("uniswap")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view uniswap_vote_cast_events {
  transaction_hash String?  @db.VarChar(66)
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?  @db.VarChar(42)
  chain_id         Int?

  @@map("vote_cast_events")
  @@ignore
  @@schema("uniswap")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view uniswap_vote_cast_with_params_events {
  transaction_hash String?
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?
  chain_id         Int?

  @@map("vote_cast_with_params_events")
  @@ignore
  @@schema("uniswap")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view delgatees {
  delegator    String?
  delegatee    String?
  block_number BigInt?
  balance      Decimal? @db.Decimal

  @@ignore
  @@schema("optimism")
}


view cyberAdvancedDelegatees {
  pair             String   @unique
  from             String
  to               String
  delegated_amount Decimal  @db.Decimal
  delegated_share  Decimal  @db.Decimal
  block_number     BigInt
  contract         String?  @db.VarChar
  transaction_hash String?

  @@schema("cyber")
  @@map("advanced_delegatees")
}

view cyberAdvancedVotingPower {
  delegate                 String   @unique
  vp_allowance             Decimal  @db.Decimal
  vp_delegatable_allowance Decimal  @db.Decimal
  delegated_vp             Decimal  @db.Decimal
  advanced_vp              Decimal  @db.Decimal
  subdelegated_share       Decimal? @db.Decimal
  contract                 String   @db.VarChar

  @@schema("cyber")
  @@map("advanced_voting_power")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view cyber_advanced_voting_power_raw_snaps {
  chain_str           String?
  delegate            String?
  chain               String[]
  rules               Json?
  allowance           Decimal? @db.Decimal
  subdelegated_share  Decimal? @db.Decimal
  subdelegated_amount Decimal? @db.Decimal
  balance             Decimal? @db.Decimal
  block_number        BigInt?
  proxy               String?
  contract            String?  @db.VarChar
  ordinal             Decimal? @db.Decimal

  @@map("advanced_voting_power_raw_snaps")
  @@ignore
  @@schema("cyber")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view cyber_authority_chains {
  delegate  String?
  rules     Json?
  chain     String[]
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("authority_chains")
  @@ignore
  @@schema("cyber")
}

view cyberAuthorityChainsSnaps {
  id                   String   @unique
  delegate             String
  rules                Json?
  chain                String[]
  proxy                String
  balance              Decimal  @db.Decimal
  allowance            Decimal  @db.Decimal
  contract             String   @db.VarChar
  balance_block_number BigInt?
  balance_ordinal      Decimal? @db.Decimal

  @@schema("cyber")
  @@map("authority_chains_snaps")
}

view cyberDelegateChangedEvents {
  chain_id          Int
  address           String  @db.VarChar(42)
  block_number      BigInt
  block_hash        String  @db.VarChar(66)
  log_index         Int?
  transaction_index Int?
  transaction_hash  String  @db.VarChar(66) @unique
  delegator         String
  from_delegate     String
  to_delegate       String

  @@schema("cyber")
  @@map("delegate_changed_events")
}

view cyberDelegatees {
  delegator        String  @unique
  delegatee        String
  block_number     BigInt
  balance          Decimal @db.Decimal
  contract         String? @db.VarChar(42)
  transaction_hash String? @db.VarChar(66)

  @@schema("cyber")
  @@map("delegatees")
}

view cyberDelegates {
  delegate          String   @unique
  contract          String?  @db.VarChar(42)
  num_of_delegators Decimal  @db.Decimal
  direct_vp         Decimal  @db.Decimal
  advanced_vp       Decimal  @db.Decimal
  voting_power      Decimal  @db.Decimal

  @@schema("cyber")
  @@map("delegates")
}


/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view cyber_delegates_wrapper {
  delegate          String?
  num_of_delegators Decimal? @db.Decimal
  direct_vp         Decimal? @db.Decimal
  advanced_vp       Decimal? @db.Decimal
  voting_power      Decimal? @db.Decimal
  contract          String?  @db.VarChar(42)

  @@map("delegates_wrapper")
  @@ignore
  @@schema("cyber")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view cyber_direct_chains {
  delegate  String?
  rules     Json? // Uh oh, this is a Json[] for optimism, [] for uniswap
  chain     String?
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("direct_chains")
  @@ignore
  @@schema("cyber")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view cyber_direct_chains_snaps {
  delegate             String?
  rules                Json?
  chain                String?
  proxy                String?
  balance              Decimal? @db.Decimal
  balance_block_number BigInt?
  allowance            Decimal? @db.Decimal
  contract             String?  @db.VarChar
  balance_ordinal      Decimal? @db.Decimal

  @@map("direct_chains_snaps")
  @@ignore
  @@schema("cyber")
}

view cyberProposalTypes {
  id                 String @unique
  contract           String @db.VarChar
  block_number       BigInt
  proposal_type_id   String
  quorum             String
  approval_threshold String
  name               String
  inputs             Json

  @@schema("cyber")
  @@map("proposal_types")
}

view cyberProposals {
  proposal_id                String       @unique
  contract                   String       @db.VarChar
  proposer                   String
  description                String?
  ordinal                    Decimal      @db.Decimal
  created_block              BigInt?
  start_block                String
  end_block                  String?
  cancelled_block            BigInt?
  queued_block               BigInt?
  executed_block             BigInt?
  proposal_data              Json?
  proposal_data_raw          String?
  proposal_type              ProposalType
  proposal_type_data         Json?
  proposal_results           Json?
  created_transaction_hash   String?      @db.VarChar(66)
  cancelled_transaction_hash String?      @db.VarChar
  queued_transaction_hash    String?      @db.VarChar
  executed_transaction_hash  String?      @db.VarChar

  @@map("proposals_v2")
  @@schema("cyber")
}

view cyberStakedDeposits {
  deposit_id  BigInt   @unique
  depositor   String
  beneficiary String
  delegatee   String
  amount      Decimal  @db.Decimal

  @@schema("cyber")
  @@map("staked_deposits")
}

view cyberVotableSupply {
  votable_supply String @unique

  @@schema("cyber")
  @@map("votable_supply")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view cyber_vote_cast_events {
  transaction_hash String?  @db.VarChar(66)
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?  @db.VarChar(42)
  chain_id         Int?

  @@map("vote_cast_events")
  @@ignore
  @@schema("cyber")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view cyber_vote_cast_with_params_events {
  transaction_hash String?
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?
  chain_id         Int?

  @@map("vote_cast_with_params_events")
  @@ignore
  @@schema("cyber")
}

view cyberVoterStats {
  voter              String  @unique
  proposals_voted    BigInt?
  participation_rate Float?
  last_10_props      Decimal? @db.Decimal
  for                BigInt?
  abstain            BigInt?
  against            BigInt?
  proposals_proposed BigInt?
  contract           String?  @db.VarChar(42)

  @@schema("cyber")
  @@map("voter_stats")
}

view cyberVotes {
  transaction_hash String       @unique @db.VarChar
  proposal_id      String
  voter            String
  support          String
  weight           Decimal      @db.Decimal
  reason           String?
  block_number     BigInt
  params           String?
  start_block      String?
  description      String?
  proposal_data    Json
  proposal_type    ProposalType
  contract         String?       @db.VarChar(42)
  chain_id         Int?

  @@map("votes")
  @@schema("cyber")
}

view cyberVotingPower {
  delegate     String  @unique
  voting_power String?
  contract     String  @db.VarChar(42)

  @@schema("cyber")
  @@map("voting_power")
}

model changelog {
  id             Int      @id @default(autoincrement())
  dao_slug       DaoSlug
  title          String   @db.VarChar(255)
  body           String
  author_address String   @db.VarChar(255)
  created_at     DateTime @default(now()) @db.Timestamp(6)
  updated_at     DateTime @default(now()) @db.Timestamp(6)

  @@index([dao_slug], map: "idx_changelog_dao_slug")
  @@schema("alltenant")
}

view cyberVotingPowerSnaps {
  id                String   @id
  delegate          String?
  balance           String?
  block_number      BigInt?
  ordinal           Decimal? @db.Decimal
  transaction_index Int?
  log_index         Int?
  contract          String?  @db.VarChar(42)

  @@schema("cyber")
  @@map("voting_power_snaps")
}


// ##############################################
//
//    Scroll
//
// ##############################################


view scrollAdvancedDelegatees {
  pair             String   @unique
  from             String
  to               String
  delegated_amount Decimal  @db.Decimal
  delegated_share  Decimal  @db.Decimal
  block_number     BigInt
  contract         String?  @db.VarChar
  transaction_hash String?

  @@schema("scroll")
  @@map("advanced_delegatees")
}

view scrollAdvancedVotingPower {
  delegate                 String   @unique
  vp_allowance             Decimal  @db.Decimal
  vp_delegatable_allowance Decimal  @db.Decimal
  delegated_vp             Decimal  @db.Decimal
  advanced_vp              Decimal  @db.Decimal
  subdelegated_share       Decimal? @db.Decimal
  contract                 String   @db.VarChar

  @@schema("scroll")
  @@map("advanced_voting_power")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view scroll_advanced_voting_power_raw_snaps {
  chain_str           String?
  delegate            String?
  chain               String[]
  rules               Json?
  allowance           Decimal? @db.Decimal
  subdelegated_share  Decimal? @db.Decimal
  subdelegated_amount Decimal? @db.Decimal
  balance             Decimal? @db.Decimal
  block_number        BigInt?
  proxy               String?
  contract            String?  @db.VarChar
  ordinal             Decimal? @db.Decimal

  @@map("advanced_voting_power_raw_snaps")
  @@ignore
  @@schema("scroll")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view scroll_authority_chains {
  delegate  String?
  rules     Json?
  chain     String[]
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("authority_chains")
  @@ignore
  @@schema("scroll")
}

view scrollAuthorityChainsSnaps {
  id                   String   @unique
  delegate             String
  rules                Json?
  chain                String[]
  proxy                String
  balance              Decimal  @db.Decimal
  allowance            Decimal  @db.Decimal
  contract             String   @db.VarChar
  balance_block_number BigInt?
  balance_ordinal      Decimal? @db.Decimal

  @@schema("scroll")
  @@map("authority_chains_snaps")
}

view scrollDelegateChangedEvents {
  chain_id          Int
  address           String  @db.VarChar(42)
  block_number      BigInt
  block_hash        String  @db.VarChar(66)
  log_index         Int?
  transaction_index Int?
  transaction_hash  String  @db.VarChar(66) @unique
  delegator         String
  from_delegate     String
  to_delegate       String

  @@schema("scroll")
  @@map("delegate_changed_events")
}

view scrollDelegatees {
  delegator        String  @unique
  delegatee        String
  block_number     BigInt
  balance          Decimal @db.Decimal
  contract         String? @db.VarChar(42)
  transaction_hash String? @db.VarChar(66)

  @@schema("scroll")
  @@map("delegatees")
}

view scrollDelegates {
  delegate          String   @unique
  contract          String?  @db.VarChar(42)
  num_of_delegators Decimal  @db.Decimal
  direct_vp         Decimal  @db.Decimal
  advanced_vp       Decimal  @db.Decimal
  voting_power      Decimal  @db.Decimal

  @@schema("scroll")
  @@map("delegates")
}


/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view scroll_delegates_wrapper {
  delegate          String?
  num_of_delegators Decimal? @db.Decimal
  direct_vp         Decimal? @db.Decimal
  advanced_vp       Decimal? @db.Decimal
  voting_power      Decimal? @db.Decimal
  contract          String?  @db.VarChar(42)

  @@map("delegates_wrapper")
  @@ignore
  @@schema("scroll")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view scroll_direct_chains {
  delegate  String?
  rules     Json? // Uh oh, this is a Json[] for optimism, [] for uniswap
  chain     String?
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("direct_chains")
  @@ignore
  @@schema("scroll")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view scroll_direct_chains_snaps {
  delegate             String?
  rules                Json?
  chain                String?
  proxy                String?
  balance              Decimal? @db.Decimal
  balance_block_number BigInt?
  allowance            Decimal? @db.Decimal
  contract             String?  @db.VarChar
  balance_ordinal      Decimal? @db.Decimal

  @@map("direct_chains_snaps")
  @@ignore
  @@schema("scroll")
}

view scrollProposalTypes {
  id                 String @unique
  contract           String @db.VarChar
  block_number       BigInt
  proposal_type_id   String
  quorum             String
  approval_threshold String
  name               String
  inputs             Json

  @@schema("scroll")
  @@map("proposal_types")
}

view scrollProposals {
  proposal_id                String       @unique
  contract                   String       @db.VarChar
  proposer                   String
  description                String?
  ordinal                    Decimal      @db.Decimal
  created_block              BigInt?
  start_block                String
  end_block                  String?
  cancelled_block            BigInt?
  queued_block               BigInt?
  executed_block             BigInt?
  proposal_data              Json?
  proposal_data_raw          String?
  proposal_type              ProposalType
  proposal_type_data         Json?
  proposal_results           Json?
  created_transaction_hash   String?      @db.VarChar(66)
  cancelled_transaction_hash String?      @db.VarChar
  queued_transaction_hash    String?      @db.VarChar
  executed_transaction_hash  String?      @db.VarChar

  @@map("proposals_v2")
  @@schema("scroll")
}

view scrollStakedDeposits {
  deposit_id  BigInt   @unique
  depositor   String
  beneficiary String
  delegatee   String
  amount      Decimal  @db.Decimal

  @@schema("scroll")
  @@map("staked_deposits")
}

view scrollVotableSupply {
  votable_supply String @unique

  @@schema("scroll")
  @@map("votable_supply")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view scroll_vote_cast_events {
  transaction_hash String?  @db.VarChar(66)
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?  @db.VarChar(42)
  chain_id         Int?

  @@map("vote_cast_events")
  @@ignore
  @@schema("scroll")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view scroll_vote_cast_with_params_events {
  transaction_hash String?
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?
  chain_id         Int?

  @@map("vote_cast_with_params_events")
  @@ignore
  @@schema("scroll")
}

view scrollVoterStats {
  voter              String  @unique
  proposals_voted    BigInt?
  participation_rate Float?
  last_10_props      Decimal? @db.Decimal
  for                BigInt?
  abstain            BigInt?
  against            BigInt?
  proposals_proposed BigInt?
  contract           String?  @db.VarChar(42)

  @@schema("scroll")
  @@map("voter_stats")
}

view scrollVotes {
  transaction_hash String       @unique @db.VarChar
  proposal_id      String
  voter            String
  support          String
  weight           Decimal      @db.Decimal
  reason           String?
  block_number     BigInt
  params           String?
  start_block      String?
  description      String?
  proposal_data    Json
  proposal_type    ProposalType
  contract         String?       @db.VarChar(42)
  chain_id         Int?

  @@map("votes")
  @@schema("scroll")
}

view scrollVotingPower {
  delegate     String  @unique
  voting_power String?
  contract     String  @db.VarChar(42)

  @@schema("scroll")
  @@map("voting_power")
}

view scrollVotingPowerSnaps {
  id                String   @id
  delegate          String?
  balance           String?
  block_number      BigInt?
  ordinal           Decimal? @db.Decimal
  transaction_index Int?
  log_index         Int?
  contract          String?  @db.VarChar(42)

  @@schema("scroll")
  @@map("voting_power_snaps")
}



// ##############################################
//
//    Derive
//
// ##############################################


view deriveAdvancedDelegatees {
  pair             String   @unique
  from             String
  to               String
  delegated_amount Decimal  @db.Decimal
  delegated_share  Decimal  @db.Decimal
  block_number     BigInt
  contract         String?  @db.VarChar
  transaction_hash String?

  @@schema("derive")
  @@map("advanced_delegatees")
}

view deriveAdvancedVotingPower {
  delegate                 String   @unique
  vp_allowance             Decimal  @db.Decimal
  vp_delegatable_allowance Decimal  @db.Decimal
  delegated_vp             Decimal  @db.Decimal
  advanced_vp              Decimal  @db.Decimal
  subdelegated_share       Decimal? @db.Decimal
  contract                 String   @db.VarChar

  @@schema("derive")
  @@map("advanced_voting_power")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view derive_advanced_voting_power_raw_snaps {
  chain_str           String?
  delegate            String?
  chain               String[]
  rules               Json?
  allowance           Decimal? @db.Decimal
  subdelegated_share  Decimal? @db.Decimal
  subdelegated_amount Decimal? @db.Decimal
  balance             Decimal? @db.Decimal
  block_number        BigInt?
  proxy               String?
  contract            String?  @db.VarChar
  ordinal             Decimal? @db.Decimal

  @@map("advanced_voting_power_raw_snaps")
  @@ignore
  @@schema("derive")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view derive_authority_chains {
  delegate  String?
  rules     Json?
  chain     String[]
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("authority_chains")
  @@ignore
  @@schema("derive")
}

view deriveAuthorityChainsSnaps {
  id                   String   @unique
  delegate             String
  rules                Json?
  chain                String[]
  proxy                String
  balance              Decimal  @db.Decimal
  allowance            Decimal  @db.Decimal
  contract             String   @db.VarChar
  balance_block_number BigInt?
  balance_ordinal      Decimal? @db.Decimal

  @@schema("derive")
  @@map("authority_chains_snaps")
}

view deriveDelegateChangedEvents {
  chain_id          Int
  address           String  @db.VarChar(42)
  block_number      BigInt
  block_hash        String  @db.VarChar(66)
  log_index         Int?
  transaction_index Int?
  transaction_hash  String  @db.VarChar(66) @unique
  delegator         String
  from_delegate     String
  to_delegate       String

  @@schema("derive")
  @@map("delegate_changed_events")
}

view deriveDelegatees {
  delegator        String  @unique
  delegatee        String
  block_number     BigInt
  balance          Decimal @db.Decimal
  contract         String? @db.VarChar(42)
  transaction_hash String? @db.VarChar(66)

  @@schema("derive")
  @@map("delegatees")
}

view deriveDelegates {
  delegate          String   @unique
  contract          String?  @db.VarChar(42)
  num_of_delegators Decimal  @db.Decimal
  direct_vp         Decimal  @db.Decimal
  advanced_vp       Decimal  @db.Decimal
  voting_power      Decimal  @db.Decimal

  @@schema("derive")
  @@map("delegates")
}


/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view derive_delegates_wrapper {
  delegate          String?
  num_of_delegators Decimal? @db.Decimal
  direct_vp         Decimal? @db.Decimal
  advanced_vp       Decimal? @db.Decimal
  voting_power      Decimal? @db.Decimal
  contract          String?  @db.VarChar(42)

  @@map("delegates_wrapper")
  @@ignore
  @@schema("derive")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view derive_direct_chains {
  delegate  String?
  rules     Json? // Uh oh, this is a Json[] for optimism, [] for uniswap
  chain     String?
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("direct_chains")
  @@ignore
  @@schema("derive")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view derive_direct_chains_snaps {
  delegate             String?
  rules                Json?
  chain                String?
  proxy                String?
  balance              Decimal? @db.Decimal
  balance_block_number BigInt?
  allowance            Decimal? @db.Decimal
  contract             String?  @db.VarChar
  balance_ordinal      Decimal? @db.Decimal

  @@map("direct_chains_snaps")
  @@ignore
  @@schema("derive")
}

view deriveProposalTypes {
  id                 String @unique
  contract           String @db.VarChar
  block_number       BigInt
  proposal_type_id   String
  quorum             String
  approval_threshold String
  name               String
  inputs             Json

  @@schema("derive")
  @@map("proposal_types")
}

view deriveProposals {
  proposal_id                String       @unique
  contract                   String       @db.VarChar
  proposer                   String
  description                String?
  ordinal                    Decimal      @db.Decimal
  created_block              BigInt?
  start_block                String
  end_block                  String?
  cancelled_block            BigInt?
  queued_block               BigInt?
  executed_block             BigInt?
  proposal_data              Json?
  proposal_data_raw          String?
  proposal_type              ProposalType
  proposal_type_data         Json?
  proposal_results           Json?
  created_transaction_hash   String?      @db.VarChar(66)
  cancelled_transaction_hash String?      @db.VarChar
  queued_transaction_hash    String?      @db.VarChar
  executed_transaction_hash  String?      @db.VarChar

  @@map("proposals_v2")
  @@schema("derive")
}

view deriveStakedDeposits {
  deposit_id  BigInt   @unique
  depositor   String
  beneficiary String
  delegatee   String
  amount      Decimal  @db.Decimal

  @@schema("derive")
  @@map("staked_deposits")
}

view deriveVotableSupply {
  votable_supply String @unique

  @@schema("derive")
  @@map("votable_supply")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view derive_vote_cast_events {
  transaction_hash String?  @db.VarChar(66)
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?  @db.VarChar(42)
  chain_id         Int?

  @@map("vote_cast_events")
  @@ignore
  @@schema("derive")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view derive_vote_cast_with_params_events {
  transaction_hash String?
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?
  chain_id         Int?

  @@map("vote_cast_with_params_events")
  @@ignore
  @@schema("derive")
}

view deriveVoterStats {
  voter              String  @unique
  proposals_voted    BigInt?
  participation_rate Float?
  last_10_props      Decimal? @db.Decimal
  for                BigInt?
  abstain            BigInt?
  against            BigInt?
  proposals_proposed BigInt?
  contract           String?  @db.VarChar(42)

  @@schema("derive")
  @@map("voter_stats")
}

view deriveVotes {
  transaction_hash String       @unique @db.VarChar
  proposal_id      String
  voter            String
  support          String
  weight           Decimal      @db.Decimal
  reason           String?
  block_number     BigInt
  params           String?
  start_block      String?
  description      String?
  proposal_data    Json
  proposal_type    ProposalType
  contract         String?       @db.VarChar(42)
  chain_id         Int?

  @@map("votes")
  @@schema("derive")
}

view deriveVotingPower {
  delegate     String  @unique
  voting_power String?
  contract     String  @db.VarChar(42)

  @@schema("derive")
  @@map("voting_power")
}


view deriveVotingPowerSnaps {
  id                String   @id
  delegate          String?
  balance           String?
  block_number      BigInt?
  ordinal           Decimal? @db.Decimal
  transaction_index Int?
  log_index         Int?
  contract          String?  @db.VarChar(42)

  @@schema("derive")
  @@map("voting_power_snaps")
}


// ##############################################
//
//    Protocol Guilde
//
// ##############################################


view pguildAdvancedDelegatees {
  pair             String   @unique
  from             String
  to               String
  delegated_amount Decimal  @db.Decimal
  delegated_share  Decimal  @db.Decimal
  block_number     BigInt
  contract         String?  @db.VarChar
  transaction_hash String?

  @@schema("pguild")
  @@map("advanced_delegatees")
}

view pguildAdvancedVotingPower {
  delegate                 String   @unique
  vp_allowance             Decimal  @db.Decimal
  vp_delegatable_allowance Decimal  @db.Decimal
  delegated_vp             Decimal  @db.Decimal
  advanced_vp              Decimal  @db.Decimal
  subdelegated_share       Decimal? @db.Decimal
  contract                 String   @db.VarChar

  @@schema("pguild")
  @@map("advanced_voting_power")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view pguild_advanced_voting_power_raw_snaps {
  chain_str           String?
  delegate            String?
  chain               String[]
  rules               Json?
  allowance           Decimal? @db.Decimal
  subdelegated_share  Decimal? @db.Decimal
  subdelegated_amount Decimal? @db.Decimal
  balance             Decimal? @db.Decimal
  block_number        BigInt?
  proxy               String?
  contract            String?  @db.VarChar
  ordinal             Decimal? @db.Decimal

  @@map("advanced_voting_power_raw_snaps")
  @@ignore
  @@schema("pguild")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view pguild_authority_chains {
  delegate  String?
  rules     Json?
  chain     String[]
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("authority_chains")
  @@ignore
  @@schema("pguild")
}

view pguildAuthorityChainsSnaps {
  id                   String   @unique
  delegate             String
  rules                Json?
  chain                String[]
  proxy                String
  balance              Decimal  @db.Decimal
  allowance            Decimal  @db.Decimal
  contract             String   @db.VarChar
  balance_block_number BigInt?
  balance_ordinal      Decimal? @db.Decimal

  @@schema("pguild")
  @@map("authority_chains_snaps")
}

view pguildDelegateChangedEvents {
  chain_id          Int
  address           String  @db.VarChar(42)
  block_number      BigInt
  block_hash        String  @db.VarChar(66)
  log_index         Int?
  transaction_index Int?
  transaction_hash  String  @db.VarChar(66) @unique
  delegator         String
  from_delegate     String
  to_delegate       String

  @@schema("pguild")
  @@map("delegate_changed_events")
}

view pguildDelegatees {
  delegator        String  @unique
  delegatee        String
  block_number     BigInt
  balance          Decimal @db.Decimal
  contract         String? @db.VarChar(42)
  transaction_hash String? @db.VarChar(66)

  @@schema("pguild")
  @@map("delegatees")
}

view pguildDelegates {
  delegate          String   @unique
  contract          String?  @db.VarChar(42)
  num_of_delegators Decimal  @db.Decimal
  direct_vp         Decimal  @db.Decimal
  advanced_vp       Decimal  @db.Decimal
  voting_power      Decimal  @db.Decimal

  @@schema("pguild")
  @@map("delegates")
}


/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view pguild_delegates_wrapper {
  delegate          String?
  num_of_delegators Decimal? @db.Decimal
  direct_vp         Decimal? @db.Decimal
  advanced_vp       Decimal? @db.Decimal
  voting_power      Decimal? @db.Decimal
  contract          String?  @db.VarChar(42)

  @@map("delegates_wrapper")
  @@ignore
  @@schema("pguild")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view pguild_direct_chains {
  delegate  String?
  rules     Json? // Uh oh, this is a Json[] for optimism, [] for uniswap
  chain     String?
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("direct_chains")
  @@ignore
  @@schema("pguild")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view pguild_direct_chains_snaps {
  delegate             String?
  rules                Json?
  chain                String?
  proxy                String?
  balance              Decimal? @db.Decimal
  balance_block_number BigInt?
  allowance            Decimal? @db.Decimal
  contract             String?  @db.VarChar
  balance_ordinal      Decimal? @db.Decimal

  @@map("direct_chains_snaps")
  @@ignore
  @@schema("pguild")
}

view pguildProposalTypes {
  id                 String @unique
  contract           String @db.VarChar
  block_number       BigInt
  proposal_type_id   String
  quorum             String
  approval_threshold String
  name               String
  inputs             Json

  @@schema("pguild")
  @@map("proposal_types")
}

view pguildProposals {
  proposal_id                String       @unique
  contract                   String       @db.VarChar
  proposer                   String
  description                String?
  ordinal                    Decimal      @db.Decimal
  created_block              BigInt?
  start_block                String
  end_block                  String?
  cancelled_block            BigInt?
  queued_block               BigInt?
  executed_block             BigInt?
  proposal_data              Json?
  proposal_data_raw          String?
  proposal_type              ProposalType
  proposal_type_data         Json?
  proposal_results           Json?
  created_transaction_hash   String?      @db.VarChar(66)
  cancelled_transaction_hash String?      @db.VarChar
  queued_transaction_hash    String?      @db.VarChar
  executed_transaction_hash  String?      @db.VarChar

  @@map("proposals_v2")
  @@schema("pguild")
}

view pguildStakedDeposits {
  deposit_id  BigInt   @unique
  depositor   String
  beneficiary String
  delegatee   String
  amount      Decimal  @db.Decimal

  @@schema("pguild")
  @@map("staked_deposits")
}

view pguildVotableSupply {
  votable_supply String @unique

  @@schema("pguild")
  @@map("votable_supply")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view pguild_vote_cast_events {
  transaction_hash String?  @db.VarChar(66)
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?  @db.VarChar(42)
  chain_id         Int?

  @@map("vote_cast_events")
  @@ignore
  @@schema("pguild")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view pguild_vote_cast_with_params_events {
  transaction_hash String?
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?
  chain_id         Int?

  @@map("vote_cast_with_params_events")
  @@ignore
  @@schema("pguild")
}

view pguildVoterStats {
  voter              String  @unique
  proposals_voted    BigInt?
  participation_rate Float?
  last_10_props      Decimal? @db.Decimal
  for                BigInt?
  abstain            BigInt?
  against            BigInt?
  proposals_proposed BigInt?
  contract           String?  @db.VarChar(42)

  @@schema("pguild")
  @@map("voter_stats")
}

view pguildVotes {
  transaction_hash String       @unique @db.VarChar
  proposal_id      String
  voter            String
  support          String
  weight           Decimal      @db.Decimal
  reason           String?
  block_number     BigInt
  params           String?
  start_block      String?
  description      String?
  proposal_data    Json
  proposal_type    ProposalType
  contract         String?       @db.VarChar(42)
  chain_id         Int?

  @@map("votes")
  @@schema("pguild")
}

view pguildVotingPower {
  delegate     String  @unique
  voting_power String?
  contract     String  @db.VarChar(42)

  @@schema("pguild")
  @@map("voting_power")
}


view pguildVotingPowerSnaps {
  id                String   @id
  delegate          String?
  balance           String?
  block_number      BigInt?
  ordinal           Decimal? @db.Decimal
  transaction_index Int?
  log_index         Int?
  contract          String?  @db.VarChar(42)

  @@schema("pguild")
  @@map("voting_power_snaps")
}


// ##############################################
//
//    Boost
//
// ##############################################


view boostAdvancedDelegatees {
  pair             String   @unique
  from             String
  to               String
  delegated_amount Decimal  @db.Decimal
  delegated_share  Decimal  @db.Decimal
  block_number     BigInt
  contract         String?  @db.VarChar
  transaction_hash String?

  @@schema("boost")
  @@map("advanced_delegatees")
}

view boostAdvancedVotingPower {
  delegate                 String   @unique
  vp_allowance             Decimal  @db.Decimal
  vp_delegatable_allowance Decimal  @db.Decimal
  delegated_vp             Decimal  @db.Decimal
  advanced_vp              Decimal  @db.Decimal
  subdelegated_share       Decimal? @db.Decimal
  contract                 String   @db.VarChar

  @@schema("boost")
  @@map("advanced_voting_power")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view boost_advanced_voting_power_raw_snaps {
  chain_str           String?
  delegate            String?
  chain               String[]
  rules               Json?
  allowance           Decimal? @db.Decimal
  subdelegated_share  Decimal? @db.Decimal
  subdelegated_amount Decimal? @db.Decimal
  balance             Decimal? @db.Decimal
  block_number        BigInt?
  proxy               String?
  contract            String?  @db.VarChar
  ordinal             Decimal? @db.Decimal

  @@map("advanced_voting_power_raw_snaps")
  @@ignore
  @@schema("boost")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view boost_authority_chains {
  delegate  String?
  rules     Json?
  chain     String[]
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("authority_chains")
  @@ignore
  @@schema("boost")
}

view boostAuthorityChainsSnaps {
  id                   String   @unique
  delegate             String
  rules                Json?
  chain                String[]
  proxy                String
  balance              Decimal  @db.Decimal
  allowance            Decimal  @db.Decimal
  contract             String   @db.VarChar
  balance_block_number BigInt?
  balance_ordinal      Decimal? @db.Decimal

  @@schema("boost")
  @@map("authority_chains_snaps")
}

view boostDelegateChangedEvents {
  chain_id          Int
  address           String  @db.VarChar(42)
  block_number      BigInt
  block_hash        String  @db.VarChar(66)
  log_index         Int?
  transaction_index Int?
  transaction_hash  String  @db.VarChar(66) @unique
  delegator         String
  from_delegate     String
  to_delegate       String

  @@schema("boost")
  @@map("delegate_changed_events")
}

view boostDelegatees {
  delegator        String  @unique
  delegatee        String
  block_number     BigInt
  balance          Decimal @db.Decimal
  contract         String? @db.VarChar(42)
  transaction_hash String? @db.VarChar(66)

  @@schema("boost")
  @@map("delegatees")
}

view boostDelegates {
  delegate          String   @unique
  contract          String?  @db.VarChar(42)
  num_of_delegators Decimal  @db.Decimal
  direct_vp         Decimal  @db.Decimal
  advanced_vp       Decimal  @db.Decimal
  voting_power      Decimal  @db.Decimal

  @@schema("boost")
  @@map("delegates")
}


/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view boost_delegates_wrapper {
  delegate          String?
  num_of_delegators Decimal? @db.Decimal
  direct_vp         Decimal? @db.Decimal
  advanced_vp       Decimal? @db.Decimal
  voting_power      Decimal? @db.Decimal
  contract          String?  @db.VarChar(42)

  @@map("delegates_wrapper")
  @@ignore
  @@schema("boost")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view boost_direct_chains {
  delegate  String?
  rules     Json? // Uh oh, this is a Json[] for optimism, [] for uniswap
  chain     String?
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("direct_chains")
  @@ignore
  @@schema("boost")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view boost_direct_chains_snaps {
  delegate             String?
  rules                Json?
  chain                String?
  proxy                String?
  balance              Decimal? @db.Decimal
  balance_block_number BigInt?
  allowance            Decimal? @db.Decimal
  contract             String?  @db.VarChar
  balance_ordinal      Decimal? @db.Decimal

  @@map("direct_chains_snaps")
  @@ignore
  @@schema("boost")
}

view boostProposalTypes {
  id                 String @unique
  contract           String @db.VarChar
  block_number       BigInt
  proposal_type_id   String
  quorum             String
  approval_threshold String
  name               String
  inputs             Json

  @@schema("boost")
  @@map("proposal_types")
}

view boostProposals {
  proposal_id                String       @unique
  contract                   String       @db.VarChar
  proposer                   String
  description                String?
  ordinal                    Decimal      @db.Decimal
  created_block              BigInt?
  start_block                String
  end_block                  String?
  cancelled_block            BigInt?
  queued_block               BigInt?
  executed_block             BigInt?
  proposal_data              Json?
  proposal_data_raw          String?
  proposal_type              ProposalType
  proposal_type_data         Json?
  proposal_results           Json?
  created_transaction_hash   String?      @db.VarChar(66)
  cancelled_transaction_hash String?      @db.VarChar
  queued_transaction_hash    String?      @db.VarChar
  executed_transaction_hash  String?      @db.VarChar

  @@map("proposals")
  @@schema("boost")
}

view boostStakedDeposits {
  deposit_id  BigInt   @unique
  depositor   String
  beneficiary String
  delegatee   String
  amount      Decimal  @db.Decimal

  @@schema("boost")
  @@map("staked_deposits")
}

view boostVotableSupply {
  votable_supply String @unique

  @@schema("boost")
  @@map("votable_supply")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view boost_vote_cast_events {
  transaction_hash String?  @db.VarChar(66)
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?  @db.VarChar(42)
  chain_id         Int?

  @@map("vote_cast_events")
  @@ignore
  @@schema("boost")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view boost_vote_cast_with_params_events {
  transaction_hash String?
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?
  chain_id         Int?

  @@map("vote_cast_with_params_events")
  @@ignore
  @@schema("boost")
}

view boostVoterStats {
  voter              String  @unique
  proposals_voted    BigInt?
  participation_rate Float?
  last_10_props      Decimal? @db.Decimal
  for                BigInt?
  abstain            BigInt?
  against            BigInt?
  proposals_proposed BigInt?
  contract           String?  @db.VarChar(42)

  @@schema("boost")
  @@map("voter_stats")
}

view boostVotes {
  transaction_hash String       @unique @db.VarChar
  proposal_id      String
  voter            String
  support          String
  weight           Decimal      @db.Decimal
  reason           String?
  block_number     BigInt
  params           String?
  start_block      String?
  description      String?
  proposal_data    Json
  proposal_type    ProposalType
  contract         String?       @db.VarChar(42)
  chain_id         Int?

  @@map("votes")
  @@schema("boost")
}

view boostVotingPower {
  delegate     String  @unique
  voting_power String?
  contract     String  @db.VarChar(42)

  @@schema("boost")
  @@map("voting_power")
}


view boostVotingPowerSnaps {
  id                String   @id
  delegate          String?
  balance           String?
  block_number      BigInt?
  ordinal           Decimal? @db.Decimal
  transaction_index Int?
  log_index         Int?
  contract          String?  @db.VarChar(42)

  @@schema("boost")
  @@map("voting_power_snaps")
}


enum DaoSlug {
  OP
  ENS
  UNI
  NOUNS
  LYRA
  ETHERFI
  UNISWAP
  CYBER
  SCROLL
  DERIVE
  PGUILD
  BOOST

  @@map("dao_slug")
  @@schema("config")
}

enum Chain {
  optimism_mainnet @map("optimism-mainnet")
  ethereum_mainnet @map("ethereum-mainnet")

  @@map("chain")
  @@schema("config")
}

enum ContractType {
  governor
  token
  alligator
  proposal_types_configurator

  @@map("contract_type")
  @@schema("config")
}

enum Dao {
  optimism

  @@map("dao")
  @@schema("config")
}

enum Env {
  dev
  prod

  @@map("env")
  @@schema("config")
}

enum ProposalType {
  STANDARD
  APPROVAL
  OPTIMISTIC
  SNAPSHOT

  @@map("proposal_type")
  @@schema("config")
}

enum ProposalStage {
  ADDING_TEMP_CHECK
  DRAFTING
  ADDING_GITHUB_PR
  AWAITING_SUBMISSION
  PENDING
  ACTIVE
  EXECUTED
  QUEUED
  CANCELED
  DEFEATED
  EXPIRED
  SUCCEEDED

  @@map("proposal_stage")
  @@schema("alltenant")
}
