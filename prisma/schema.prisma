generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema", "views"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["agora", "config", "ens", "etherfi", "optimism", "snapshot", "test"]
}

model DelegateStatements {
  address   String
  dao_slug  DaoSlug
  signature String
  payload   Json
  twitter   String?
  discord   String?
  email     String?
  createdAt DateTime? @default(now()) @map("created_at") @db.Date
  updatedAt DateTime? @default(now()) @map("updated_at") @db.Date

  @@id([address, dao_slug])
  @@index([email], map: "idx_delegate_statements_email")
  @@map("delegate_statements")
  @@schema("agora")
}

model Contracts {
  address       String        @id
  chain         Chain?
  contract_type ContractType?
  dao           String
  env           Env?

  @@map("contracts")
  @@schema("config")
}

model AddressMetadata {
  address    String
  kind       String
  dao_slug   DaoSlug
  metadata   Json?
  created_at DateTime? @default(now()) @db.Timestamptz(6)

  @@id([address, kind, dao_slug])
  @@map("address_metadata")
  @@schema("agora")
}

model SnapshotProposal {
  id             String    @id
  dao_slug       DaoSlug
  author         String?
  body           String?
  choices        String[]
  created        Decimal?  @db.Decimal
  end            Decimal?  @db.Decimal
  link           String?
  network        String?
  scores         Decimal[] @db.Decimal
  scores_state   String?
  scores_total   Decimal?  @db.Decimal
  scores_updated Decimal?  @db.Decimal
  snapshot       String?
  start          Decimal?  @db.Decimal
  state          String?
  title          String?
  type           String?
  votes          Decimal?  @db.Decimal

  @@map("proposals")
  @@schema("snapshot")
}

model api_user {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  api_key     String?   @unique @default(dbgenerated("gen_random_uuid()"))
  email       String?
  address     String
  chain_id    String
  description String?
  enabled     Boolean?  @default(true)
  created_at  DateTime? @default(now()) @db.Date
  updated_at  DateTime? @default(now()) @db.Date
  chain       chain     @relation(fields: [chain_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([address, chain_id])
  @@index([address], map: "idx_api_user_address")
  @@index([api_key], map: "idx_api_user_api_key")
  @@schema("agora")
}

model chain {
  id         String     @id
  name       String
  created_at DateTime?  @default(now()) @db.Date
  updated_at DateTime?  @default(now()) @db.Date
  api_user   api_user[]

  @@schema("agora")
}

view OptimismVotes {
  transaction_hash String       @unique @db.VarChar(66)
  proposal_id      String
  voter            String
  support          String
  weight           Decimal      @db.Decimal
  reason           String?
  block_number     BigInt
  params           String?
  start_block      String?
  description      String?
  proposal_data    Json
  proposal_type    ProposalType

  @@map("votes")
  @@schema("optimism")
}

view OptimismVotingPower {
  delegate     String  @unique
  voting_power String?

  @@map("voting_power")
  @@schema("optimism")
}

view OptimismVotableSupply {
  votable_supply String @unique

  @@map("votable_supply")
  @@schema("optimism")
}

view OptimismDelegates {
  delegate          String   @unique
  num_of_delegators Decimal? @db.Decimal
  direct_vp         Decimal? @db.Decimal
  advanced_vp       Decimal? @db.Decimal
  voting_power      Decimal? @db.Decimal

  @@map("delegates")
  @@schema("optimism")
}

view OptimismProposals {
  proposal_id        String       @unique
  contract           String       @db.VarChar(42)
  proposer           String
  description        String?
  ordinal            Decimal      @db.Decimal
  created_block      BigInt?
  start_block        String
  end_block          String?
  cancelled_block    BigInt?
  executed_block     BigInt?
  proposal_data      Json?
  proposal_data_raw  String?
  proposal_type      ProposalType
  proposal_type_data Json?
  proposal_results   Json?

  @@map("proposals")
  @@schema("optimism")
}

view OptimismAdvancedDelegatees {
  pair             String  @unique
  from             String
  to               String
  delegated_amount Decimal @db.Decimal
  delegated_share  Decimal @db.Decimal
  block_number     BigInt
  contract         String? @db.VarChar(42)

  @@map("advanced_delegatees")
  @@schema("optimism")
}

view OptimismAdvancedVotingPower {
  delegate                 String   @unique
  vp_allowance             Decimal  @db.Decimal
  vp_delegatable_allowance Decimal  @db.Decimal
  delegated_vp             Decimal  @db.Decimal
  advanced_vp              Decimal  @db.Decimal
  subdelegated_share       Decimal? @db.Decimal
  contract                 String?  @db.VarChar(42)

  @@map("advanced_voting_power")
  @@schema("optimism")
}

view OptimismAuthorityChainsSnaps {
  id                   String   @unique
  delegate             String
  rules                Json[]
  chain                String[]
  proxy                String
  balance              Decimal  @db.Decimal
  balance_block_number BigInt
  allowance            Decimal  @db.Decimal
  contract             String?  @db.VarChar(42)
  balance_ordinal      Decimal? @db.Decimal

  @@map("authority_chains_snaps")
  @@schema("optimism")
}

view OptimismProposalTypes {
  id                 String @unique
  contract           String @db.VarChar(42)
  block_number       BigInt
  proposal_type_id   String
  quorum             String
  approval_threshold String
  name               String
  inputs             Json

  @@map("proposal_types")
  @@schema("optimism")
}

view OptimismVotingPowerSnaps {
  id           String   @id
  delegate     String?
  balance      String?
  block_number BigInt?
  ordinal      Decimal? @db.Decimal

  @@map("voting_power_snaps")
  @@schema("optimism")
}

view OptimismVoterStats {
  voter              String   @unique
  proposals_voted    BigInt?
  participation_rate Float?
  last_10_props      Decimal? @db.Decimal
  for                BigInt?
  abstain            BigInt?
  against            BigInt?

  @@map("voter_stats")
  @@schema("optimism")
}

view OptimismDelegatees {
  delegator    String  @unique
  delegatee    String
  block_number BigInt
  balance      Decimal @db.Decimal

  @@map("delegatees")
  @@schema("optimism")
}

view ensDelegatees {
  delegator    String  @unique
  delegatee    String
  block_number BigInt
  balance      Decimal @db.Decimal

  @@map("delegatees")
  @@schema("ens")
}

view ensDelegates {
  delegate          String   @unique
  num_of_delegators Decimal? @db.Decimal
  direct_vp         Decimal? @db.Decimal
  advanced_vp       Decimal? @db.Decimal
  voting_power      Decimal? @db.Decimal

  @@map("delegates")
  @@schema("ens")
}

view ensProposals {
  proposal_id        String       @unique
  contract           String       @db.VarChar
  proposer           String
  description        String?
  ordinal            Decimal      @db.Decimal
  created_block      BigInt?
  start_block        String
  end_block          String?
  cancelled_block    BigInt?
  executed_block     BigInt?
  proposal_data      Json?
  proposal_data_raw  String?
  proposal_type      ProposalType
  proposal_type_data Json?
  proposal_results   Json?

  @@map("proposals")
  @@schema("ens")
}

view ensVotableSupply {
  votable_supply String @unique

  @@map("votable_supply")
  @@schema("ens")
}

view ensVoterStats {
  voter              String   @unique
  proposals_proposed BigInt?
  proposals_voted    BigInt?
  participation_rate Float?
  last_10_props      Decimal? @db.Decimal
  for                BigInt?
  abstain            BigInt?
  against            BigInt?

  @@map("voter_stats")
  @@schema("ens")
}

view ensVotes {
  transaction_hash String       @unique @db.VarChar(66)
  proposal_id      String
  voter            String
  support          String
  weight           Decimal      @db.Decimal
  reason           String?
  block_number     BigInt
  params           String?
  start_block      String?
  description      String?
  proposal_data    Json
  proposal_type    ProposalType

  @@map("votes")
  @@schema("ens")
}

view ensVotingPower {
  delegate     String  @unique
  voting_power String?

  @@map("voting_power")
  @@schema("ens")
}

view ensVotingPowerSnaps {
  id           String   @id
  delegate     String?
  balance      String?
  block_number BigInt?
  ordinal      Decimal? @db.Decimal

  @@map("voting_power_snaps")
  @@schema("ens")
}

view ensAdvancedDelegatees {
  pair             String  @unique
  from             String
  to               String
  delegated_amount Decimal @db.Decimal
  delegated_share  Decimal @db.Decimal
  block_number     BigInt
  contract         String? @db.VarChar

  @@map("advanced_delegatees")
  @@schema("ens")
}

view ensAdvancedVotingPower {
  delegate                 String   @unique
  vp_allowance             Decimal  @db.Decimal
  vp_delegatable_allowance Decimal  @db.Decimal
  delegated_vp             Decimal  @db.Decimal
  advanced_vp              Decimal  @db.Decimal
  subdelegated_share       Decimal? @db.Decimal
  contract                 String?  @db.VarChar

  @@map("advanced_voting_power")
  @@schema("ens")
}

view ensAuthorityChainsSnaps {
  id                   String   @unique
  delegate             String
  rules                Json[]
  chain                String[]
  proxy                String
  balance              Decimal  @db.Decimal
  allowance            Decimal  @db.Decimal
  contract             String?  @db.VarChar
  balance_block_number BigInt
  balance_ordinal      Decimal? @db.Decimal

  @@map("authority_chains_snaps")
  @@schema("ens")
}

view ensProposalTypes {
  id                 String @unique
  contract           String @db.VarChar
  block_number       BigInt
  proposal_type_id   String
  quorum             String
  approval_threshold String
  name               String
  inputs             Json

  @@map("proposal_types")
  @@schema("ens")
}

view etherfiDelegatees {
  delegator    String  @unique
  delegatee    String
  block_number BigInt
  balance      Decimal @db.Decimal

  @@map("delegatees")
  @@schema("etherfi")
}

view etherfiDelegates {
  delegate          String   @unique
  num_of_delegators Decimal? @db.Decimal
  direct_vp         Decimal? @db.Decimal
  advanced_vp       Decimal? @db.Decimal
  voting_power      Decimal? @db.Decimal

  @@map("delegates")
  @@schema("etherfi")
}

view etherfiVotableSupply {
  votable_supply String @unique

  @@map("votable_supply")
  @@schema("etherfi")
}

view etherfiVotingPower {
  delegate     String  @unique
  voting_power String?

  @@map("voting_power")
  @@schema("etherfi")
}

view etherfiVotingPowerSnaps {
  id           String   @id
  delegate     String?
  balance      String?
  block_number BigInt?
  ordinal      Decimal? @db.Decimal

  @@map("voting_power_snaps")
  @@schema("etherfi")
}

view etherfiProposals {
  proposal_id        String       @unique
  contract           String       @db.VarChar
  proposer           String
  description        String?
  ordinal            Decimal      @db.Decimal
  created_block      BigInt?
  start_block        String
  end_block          String?
  cancelled_block    BigInt?
  executed_block     BigInt?
  proposal_data      Json?
  proposal_data_raw  String?
  proposal_type      ProposalType
  proposal_type_data Json?
  proposal_results   Json?

  @@map("proposals")
  @@schema("etherfi")
}

view etherfiVoterStats {
  voter              String   @unique
  proposals_voted    BigInt?
  participation_rate Float?
  last_10_props      Decimal? @db.Decimal
  for                BigInt?
  abstain            BigInt?
  against            BigInt?

  @@map("voter_stats")
  @@schema("etherfi")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view etherfiVotes {
  transaction_hash String       @unique @db.VarChar
  proposal_id      String
  voter            String
  support          String
  weight           Decimal      @db.Decimal
  reason           String?
  block_number     BigInt
  params           String?
  start_block      String?
  description      String?
  proposal_data    Json
  proposal_type    ProposalType

  @@map("votes")
  @@schema("etherfi")
}

view etherfiAdvancedDelegatees {
  pair             String  @unique
  from             String
  to               String
  delegated_amount Decimal @db.Decimal
  delegated_share  Decimal @db.Decimal
  block_number     BigInt
  contract         String? @db.VarChar

  @@map("advanced_delegatees")
  @@schema("etherfi")
}

view etherfiAdvancedVotingPower {
  delegate                 String   @unique
  vp_allowance             Decimal  @db.Decimal
  vp_delegatable_allowance Decimal  @db.Decimal
  delegated_vp             Decimal  @db.Decimal
  advanced_vp              Decimal  @db.Decimal
  subdelegated_share       Decimal? @db.Decimal
  contract                 String?  @db.VarChar

  @@map("advanced_voting_power")
  @@schema("etherfi")
}

view etherfiAuthorityChainsSnaps {
  id                   String   @unique
  delegate             String
  rules                Json[]
  chain                String[]
  proxy                String
  balance              Decimal  @db.Decimal
  allowance            Decimal  @db.Decimal
  contract             String?  @db.VarChar
  balance_block_number BigInt
  balance_ordinal      Decimal? @db.Decimal

  @@map("authority_chains_snaps")
  @@schema("etherfi")
}

view etherfiProposalTypes {
  id                 String @unique
  contract           String @db.VarChar
  block_number       BigInt
  proposal_type_id   String
  quorum             String
  approval_threshold String
  name               String
  inputs             Json

  @@map("proposal_types")
  @@schema("etherfi")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view advanced_voting_power_raw_snaps {
  chain_str           String?
  delegate            String?
  chain               String[]
  rules               Json[]
  allowance           Decimal? @db.Decimal
  subdelegated_share  Decimal? @db.Decimal
  subdelegated_amount Decimal? @db.Decimal
  balance             Decimal? @db.Decimal
  block_number        BigInt?
  proxy               String?
  contract            String?  @db.VarChar(42)
  ordinal             Decimal? @db.Decimal

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view subdelegations {
  to                   String?
  from                 String?
  from_proxy           String?
  subdelegation_rules  String?
  block_number         BigInt?
  balance              String?
  balance_block_number BigInt?
  contract             String? @db.VarChar(42)

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view subdelegations_snaps {
  to                   String?
  from                 String?
  from_proxy           String?
  subdelegation_rules  String?
  block_number         BigInt?
  balance              String?
  balance_block_number BigInt?
  contract             String?  @db.VarChar(42)
  ordinal              Decimal? @db.Decimal
  balance_ordinal      Decimal? @db.Decimal

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view direct_chains {
  delegate  String?
  rules     Json[]
  chain     String[]
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar(42)

  @@ignore
  @@schema("optimism")
}

model Daos {
  id                Int                 @id @default(autoincrement())
  name              String              @unique
  dao_slug          String              @unique
  Proposals         ProposalDraft[]
  DaoProposalStatus DaoProposalStatus[]

  @@map("daos")
  @@schema("test")
}

model ProposalDraft {
  id                          Int                        @id @default(autoincrement())
  temp_check_link             String
  proposal_type               String
  title                       String
  description                 String
  abstract                    String
  audit_url                   String?
  dao_slug                    String
  author_address              String
  sponsor_address             String?
  txs_simulated_and_passed_at DateTime?
  temp_check_added_at         DateTime?
  created_at                  DateTime                   @default(now())
  updated_at                  DateTime                   @updatedAt
  onchain_transaction_hash    String?
  voting_strategy_social      String?
  start_date_social           DateTime?
  end_date_social             DateTime?
  proposal_status_id          Int
  transactions                ProposalDraftTransaction[]
  ProposalDaoAttributes       ProposalDaoAttributes[]
  // ProposalEventLog             ProposalEventLog[]
  dao                         Daos                       @relation(fields: [dao_slug], references: [dao_slug], onDelete: Restrict)
  proposal_status             DaoProposalStatus          @relation(fields: [proposal_status_id], references: [id], onDelete: Restrict)
  ProposalDraftOption         ProposalDraftOption[]
  ProposalChecklist           ProposalChecklist[]

  @@map("proposals")
  @@schema("test")
}

model ProposalDraftTransaction {
  id               Int           @id @default(autoincrement())
  proposal_id      Int
  order            Int
  target           String        @db.VarChar(255)
  value            String        @db.VarChar(255)
  calldata         String
  function_details String
  contract_abi     String
  description      String
  is_valid         Boolean
  type             String        @db.VarChar(32)
  created_at       DateTime      @default(now()) @db.Timestamptz(6)
  updated_at       DateTime      @default(now()) @updatedAt @db.Timestamptz(6)
  transfer_amount  Decimal?      @db.Decimal
  transfer_to      String?       @db.VarChar(255)
  token_address    String?       @db.VarChar(255)
  proposal         ProposalDraft @relation(fields: [proposal_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("proposal_transactions")
  @@schema("test")
}

model ProposalDraftOption {
  id          Int           @id @default(autoincrement())
  proposal_id Int
  text        String
  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt
  proposal    ProposalDraft @relation(fields: [proposal_id], references: [id], onDelete: Cascade)

  @@map("proposal_options")
  @@schema("test")
}

model ProposalStatus {
  id                Int                 @id @default(autoincrement())
  status            String              @unique
  DaoProposalStatus DaoProposalStatus[]

  @@map("proposal_status")
  @@schema("test")
}

model ProposalChecklist {
  id           Int           @id @default(autoincrement())
  stage        String
  completed_at DateTime      @default(now())
  completed_by String
  proposal_id  Int
  proposal     ProposalDraft @relation(fields: [proposal_id], references: [id], onDelete: Cascade)

  @@map("proposal_checklist")
  @@schema("test")
}

model DaoProposalStatus {
  id                 Int             @id @default(autoincrement())
  dao_id             Int
  proposal_status_id Int
  ordinal            Int
  Daos               Daos            @relation(fields: [dao_id], references: [id], onDelete: Cascade)
  ProposalStatus     ProposalStatus  @relation(fields: [proposal_status_id], references: [id], onDelete: Cascade)
  Proposals          ProposalDraft[]

  @@unique([dao_id, proposal_status_id])
  @@map("dao_proposal_status")
  @@schema("test")
}

model ProposalDaoAttributes {
  id              Int           @id @default(autoincrement())
  proposal_id     Int
  attribute_key   String
  attribute_value String
  proposal        ProposalDraft @relation(fields: [proposal_id], references: [id], onDelete: Cascade)

  @@map("proposal_dao_attributes")
  @@schema("test")
}

// Commenting out since it's not required for version 0.1
// model ProposalEventLog {
//   id                Int               @id @default(autoincrement())
//   proposal_id       Int
//   previous_status_id Int?
//   new_status_id     Int
//   address           String
//   created_at        DateTime         @default(now())
//   updated_at        DateTime         @updatedAt
//   proposal          Proposals        @relation(fields: [proposal_id], references: [id], onDelete: Cascade)
//   previous_status   DaoProposalStatus? @relation("previous_status", fields: [previous_status_id], references: [id], onDelete: SetNull)
//   new_status        DaoProposalStatus  @relation("new_status", fields: [new_status_id], references: [id], onDelete: Cascade)

//   @@map("proposal_event_log")
//   @@schema("test")
// }

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view authority_chains {
  delegate  String?
  rules     Json[]
  chain     String[]
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar(42)

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view delegates_wrapper {
  delegate          String?
  num_of_delegators Decimal? @db.Decimal
  direct_vp         Decimal? @db.Decimal
  advanced_vp       Decimal? @db.Decimal
  voting_power      Decimal? @db.Decimal

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view direct_chains_snaps {
  delegate             String?
  rules                Json[]
  chain                String[]
  proxy                String?
  balance              Decimal? @db.Decimal
  balance_block_number BigInt?
  allowance            Decimal? @db.Decimal
  contract             String?  @db.VarChar(42)
  balance_ordinal      Decimal? @db.Decimal

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view vote_cast_events {
  transaction_hash String?  @db.VarChar(66)
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view vote_cast_with_params_events {
  transaction_hash String?  @db.VarChar(66)
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view authority_chains_snaps_wrapper {
  delegate             String?
  rules                Json[]
  chain                String[]
  proxy                String?
  balance              Decimal? @db.Decimal
  balance_block_number BigInt?
  allowance            Decimal? @db.Decimal
  contract             String?  @db.VarChar(42)
  balance_ordinal      Decimal? @db.Decimal

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view authority_chains_wrapper {
  delegate  String?
  rules     Json[]
  chain     String[]
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar(42)

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view proposals_wrapper {
  proposal_id        String?
  contract           String?       @db.VarChar(42)
  proposer           String?
  description        String?
  ordinal            Decimal?      @db.Decimal
  created_block      BigInt?
  start_block        String?
  end_block          String?
  cancelled_block    BigInt?
  executed_block     BigInt?
  proposal_data      Json?
  proposal_data_raw  String?
  proposal_type      ProposalType?
  proposal_type_data Json?
  proposal_results   Json?

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view subdelegation_events {
  to                  String?
  from                String?
  subdelegation_rules String?
  block_number        BigInt?
  contract            String?  @db.VarChar(42)
  ordinal             Decimal? @db.Decimal

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view ens_delegates_wrapper {
  delegate          String?
  num_of_delegators Decimal? @db.Decimal
  direct_vp         Decimal? @db.Decimal
  advanced_vp       Decimal? @db.Decimal
  voting_power      Decimal? @db.Decimal

  @@map("delegates_wrapper")
  @@ignore
  @@schema("ens")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view ens_proposals_wrapper {
  proposal_id        String?
  contract           String?       @db.VarChar
  proposer           String?
  description        String?
  ordinal            Decimal?      @db.Decimal
  created_block      BigInt?
  start_block        String?
  end_block          String?
  cancelled_block    BigInt?
  executed_block     BigInt?
  proposal_data      Json?
  proposal_data_raw  String?
  proposal_type      ProposalType?
  proposal_type_data Json?
  proposal_results   Json?

  @@map("proposals_wrapper")
  @@ignore
  @@schema("ens")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view etherfi_delegates_wrapper {
  delegate          String?
  num_of_delegators Decimal? @db.Decimal
  direct_vp         Decimal? @db.Decimal
  advanced_vp       Decimal? @db.Decimal
  voting_power      Decimal? @db.Decimal

  @@map("delegates_wrapper")
  @@ignore
  @@schema("etherfi")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view ens_advanced_voting_power_raw_snaps {
  chain_str           String?
  delegate            String?
  chain               String[]
  rules               Json?
  allowance           Decimal? @db.Decimal
  subdelegated_share  Decimal? @db.Decimal
  subdelegated_amount Decimal? @db.Decimal
  balance             Decimal? @db.Decimal
  block_number        BigInt?
  proxy               String?
  contract            String?  @db.VarChar
  ordinal             Decimal? @db.Decimal

  @@map("advanced_voting_power_raw_snaps")
  @@ignore
  @@schema("ens")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view ens_authority_chains {
  delegate  String?
  rules     Json?
  chain     String[]
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("authority_chains")
  @@ignore
  @@schema("ens")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view etherfi_advanced_voting_power_raw_snaps {
  chain_str           String?
  delegate            String?
  chain               String[]
  rules               Json?
  allowance           Decimal? @db.Decimal
  subdelegated_share  Decimal? @db.Decimal
  subdelegated_amount Decimal? @db.Decimal
  balance             Decimal? @db.Decimal
  block_number        BigInt?
  proxy               String?
  contract            String?  @db.VarChar
  ordinal             Decimal? @db.Decimal

  @@map("advanced_voting_power_raw_snaps")
  @@ignore
  @@schema("etherfi")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view etherfi_authority_chains {
  delegate  String?
  rules     Json?
  chain     String[]
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("authority_chains")
  @@ignore
  @@schema("etherfi")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view ens_vote_cast_events {
  transaction_hash String?  @db.VarChar
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?

  @@map("vote_cast_events")
  @@ignore
  @@schema("ens")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view ens_vote_cast_with_params_events {
  transaction_hash String?  @db.VarChar
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?

  @@map("vote_cast_with_params_events")
  @@ignore
  @@schema("ens")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view etherfi_vote_cast_events {
  transaction_hash String?  @db.VarChar
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?

  @@map("vote_cast_events")
  @@ignore
  @@schema("etherfi")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view etherfi_vote_cast_with_params_events {
  transaction_hash String?  @db.VarChar
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?

  @@map("vote_cast_with_params_events")
  @@ignore
  @@schema("etherfi")
}

enum DaoSlug {
  OP
  ENS
  UNI
  NOUNS
  LYRA
  ETHERFI

  @@map("dao_slug")
  @@schema("config")
}

enum Chain {
  optimism_mainnet @map("optimism-mainnet")
  ethereum_mainnet @map("ethereum-mainnet")

  @@map("chain")
  @@schema("config")
}

enum ContractType {
  governor
  token
  alligator
  proposal_types_configurator

  @@map("contract_type")
  @@schema("config")
}

enum Dao {
  optimism

  @@map("dao")
  @@schema("config")
}

enum Env {
  dev
  prod

  @@map("env")
  @@schema("config")
}

enum ProposalType {
  STANDARD
  APPROVAL
  OPTIMISTIC
  SNAPSHOT

  @@map("proposal_type")
  @@schema("config")
}
