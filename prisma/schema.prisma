generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema", "views"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["agora", "config", "optimism"]
}

model DelegateStatements {
  address   String
  dao_slug  DaoSlug
  signature String
  payload   Json
  twitter   String?
  discord   String?
  email     String?
  createdAt DateTime? @default(now()) @map("created_at") @db.Date
  updatedAt DateTime? @default(now()) @map("updated_at") @db.Date

  @@id([address, dao_slug])
  @@index([email], map: "idx_delegate_statements_email")
  @@map("delegate_statements")
  @@schema("agora")
}

model Contracts {
  address       String        @id
  chain         Chain?
  contract_type ContractType?
  dao           String
  env           Env?

  @@map("contracts")
  @@schema("config")
}

model AddressMetadata {
  address    String
  kind       String
  dao_slug   DaoSlug
  metadata   Json?
  created_at DateTime? @default(now()) @db.Timestamptz(6)

  @@id([address, kind, dao_slug])
  @@map("address_metadata")
  @@schema("agora")
}

view OptimismVotes {
  transaction_hash String       @unique @db.VarChar(66)
  proposal_id      String
  voter            String
  support          String
  weight           Decimal      @db.Decimal
  reason           String?
  block_number     BigInt
  params           String?
  start_block      String?
  description      String?
  proposal_data    Json
  proposal_type    ProposalType

  @@map("votes")
  @@schema("optimism")
}

view OptimismVotingPower {
  delegate     String  @unique
  voting_power String?

  @@map("voting_power")
  @@schema("optimism")
}

view OptimismVotableSupply {
  votable_supply String @unique

  @@map("votable_supply")
  @@schema("optimism")
}

view OptimismDelegates {
  delegate          String   @unique
  num_of_delegators Decimal? @db.Decimal
  direct_vp         Decimal? @db.Decimal
  advanced_vp       Decimal? @db.Decimal
  voting_power      Decimal? @db.Decimal

  @@map("delegates")
  @@schema("optimism")
}

view OptimismProposals {
  proposal_id        String       @unique
  contract           String?      @db.VarChar(42)
  proposer           String
  description        String?
  ordinal            Decimal?     @db.Decimal
  created_block      BigInt
  start_block        String
  end_block          String
  cancelled_block    BigInt?
  executed_block     BigInt?
  proposal_data      Json?
  proposal_type      ProposalType
  proposal_type_data Json?
  proposal_results   Json?

  @@map("proposals")
  @@schema("optimism")
}

view OptimismAdvancedDelegatees {
  pair             String  @unique
  from             String
  to               String
  delegated_amount Decimal @db.Decimal
  delegated_share  Decimal @db.Decimal
  block_number     BigInt
  contract         String? @db.VarChar(42)

  @@map("advanced_delegatees")
  @@schema("optimism")
}

view OptimismAdvancedVotingPower {
  delegate           String   @unique
  vp_allowance       Decimal  @db.Decimal
  delegated_vp       Decimal  @db.Decimal
  advanced_vp        Decimal  @db.Decimal
  subdelegated_share Decimal? @db.Decimal
  contract           String?  @db.VarChar(42)

  @@map("advanced_voting_power")
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view advanced_voting_power_raw_snaps {
  chain_str          String?
  delegate           String?
  chain              String[]
  rules              Json[]
  allowance          Decimal? @db.Decimal
  subdelegated_share Decimal? @db.Decimal
  balance            Decimal? @db.Decimal
  block_number       BigInt?
  proxy              String?
  contract           String?  @db.VarChar(42)

  @@ignore
  @@schema("optimism")
}

view OptimismAuthorityChainsSnaps {
  id                   String   @unique
  delegate             String
  rules                Json[]
  chain                String[]
  proxy                String
  balance              Decimal  @db.Decimal
  balance_block_number BigInt
  allowance            Decimal  @db.Decimal
  contract             String?  @db.VarChar(42)

  @@map("authority_chains_snaps")
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view subdelegations {
  to                   String?
  from                 String?
  from_proxy           String?
  subdelegation_rules  String?
  block_number         BigInt?
  balance              String?
  balance_block_number BigInt?
  contract             String? @db.VarChar(42)

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view subdelegations_snaps {
  to                   String?
  from                 String?
  from_proxy           String?
  subdelegation_rules  String?
  block_number         BigInt?
  balance              String?
  balance_block_number BigInt?
  contract             String? @db.VarChar(42)

  @@ignore
  @@schema("optimism")
}

view OptimismDelegatees {
  delegator    String  @unique
  delegatee    String
  block_number BigInt
  balance      Decimal @db.Decimal

  @@map("delegatees")
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view direct_chains {
  delegate  String?
  rules     Json[]
  chain     String[]
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar(42)

  @@ignore
  @@schema("optimism")
}

view OptimismProposalTypes {
  id                 String @unique
  contract           String @db.VarChar(42)
  block_number       BigInt
  proposal_type_id   String
  quorum             String
  approval_threshold String
  name               String
  inputs             Json

  @@map("proposal_types")
  @@schema("optimism")
}

view OptimismVotingPowerSnaps {
  id           String   @id
  delegate     String?
  balance      String?
  block_number BigInt?
  ordinal      Decimal? @db.Decimal

  @@map("voting_power_snaps")
  @@schema("optimism")
}

view OptimismVoterStats {
  voter              String   @unique
  proposals_voted    BigInt?
  participation_rate Float?
  last_10_props      Decimal? @db.Decimal
  for                BigInt?
  abstain            BigInt?
  against            BigInt?

  @@map("voter_stats")
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view authority_chains {
  delegate  String?
  rules     Json[]
  chain     String[]
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar(42)

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view delegates_wrapper {
  delegate          String?
  num_of_delegators Decimal? @db.Decimal
  direct_vp         Decimal? @db.Decimal
  advanced_vp       Decimal? @db.Decimal
  voting_power      Decimal? @db.Decimal

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view direct_chains_snaps {
  delegate             String?
  rules                Json[]
  chain                String[]
  proxy                String?
  balance              Decimal? @db.Decimal
  balance_block_number BigInt?
  allowance            Decimal? @db.Decimal
  contract             String?  @db.VarChar(42)

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view vote_cast_events {
  transaction_hash String?  @db.VarChar(66)
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view vote_cast_with_params_events {
  transaction_hash String?  @db.VarChar(66)
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view authority_chains_snaps_wrapper {
  delegate             String?
  rules                Json[]
  chain                String[]
  proxy                String?
  balance              Decimal? @db.Decimal
  balance_block_number BigInt?
  allowance            Decimal? @db.Decimal
  contract             String?  @db.VarChar(42)

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view authority_chains_wrapper {
  delegate  String?
  rules     Json[]
  chain     String[]
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar(42)

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view proposals_wrapper {
  proposal_id        String?
  contract           String?       @db.VarChar(42)
  proposer           String?
  description        String?
  ordinal            Decimal?      @db.Decimal
  created_block      BigInt?
  start_block        String?
  end_block          String?
  cancelled_block    BigInt?
  executed_block     BigInt?
  proposal_data      Json?
  proposal_type      ProposalType?
  proposal_type_data Json?
  proposal_results   Json?

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view subdelegation_events {
  to                  String?
  from                String?
  subdelegation_rules String?
  block_number        BigInt?
  contract            String? @db.VarChar(42)

  @@ignore
  @@schema("optimism")
}

enum DaoSlug {
  OP
  ENS
  UNI
  NOUNS
  LYRA

  @@map("dao_slug")
  @@schema("config")
}

enum Chain {
  optimism_mainnet @map("optimism-mainnet")

  @@map("chain")
  @@schema("config")
}

enum ContractType {
  governor
  token
  alligator
  proposal_types_configurator

  @@map("contract_type")
  @@schema("config")
}

enum Dao {
  optimism

  @@map("dao")
  @@schema("config")
}

enum Env {
  dev
  prod

  @@map("env")
  @@schema("config")
}

enum ProposalType {
  STANDARD
  APPROVAL
  OPTIMISTIC

  @@map("proposal_type")
  @@schema("config")
}
