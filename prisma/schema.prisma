generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema", "views"]
  binaryTargets   = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["agora", "alltenant", "b3", "boost", "config", "cyber", "demo", "derive", "ens", "etherfi", "linea", "optimism", "pguild", "retro_funding", "scroll", "snapshot", "uniswap", "xai"]
}

model DelegateStatements {
  address                  String
  dao_slug                 DaoSlug
  signature                String
  payload                  Json
  twitter                  String?
  discord                  String?
  email                    String?
  createdAt                DateTime?    @default(dbgenerated("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC'::text)")) @map("created_at") @db.Date
  updatedAt                DateTime?    @default(dbgenerated("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC'::text)")) @map("updated_at") @db.Date
  warpcast                 String?
  endorsed                 Boolean      @default(false)
  scw_address              String?      @db.VarChar(42)
  notification_preferences Json?        @default(dbgenerated("jsonb_build_object('wants_proposal_created_email', 'prompt', 'wants_proposal_ending_soon_email', 'prompt', 'last_updated', (now() AT TIME ZONE 'UTC'::text))"))
  stage                    stage_status @default(published)
  message_hash             String
  created_at_ts            DateTime?    @default(now()) @db.Timestamptz(6)
  updated_at_ts            DateTime?    @default(now()) @db.Timestamptz(6)

  @@id([address, dao_slug, message_hash])
  @@index([email], map: "idx_delegate_statements_email")
  @@index([dao_slug], map: "idx_delegate_statements_dao_slug")
  @@map("delegate_statements")
  @@schema("agora")
}

model Contracts {
  address       String        @id
  chain         Chain?
  contract_type ContractType?
  dao           String
  env           Env?

  @@map("contracts")
  @@schema("config")
}

model AddressMetadata {
  address    String
  kind       String
  dao_slug   DaoSlug
  metadata   Json?
  created_at DateTime? @default(now()) @db.Timestamptz(6)

  @@id([address, kind, dao_slug])
  @@map("address_metadata")
  @@schema("agora")
}

model SnapshotVotes {
  id             String
  voter          String
  created        BigInt?
  choice         String?
  metadata       Json?   @db.Json
  reason         String?
  app            String?
  vp             Float?
  vp_by_strategy Json?   @db.Json
  vp_state       String?
  proposal_id    String
  choice_labels  Json?   @db.Json
  dao_slug       String

  @@id([voter, proposal_id, dao_slug], map: "votes_pk")
  @@index([id], map: "ix_snapshot_votes_id")
  @@map("votes")
  @@schema("snapshot")
}

model api_user {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  api_key     String?   @unique @default(dbgenerated("gen_random_uuid()"))
  email       String?
  address     String
  chain_id    String
  description String?
  enabled     Boolean?  @default(true)
  created_at  DateTime? @default(now()) @db.Date
  updated_at  DateTime? @default(now()) @db.Date
  chain       chain     @relation(fields: [chain_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([address, chain_id])
  @@index([address], map: "idx_api_user_address")
  @@index([api_key], map: "idx_api_user_api_key")
  @@schema("agora")
}

model chain {
  id         String     @id
  name       String
  created_at DateTime?  @default(now()) @db.Date
  updated_at DateTime?  @default(now()) @db.Date
  api_user   api_user[]

  @@schema("agora")
}

model Ballots {
  address              String                @db.VarChar(255)
  round                Int
  os_only              Boolean               @default(false)
  os_multiplier        Float                 @default(1)
  created_at           DateTime              @default(now()) @db.Timestamptz(6)
  updated_at           DateTime              @default(now()) @db.Timestamptz(6)
  allocations          allocations[]
  category_allocations CategoryAllocations[]
  project_allocations  ProjectAllocations[]

  @@id([address, round])
  @@map("ballots")
  @@schema("retro_funding")
}

model allocations {
  address    String   @db.VarChar(255)
  round      Int
  metric_id  String   @db.VarChar(255)
  allocation Decimal  @default(0) @db.Decimal
  locked     Boolean? @default(false)
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)
  ballots    Ballots  @relation(fields: [address, round], references: [address, round], onDelete: Cascade, onUpdate: NoAction)

  @@id([address, round, metric_id])
  @@schema("retro_funding")
}

model ProjectAllocations {
  address    String   @db.VarChar(255)
  round      Int
  project_id String   @db.VarChar(255)
  allocation Decimal? @db.Decimal
  locked     Boolean? @default(false)
  rank       Int?
  impact     Int      @default(0)
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)
  ballots    Ballots  @relation(fields: [address, round], references: [address, round], onDelete: Cascade, onUpdate: NoAction)

  @@id([address, round, project_id])
  @@map("project_allocations")
  @@schema("retro_funding")
}

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model ProjectApplicants {
// @@map("project_applicants_final")
// @@schema("retro_funding")
// }

model Categories {
  slug                 String                @id
  name                 String
  description          String
  created_at           DateTime              @default(now()) @db.Timestamptz(6)
  updated_at           DateTime              @default(now()) @db.Timestamptz(6)
  category_allocations CategoryAllocations[]
  mock_projects        mock_projects[]

  @@map("categories")
  @@schema("retro_funding")
}

model CategoryAllocations {
  address       String     @db.VarChar(255)
  round         Int
  category_slug String     @db.VarChar(255)
  allocation    Decimal?   @db.Decimal
  locked        Boolean?   @default(false)
  created_at    DateTime   @default(now()) @db.Timestamptz(6)
  updated_at    DateTime   @default(now()) @db.Timestamptz(6)
  ballots       Ballots    @relation(fields: [address, round], references: [address, round], onDelete: Cascade, onUpdate: NoAction)
  categories    Categories @relation(fields: [category_slug], references: [slug], onDelete: NoAction, onUpdate: NoAction)

  @@id([address, round, category_slug])
  @@map("category_allocations")
  @@schema("retro_funding")
}

model BallotSubmittions {
  address    String   @db.VarChar(255)
  round      Int
  signature  String   @db.VarChar(255)
  payload    String   @db.VarChar(255)
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)

  @@id([address, round])
  @@map("ballot_submittions")
  @@schema("retro_funding")
}

model projects_data {
  project_id    String  @id @db.VarChar
  project_name  String  @db.VarChar
  project_image String? @db.VarChar

  @@schema("retro_funding")
}

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model ImpactStatements {
// @@map("impact_statements")
// @@schema("retro_funding")
// }

model TeamMetadata {
  application_id String @id @db.VarChar(255)
  round          Int
  team           Json?

  @@map("team_metadata")
  @@schema("retro_funding")
}

model ProposalDraft {
  id                         Int                          @id @default(autoincrement())
  temp_check_link            String
  voting_module_type         String?                      @db.VarChar(50)
  proposal_social_type       String?                      @db.VarChar(50)
  title                      String                       @db.VarChar(255)
  abstract                   String
  audit_url                  String?
  dao_slug                   DaoSlug
  author_address             String
  sponsor_address            String
  stage                      ProposalStage
  start_date_social          DateTime?                    @db.Timestamp(6)
  end_date_social            DateTime?                    @db.Timestamp(6)
  created_at                 DateTime                     @default(now()) @db.Timestamptz(6)
  updated_at                 DateTime                     @default(now()) @updatedAt @db.Timestamptz(6)
  onchain_transaction_hash   String?                      @db.VarChar(255)
  snapshot_link              String?
  contract                   String
  chain_id                   Int
  max_options                Int?
  top_choices                Int?
  budget                     Int?
  threshold                  Int?
  criteria                   String?                      @db.VarChar(255)
  proposal_type              String?                      @db.VarChar(50)
  is_public                  Boolean                      @default(false)
  simulation_state           String                       @default("UNCONFIRMED") @db.VarChar(255)
  simulation_id              String?                      @db.VarChar(255)
  approval_options           ProposalApprovalOption[]
  proposal_approved_sponsors proposal_approved_sponsors[]
  checklist_items            ProposalChecklist[]
  proposal_comments          proposal_comments[]
  social_options             ProposalSocialOption[]
  transactions               ProposalDraftTransaction[]
  proposal_votes             proposal_votes[]

  @@map("proposals")
  @@schema("alltenant")
}

model ProposalDraftTransaction {
  id                          Int                     @id @default(autoincrement())
  proposal_id                 Int
  order                       Int
  target                      String                  @db.VarChar(255)
  value                       String                  @db.VarChar(255)
  calldata                    String
  description                 String
  simulation_state            String                  @default("UNCONFIRMED") @db.VarChar(255)
  simulation_id               String?                 @db.VarChar(255)
  created_at                  DateTime                @default(now()) @db.Timestamptz(6)
  updated_at                  DateTime                @default(now()) @updatedAt @db.Timestamptz(6)
  proposal_approval_option_id Int?
  signature                   String?                 @db.VarChar
  approval_option             ProposalApprovalOption? @relation(fields: [proposal_approval_option_id], references: [id], onUpdate: NoAction, map: "fk_proposal_approval_option")
  proposal                    ProposalDraft           @relation(fields: [proposal_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([proposal_approval_option_id], map: "idx_proposal_transactions_proposal_approval_option_id")
  @@map("proposal_transactions")
  @@schema("alltenant")
}

model ProposalApprovalOption {
  id           Int                        @id @default(autoincrement())
  proposal_id  Int
  title        String                     @db.VarChar(255)
  created_at   DateTime                   @default(now()) @db.Timestamptz(6)
  updated_at   DateTime                   @default(now()) @db.Timestamptz(6)
  proposal     ProposalDraft              @relation(fields: [proposal_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  transactions ProposalDraftTransaction[]

  @@map("proposal_approval_options")
  @@schema("alltenant")
}

model ProposalSocialOption {
  id          Int           @id @default(autoincrement())
  proposal_id Int
  text        String        @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamptz(6)
  updated_at  DateTime      @default(now()) @db.Timestamptz(6)
  proposal    ProposalDraft @relation(fields: [proposal_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("proposal_options")
  @@schema("alltenant")
}

model ProposalChecklist {
  id           Int           @id @default(autoincrement())
  title        String        @db.VarChar(255)
  completed_at DateTime      @default(now()) @db.Timestamptz(6)
  completed_by String        @db.VarChar(255)
  link         String?
  proposal_id  Int
  proposal     ProposalDraft @relation(fields: [proposal_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("proposal_checklist_items")
  @@schema("alltenant")
}

model changelog {
  id             Int      @id @default(autoincrement())
  dao_slug       DaoSlug
  title          String   @db.VarChar(255)
  body           String
  author_address String   @db.VarChar(255)
  created_at     DateTime @default(now()) @db.Timestamp(6)
  updated_at     DateTime @default(now()) @db.Timestamp(6)

  @@index([dao_slug], map: "idx_changelog_dao_slug")
  @@schema("alltenant")
}

model AnalyticsEvent {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  event_name String
  event_data Json
  dao_slug   DaoSlug
  created_at DateTime? @default(now()) @db.Timestamptz(6)

  @@index([dao_slug], map: "ix_analytics_events_dao_slug")
  @@map("analytics_events")
  @@schema("alltenant")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model delegate_statements_old {
  address    String
  dao_slug   DaoSlug
  signature  String
  payload    Json
  twitter    String?
  discord    String?
  email      String?
  created_at DateTime? @default(now()) @db.Date
  updated_at DateTime? @default(now()) @db.Date
  warpcast   String?
  endorsed   Boolean   @default(false)

  @@ignore
  @@schema("agora")
}

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model ofac_sanction_list {
// @@schema("agora")
// }

model airdrop_recipient {
  dao_slug     DaoSlug
  address      String       @db.VarChar(42)
  signature    String?      @db.VarChar(132)
  email_opt_in Boolean?     @default(false)
  email        String?      @db.VarChar(255)
  soft_claim   soft_claim[]

  @@id([dao_slug, address])
  @@schema("alltenant")
}

model claim_v2_linked_account {
  id         Int       @id @default(autoincrement())
  address    String
  network    String
  user_id    Int
  created_at DateTime? @default(now()) @db.Timestamp(6)

  @@unique([address, network], map: "unique_address_network")
  @@index([user_id], map: "idx_claim_v2_linked_account_user_id")
  @@schema("alltenant")
}

model claim_v2_linked_twitter {
  id             Int       @id @default(autoincrement())
  twitter_handle String    @unique
  twitter_id     String    @unique
  user_id        Int
  created_at     DateTime? @default(now()) @db.Timestamp(6)

  @@unique([twitter_id, user_id], map: "unique_twitter_user")
  @@index([user_id], map: "idx_claim_v2_linked_twitter_user_id")
  @@schema("alltenant")
}

model claim_v2_users {
  id           Int       @id @default(autoincrement())
  claim_wallet String    @unique
  created_at   DateTime? @default(now()) @db.Timestamp(6)
  updated_at   DateTime? @default(now()) @db.Timestamp(6)
  status       String

  @@index([claim_wallet], map: "idx_claim_v2_users_user_id")
  @@schema("alltenant")
}

model dao_engagement_metrics {
  chain_id   BigInt
  block_date DateTime @db.Date
  metric     String
  tenant     String
  value      String?

  @@id([chain_id, block_date, metric, tenant], map: "dao_engagement_metrics_pk")
  @@index([block_date], map: "ix_alltenant_dao_engagement_metrics_block_date")
  @@index([chain_id], map: "ix_alltenant_dao_engagement_metrics_chain_id")
  @@index([metric], map: "ix_alltenant_dao_engagement_metrics_metric")
  @@index([tenant], map: "ix_alltenant_dao_engagement_metrics_tenant")
  @@schema("alltenant")
}

model dao_engagement_metrics_cs {
  chain_id   BigInt
  block_date DateTime @db.Date
  metric     String
  dao_slug   String
  contract   String
  value      String?

  @@id([chain_id, block_date, metric, dao_slug, contract], map: "dao_engagement_metrics_cs_pk")
  @@index([block_date], map: "ix_alltenant_dao_engagement_metrics_cs_block_date")
  @@index([chain_id], map: "ix_alltenant_dao_engagement_metrics_cs_chain_id")
  @@index([contract], map: "ix_alltenant_dao_engagement_metrics_cs_contract")
  @@index([dao_slug], map: "ix_alltenant_dao_engagement_metrics_cs_dao_slug")
  @@index([metric], map: "ix_alltenant_dao_engagement_metrics_cs_metric")
  @@schema("alltenant")
}

model dao_engagement_votes {
  chain_id    BigInt
  block_date  DateTime @db.Date
  tenant      String
  proposal_id String
  voter_count BigInt?

  @@id([chain_id, block_date, tenant, proposal_id], map: "dao_engagement_votes_pk")
  @@index([block_date], map: "ix_alltenant_dao_engagement_votes_block_date")
  @@index([chain_id], map: "ix_alltenant_dao_engagement_votes_chain_id")
  @@index([proposal_id], map: "ix_alltenant_dao_engagement_votes_proposal_id")
  @@index([tenant], map: "ix_alltenant_dao_engagement_votes_tenant")
  @@schema("alltenant")
}

model dao_engagement_votes_cs {
  chain_id    BigInt
  block_date  DateTime @db.Date
  dao_slug    String
  contract    String
  proposal_id String
  voter_count BigInt?

  @@id([chain_id, block_date, dao_slug, contract, proposal_id], map: "dao_engagement_votes_cs_pk")
  @@index([block_date], map: "ix_alltenant_dao_engagement_votes_cs_block_date")
  @@index([chain_id], map: "ix_alltenant_dao_engagement_votes_cs_chain_id")
  @@index([contract], map: "ix_alltenant_dao_engagement_votes_cs_contract")
  @@index([dao_slug], map: "ix_alltenant_dao_engagement_votes_cs_dao_slug")
  @@index([proposal_id], map: "ix_alltenant_dao_engagement_votes_cs_proposal_id")
  @@schema("alltenant")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model github_handle_meta {
  username String?
  node_id  String?

  @@index([username], map: "ix_alltenant_github_handle_meta_username")
  @@ignore
  @@schema("alltenant")
}

model hard_claim {
  id                                  String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  dao_slug                            DaoSlug
  recipient                           String    @db.VarChar(42)
  claimed_at                          DateTime? @db.Timestamptz(6)
  transaction_hash                    String?   @db.VarChar(66)
  proof                               String[]
  amount                              String
  claim_status                        String    @db.VarChar(255)
  hard_claim_onchain_activity         String?
  hard_claim_onchain_bonus_ens        String?
  hard_claim_onchain_bonus_gitcoin    String?
  hard_claim_onchain_bonus_juicebox   String?
  hard_claim_onchain_bonus_smart      String?
  hard_claim_onchain_bonus_cryptopunk String?
  hard_claim_onchain_bonus_milady     String?

  @@schema("alltenant")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model hard_claim_by_20241022230 {
  id                                  String?   @db.Uuid
  dao_slug                            DaoSlug?
  recipient                           String?   @db.VarChar(42)
  claimed_at                          DateTime? @db.Timestamptz(6)
  transaction_hash                    String?   @db.VarChar(66)
  proof                               String[]
  amount                              String?
  claim_status                        String?   @db.VarChar(255)
  hard_claim_onchain_activity         String?
  hard_claim_onchain_bonus_ens        String?
  hard_claim_onchain_bonus_gitcoin    String?
  hard_claim_onchain_bonus_juicebox   String?
  hard_claim_onchain_bonus_smart      String?
  hard_claim_onchain_bonus_cryptopunk String?
  hard_claim_onchain_bonus_milady     String?

  @@ignore
  @@schema("alltenant")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model offchain_proposals {
  contract                   String?
  id                         String?
  onchain_proposalid         String?
  dao_slug                   DaoSlug?
  proposer                   String?
  description                String?
  choices                    String[]
  proposal_results           Json?    @db.Json
  proposal_type_id           String?
  start_block                String?
  end_block                  String?
  created_block              BigInt?
  created_transaction_hash   String?
  queued_block               BigInt?
  queued_transaction_hash    String?
  cancelled_block            BigInt?
  cancelled_transaction_hash String?
  executed_block             BigInt?
  executed_transaction_hash  String?

  @@index([contract], map: "ix_offchain_proposals_contract")
  @@index([dao_slug], map: "ix_offchain_proposals_dao_slug")
  @@index([id], map: "ix_offchain_proposals_id")
  @@index([onchain_proposalid], map: "ix_offchain_proposals_onchain_proposalid")
  @@ignore
  @@schema("alltenant")
}

model proposal_approved_sponsors {
  id              Int           @id @default(autoincrement())
  proposal_id     Int
  sponsor_address String        @db.VarChar(255)
  created_at      DateTime      @default(now()) @db.Timestamptz(6)
  updated_at      DateTime      @default(now()) @db.Timestamptz(6)
  status          String        @default("PENDING")
  proposals       ProposalDraft @relation(fields: [proposal_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_proposal_approved_sponsors_proposal")

  @@index([proposal_id], map: "idx_proposal_approved_sponsors_proposal_id")
  @@schema("alltenant")
}

model proposal_comments {
  id                      Int                 @id @default(autoincrement())
  proposal_id             Int
  comment                 String
  author                  String              @db.VarChar(255)
  parent_id               Int?
  created_at              DateTime            @default(now()) @db.Timestamptz(6)
  updated_at              DateTime            @default(now()) @db.Timestamptz(6)
  proposal_comments       proposal_comments?  @relation("proposal_commentsToproposal_comments", fields: [parent_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  other_proposal_comments proposal_comments[] @relation("proposal_commentsToproposal_comments")
  proposals               ProposalDraft       @relation(fields: [proposal_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([proposal_id], map: "idx_proposal_comments_proposal_id")
  @@schema("alltenant")
}

model proposal_votes {
  id          Int           @id @default(autoincrement())
  proposal_id Int
  voter       String        @db.VarChar
  weight      Decimal       @db.Decimal
  direction   Int?          @default(1)
  created_at  DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at  DateTime?     @default(now()) @db.Timestamptz(6)
  proposals   ProposalDraft @relation(fields: [proposal_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([voter, proposal_id], map: "proposal_votes_voter_proposal_id_unique")
  @@index([proposal_id], map: "idx_proposal_votes_proposal_id")
  @@schema("alltenant")
}

model safe_multisig_state {
  safe_key   String @id
  safe_value Json?

  @@schema("alltenant")
}

model soft_claim {
  id                    String             @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  dao_slug              DaoSlug
  recipient             String?            @db.VarChar(42)
  amount                String
  claimed_at            DateTime?          @db.Timestamptz(6)
  claim_type            String             @db.VarChar(255)
  claim_identifier      String             @db.VarChar(255)
  claim_status          String             @db.VarChar(255)
  verification_code     String?            @db.VarChar(255)
  verified_at           DateTime?          @db.Timestamptz(6)
  verification_attempts Int?               @default(0)
  claim_ref_id          String?            @db.VarChar
  airdrop_recipient     airdrop_recipient? @relation(fields: [dao_slug, recipient], references: [dao_slug, address], onDelete: NoAction, onUpdate: NoAction)

  @@unique([dao_slug, claim_type, claim_identifier])
  @@schema("alltenant")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model soft_claim_payments {
  id     String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  status String @default("not-sent")

  @@schema("alltenant")
}

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model b3_deployment {
// @@map("deployment")
// @@schema("b3")
// }

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model b3_proposals_v2 {
  contract                   String?
  proposal_id                String?
  proposer                   String?
  description                String?
  created_block              BigInt?
  start_block                String?
  end_block                  String?
  proposal_type_id           String?
  proposal_data              Json?   @db.Json
  proposal_type_data         Json?   @db.Json
  created_transaction_hash   String?
  ordinal                    BigInt?
  proposal_data_raw          String?
  proposal_type              String?
  proposal_results           Json?   @db.Json
  queued_block               BigInt?
  queued_transaction_hash    String?
  cancelled_block            BigInt?
  cancelled_transaction_hash String?
  executed_block             BigInt?
  executed_transaction_hash  String?

  @@index([contract], map: "ix_b3_proposals_v2_contract")
  @@index([proposal_id], map: "ix_b3_proposals_v2_proposal_id")
  @@map("proposals_v2")
  @@ignore
  @@schema("b3")
}

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model boost_deployment {
// @@map("deployment")
// @@schema("boost")
// }

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model boost_proposals_v2 {
  contract                   String?
  proposal_id                String?
  proposer                   String?
  description                String?
  created_block              BigInt?
  start_block                String?
  end_block                  String?
  proposal_type_id           String?
  proposal_data              Json?   @db.Json
  proposal_type_data         Json?   @db.Json
  created_transaction_hash   String?
  ordinal                    BigInt?
  proposal_data_raw          String?
  proposal_type              String?
  proposal_results           Json?   @db.Json
  queued_block               BigInt?
  queued_transaction_hash    String?
  cancelled_block            BigInt?
  cancelled_transaction_hash String?
  executed_block             BigInt?
  executed_transaction_hash  String?

  @@index([contract], map: "ix_boost_proposals_v2_contract")
  @@index([proposal_id], map: "ix_boost_proposals_v2_proposal_id")
  @@map("proposals_v2")
  @@ignore
  @@schema("boost")
}

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model cyber_deployment {
// @@map("deployment")
// @@schema("cyber")
// }

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model cyber_proposals_v2 {
  contract                   String?
  proposal_id                String?
  proposer                   String?
  description                String?
  created_block              BigInt?
  start_block                String?
  end_block                  String?
  proposal_type_id           String?
  proposal_data              Json?   @db.Json
  proposal_type_data         Json?   @db.Json
  created_transaction_hash   String?
  ordinal                    BigInt?
  proposal_data_raw          String?
  proposal_type              String?
  proposal_results           Json?   @db.Json
  queued_block               BigInt?
  queued_transaction_hash    String?
  cancelled_block            BigInt?
  cancelled_transaction_hash String?
  executed_block             BigInt?
  executed_transaction_hash  String?

  @@unique([proposal_id, contract], map: "idx_proposals_proposal_id")
  @@index([ordinal], map: "idx_proposals_ordinal")
  @@index([contract], map: "ix_cyber_proposals_v2_contract")
  @@index([proposal_id], map: "ix_cyber_proposals_v2_proposal_id")
  @@map("proposals_v2")
  @@ignore
  @@schema("cyber")
}

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model demo_deployment {
// @@map("deployment")
// @@schema("demo")
// }

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model demo_proposals_v2 {
  contract                   String?
  proposal_id                String?
  proposer                   String?
  description                String?
  created_block              BigInt?
  start_block                String?
  end_block                  String?
  proposal_type_id           String?
  proposal_data              Json?   @db.Json
  proposal_type_data         Json?   @db.Json
  created_transaction_hash   String?
  ordinal                    BigInt?
  proposal_data_raw          String?
  proposal_type              String?
  proposal_results           Json?   @db.Json
  queued_block               BigInt?
  queued_transaction_hash    String?
  cancelled_block            BigInt?
  cancelled_transaction_hash String?
  executed_block             BigInt?
  executed_transaction_hash  String?

  @@unique([proposal_id, contract], map: "idx_proposals_proposal_id")
  @@index([ordinal], map: "idx_proposals_ordinal")
  @@index([contract], map: "ix_demo_proposals_v2_contract")
  @@index([proposal_id], map: "ix_demo_proposals_v2_proposal_id")
  @@map("proposals_v2")
  @@ignore
  @@schema("demo")
}

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model derive_deployment {
// @@map("deployment")
// @@schema("derive")
// }

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model derive_proposals_v2 {
  contract                   String?
  proposal_id                String?
  proposer                   String?
  description                String?
  created_block              BigInt?
  start_block                String?
  end_block                  String?
  proposal_type_id           String?
  proposal_data              Json?   @db.Json
  proposal_type_data         Json?   @db.Json
  created_transaction_hash   String?
  ordinal                    BigInt?
  proposal_data_raw          String?
  proposal_type              String?
  proposal_results           Json?   @db.Json
  queued_block               BigInt?
  queued_transaction_hash    String?
  cancelled_block            BigInt?
  cancelled_transaction_hash String?
  executed_block             BigInt?
  executed_transaction_hash  String?

  @@unique([proposal_id, contract], map: "idx_proposals_proposal_id")
  @@index([ordinal], map: "idx_proposals_ordinal")
  @@index([contract], map: "ix_derive_proposals_v2_contract")
  @@index([proposal_id], map: "ix_derive_proposals_v2_proposal_id")
  @@map("proposals_v2")
  @@ignore
  @@schema("derive")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model ens_proposals_v2 {
  contract                   String?
  proposal_id                String?
  proposer                   String?
  description                String?
  created_block              BigInt?
  start_block                String?
  end_block                  String?
  proposal_type_id           String?
  proposal_data              Json?   @db.Json
  proposal_type_data         Json?   @db.Json
  created_transaction_hash   String?
  ordinal                    BigInt?
  proposal_data_raw          String?
  proposal_type              String?
  proposal_results           Json?   @db.Json
  queued_block               BigInt?
  queued_transaction_hash    String?
  cancelled_block            BigInt?
  cancelled_transaction_hash String?
  executed_block             BigInt?
  executed_transaction_hash  String?

  @@unique([proposal_id, contract], map: "idx_proposals_proposal_id")
  @@index([ordinal], map: "idx_proposals_ordinal")
  @@index([contract], map: "ix_ens_proposals_v2_contract")
  @@index([proposal_id], map: "ix_ens_proposals_v2_proposal_id")
  @@map("proposals_v2")
  @@ignore
  @@schema("ens")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model etherfi_proposals_v2 {
  contract                   String?
  proposal_id                String?
  proposer                   String?
  description                String?
  created_block              BigInt?
  start_block                String?
  end_block                  String?
  proposal_type_id           String?
  proposal_data              Json?   @db.Json
  proposal_type_data         Json?   @db.Json
  created_transaction_hash   String?
  ordinal                    BigInt?
  proposal_data_raw          String?
  proposal_type              String?
  proposal_results           Json?   @db.Json
  queued_block               BigInt?
  queued_transaction_hash    String?
  cancelled_block            BigInt?
  cancelled_transaction_hash String?
  executed_block             BigInt?
  executed_transaction_hash  String?

  @@unique([proposal_id, contract], map: "idx_proposals_proposal_id")
  @@index([ordinal], map: "idx_proposals_ordinal")
  @@index([contract], map: "ix_etherfi_proposals_v2_contract")
  @@index([proposal_id], map: "ix_etherfi_proposals_v2_proposal_id")
  @@map("proposals_v2")
  @@ignore
  @@schema("etherfi")
}

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model linea_deployment {
// @@map("deployment")
// @@schema("linea")
// }

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model linea_proposals_v2 {
  contract                   String?
  proposal_id                String?
  proposer                   String?
  description                String?
  created_block              BigInt?
  start_timestamp            String?
  end_timestamp              String?
  proposal_type_id           String?
  proposal_data              Json?   @db.Json
  proposal_type_data         Json?   @db.Json
  created_transaction_hash   String?
  ordinal                    BigInt?
  proposal_data_raw          String?
  proposal_type              String?
  proposal_results           Json?   @db.Json
  queued_block               BigInt?
  queued_transaction_hash    String?
  cancelled_block            BigInt?
  cancelled_transaction_hash String?
  executed_block             BigInt?
  executed_transaction_hash  String?

  @@unique([proposal_id, contract], map: "idx_proposals_proposal_id")
  @@index([ordinal], map: "idx_proposals_ordinal")
  @@index([contract], map: "ix_linea_proposals_v2_contract")
  @@index([proposal_id], map: "ix_linea_proposals_v2_proposal_id")
  @@map("proposals_v2")
  @@ignore
  @@schema("linea")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model optimism_proposals_v2 {
  contract                   String?
  proposal_id                String? @unique(map: "idx_proposals_proposal_id")
  proposer                   String?
  description                String?
  created_block              BigInt?
  start_block                String?
  end_block                  String?
  proposal_type_id           String?
  proposal_data              Json?   @db.Json
  proposal_type_data         Json?   @db.Json
  created_transaction_hash   String?
  ordinal                    BigInt?
  proposal_data_raw          String?
  proposal_type              String?
  proposal_results           Json?   @db.Json
  queued_block               BigInt?
  queued_transaction_hash    String?
  cancelled_block            BigInt?
  cancelled_transaction_hash String?
  executed_block             BigInt?
  executed_transaction_hash  String?

  @@index([ordinal], map: "idx_proposals_ordinal")
  @@index([contract], map: "ix_optimism_proposals_v2_contract")
  @@index([proposal_id], map: "ix_optimism_proposals_v2_proposal_id")
  @@map("proposals_v2")
  @@ignore
  @@schema("optimism")
}

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model pguild_deployment {
// @@map("deployment")
// @@schema("pguild")
// }

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model pguild_proposals_v2 {
  contract                   String?
  proposal_id                String?
  proposer                   String?
  description                String?
  created_block              BigInt?
  start_block                String?
  end_block                  String?
  proposal_type_id           String?
  proposal_data              Json?   @db.Json
  proposal_type_data         Json?   @db.Json
  created_transaction_hash   String?
  ordinal                    BigInt?
  proposal_data_raw          String?
  proposal_type              String?
  proposal_results           Json?   @db.Json
  queued_block               BigInt?
  queued_transaction_hash    String?
  cancelled_block            BigInt?
  cancelled_transaction_hash String?
  executed_block             BigInt?
  executed_transaction_hash  String?

  @@unique([proposal_id, contract], map: "idx_proposals_proposal_id")
  @@index([ordinal], map: "idx_proposals_ordinal")
  @@index([contract], map: "ix_pguild_proposals_v2_contract")
  @@index([proposal_id], map: "ix_pguild_proposals_v2_proposal_id")
  @@map("proposals_v2")
  @@ignore
  @@schema("pguild")
}

model mock_projects {
  id                      String     @id @db.VarChar(255)
  category_slug           String
  name                    String
  description             String?
  profile_avatar_url      String?
  project_cover_image_url String?
  social_links            Json?
  team                    Json?
  github                  Json?
  packages                Json?
  contracts               Json?
  grants_and_funding      Json?
  organization            Json?
  links                   String[]
  impact_statement        Json?
  pricing_model           Json?
  categories              Categories @relation(fields: [category_slug], references: [slug], onDelete: NoAction, onUpdate: NoAction)

  @@schema("retro_funding")
}

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model scroll_deployment {
// @@map("deployment")
// @@schema("scroll")
// }

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model scroll_proposals_v2 {
  contract                   String?
  proposal_id                String?
  proposer                   String?
  description                String?
  created_block              BigInt?
  start_block                String?
  end_block                  String?
  proposal_type_id           String?
  proposal_data              Json?   @db.Json
  proposal_type_data         Json?   @db.Json
  created_transaction_hash   String?
  ordinal                    BigInt?
  proposal_data_raw          String?
  proposal_type              String?
  proposal_results           Json?   @db.Json
  queued_block               BigInt?
  queued_transaction_hash    String?
  cancelled_block            BigInt?
  cancelled_transaction_hash String?
  executed_block             BigInt?
  executed_transaction_hash  String?

  @@unique([proposal_id, contract], map: "idx_proposals_proposal_id")
  @@index([ordinal], map: "idx_proposals_ordinal")
  @@index([contract], map: "ix_scroll_proposals_v2_contract")
  @@index([proposal_id], map: "ix_scroll_proposals_v2_proposal_id")
  @@map("proposals_v2")
  @@ignore
  @@schema("scroll")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model snapshot_proposals {
  id             String?
  author         String?
  body           String?
  choices        String[]
  created        BigInt?
  end            BigInt?
  link           String?
  network        BigInt?
  scores         Decimal[] @db.Decimal
  scores_state   String?
  scores_total   Float?
  scores_updated BigInt?
  snapshot       BigInt?
  start          BigInt?
  state          String?
  title          String?
  type           String?
  votes          BigInt?
  dao_slug       String?

  @@map("proposals")
  @@ignore
  @@schema("snapshot")
}

model proposals_bu {
  id             String    @id(map: "proposals_pkey")
  dao_slug       DaoSlug
  author         String?
  body           String?
  choices        String[]
  created        Decimal?  @db.Decimal
  end            Decimal?  @db.Decimal
  link           String?
  network        String?
  scores         Decimal[] @db.Decimal
  scores_state   String?
  scores_total   Decimal?  @db.Decimal
  scores_updated Decimal?  @db.Decimal
  snapshot       String?
  start          Decimal?  @db.Decimal
  state          String?
  title          String?
  type           String?
  votes          Decimal?  @db.Decimal

  @@schema("snapshot")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model uniswap_proposals_v2 {
  contract                   String?
  proposal_id                String?
  proposer                   String?
  description                String?
  created_block              BigInt?
  start_block                String?
  end_block                  String?
  proposal_type_id           String?
  proposal_data              Json?   @db.Json
  proposal_type_data         Json?   @db.Json
  created_transaction_hash   String?
  ordinal                    BigInt?
  proposal_data_raw          String?
  proposal_type              String?
  proposal_results           Json?   @db.Json
  queued_block               BigInt?
  queued_transaction_hash    String?
  cancelled_block            BigInt?
  cancelled_transaction_hash String?
  executed_block             BigInt?
  executed_transaction_hash  String?

  @@index([contract], map: "ix_uniswap_proposals_v2_contract")
  @@index([proposal_id], map: "ix_uniswap_proposals_v2_proposal_id")
  @@map("proposals_v2")
  @@ignore
  @@schema("uniswap")
}

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model xai_deployment {
// @@map("deployment")
// @@schema("xai")
// }

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model xai_proposals_v2 {
  contract                   String?
  proposal_id                String?
  proposer                   String?
  description                String?
  created_block              BigInt?
  start_block                String?
  end_block                  String?
  proposal_type_id           String?
  proposal_data              Json?   @db.Json
  proposal_type_data         Json?   @db.Json
  created_transaction_hash   String?
  ordinal                    BigInt?
  proposal_data_raw          String?
  proposal_type              String?
  proposal_results           Json?   @db.Json
  queued_block               BigInt?
  queued_transaction_hash    String?
  cancelled_block            BigInt?
  cancelled_transaction_hash String?
  executed_block             BigInt?
  executed_transaction_hash  String?

  @@index([contract], map: "ix_xai_proposals_v2_contract")
  @@index([proposal_id], map: "ix_xai_proposals_v2_proposal_id")
  @@map("proposals_v2")
  @@ignore
  @@schema("xai")
}

view Citizens {
  address             String
  dao_slug            DaoSlug
  retro_funding_round String
  time_created        BigInt?

  @@id([address, dao_slug, retro_funding_round])
  @@map("citizens")
  @@schema("agora")
}

view OptimismVotes {
  transaction_hash String  @unique @db.VarChar
  proposal_id      String
  voter            String
  support          String
  weight           Decimal @db.Decimal
  reason           String?
  block_number     BigInt
  params           String?
  start_block      String?
  description      String?
  proposal_data    Json
  proposal_type    String
  contract         String?
  chain_id         Int?

  @@map("votes")
  @@schema("optimism")
}

view OptimismVotingPower {
  delegate     String  @unique
  voting_power String?
  contract     String

  @@map("voting_power")
  @@schema("optimism")
}

view OptimismVotableSupply {
  chain_id       Int?
  address        String @unique
  votable_supply String @unique

  @@map("votable_supply_v2")
  @@schema("optimism")
}

view OptimismDelegates {
  delegate          String   @unique
  num_of_delegators Decimal? @db.Decimal
  direct_vp         Decimal? @db.Decimal
  advanced_vp       Decimal? @db.Decimal
  voting_power      Decimal? @db.Decimal
  contract          String?

  @@map("delegates")
  @@schema("optimism")
}

view OptimismAdvancedDelegatees {
  pair             String  @unique
  from             String
  to               String
  delegated_amount Decimal @db.Decimal
  delegated_share  Decimal @db.Decimal
  block_number     BigInt
  contract         String?
  transaction_hash String?

  @@map("advanced_delegatees")
  @@schema("optimism")
}

view OptimismAdvancedVotingPower {
  delegate                 String   @unique
  vp_allowance             Decimal  @db.Decimal
  vp_delegatable_allowance Decimal  @db.Decimal
  delegated_vp             Decimal  @db.Decimal
  advanced_vp              Decimal  @db.Decimal
  subdelegated_share       Decimal? @db.Decimal
  contract                 String

  @@map("advanced_voting_power")
  @@schema("optimism")
}

view OptimismAuthorityChainsSnaps {
  id                   String   @unique
  delegate             String
  rules                Json[]
  chain                String[]
  proxy                String
  balance              Decimal  @db.Decimal
  balance_block_number BigInt
  allowance            Decimal  @db.Decimal
  contract             String?
  balance_ordinal      Decimal? @db.Decimal

  @@map("authority_chains_snaps")
  @@schema("optimism")
}

view OptimismProposalTypes {
  id                 String  @unique
  contract           String
  block_number       BigInt
  proposal_type_id   String
  quorum             String
  approval_threshold String
  name               String
  description        String?
  inputs             Json

  @@map("proposal_types")
  @@schema("optimism")
}

view OptimismVotingPowerSnaps {
  id                String   @id
  delegate          String?
  balance           String?
  block_number      BigInt?
  ordinal           Decimal? @db.Decimal
  transaction_index BigInt?
  log_index         BigInt?
  contract          String?

  @@map("voting_power_snaps")
  @@schema("optimism")
}

view OptimismVoterStats {
  voter              String   @unique
  proposals_voted    BigInt?
  participation_rate Float?
  last_10_props      Decimal? @db.Decimal
  for                BigInt?
  abstain            BigInt?
  against            BigInt?
  proposals_proposed BigInt?
  contract           String?

  @@map("voter_stats")
  @@schema("optimism")
}

view OptimismDelegatees {
  delegator        String  @unique
  delegatee        String
  block_number     BigInt
  balance          Decimal @db.Decimal
  transaction_hash String?
  contract         String?

  @@map("delegatees")
  @@schema("optimism")
}

view OptimismDelegateChangedEvents {
  address           String
  block_number      BigInt
  block_hash        String
  log_index         BigInt
  transaction_index BigInt
  transaction_hash  String @unique
  delegator         String
  from_delegate     String
  to_delegate       String
  chain_id          Int

  @@map("delegate_changed_events")
  @@schema("optimism")
}

view ensDelegatees {
  delegator        String  @unique
  delegatee        String
  block_number     BigInt
  balance          Decimal @db.Decimal
  contract         String?
  transaction_hash String?

  @@map("delegatees")
  @@schema("ens")
}

view OptimismStakedDeposits {
  deposit_id  BigInt  @unique
  depositor   String
  beneficiary String
  delegatee   String
  amount      Decimal @db.Decimal

  @@map("staked_deposits")
  @@schema("optimism")
}

view ensDelegates {
  delegate          String   @unique
  contract          String?
  num_of_delegators Decimal? @db.Decimal
  direct_vp         Decimal? @db.Decimal
  advanced_vp       Decimal? @db.Decimal
  voting_power      Decimal? @db.Decimal

  @@map("delegates")
  @@schema("ens")
}

view ensVotableSupply {
  chain_id       Int?
  address        String?
  votable_supply String  @unique

  @@map("votable_supply")
  @@schema("ens")
}

view ensVoterStats {
  voter              String   @unique
  proposals_voted    BigInt?
  participation_rate Float?
  last_10_props      Decimal? @db.Decimal
  for                BigInt?
  abstain            BigInt?
  against            BigInt?
  proposals_proposed BigInt?
  contract           String?

  @@map("voter_stats")
  @@schema("ens")
}

view ensVotes {
  transaction_hash String  @unique @db.VarChar
  proposal_id      String
  voter            String
  support          String
  weight           Decimal @db.Decimal
  reason           String?
  block_number     BigInt
  params           String?
  start_block      String?
  description      String?
  proposal_data    Json
  proposal_type    String
  contract         String?
  chain_id         Int?

  @@map("votes")
  @@schema("ens")
}

view ensVotingPower {
  delegate     String  @unique
  voting_power String?
  contract     String

  @@map("voting_power")
  @@schema("ens")
}

view ensVotingPowerSnaps {
  id                String   @id
  delegate          String?
  balance           String?
  block_number      BigInt?
  ordinal           Decimal? @db.Decimal
  transaction_index BigInt?
  log_index         BigInt?
  contract          String?

  @@map("voting_power_snaps")
  @@schema("ens")
}

view ensAdvancedDelegatees {
  pair             String  @unique
  from             String
  to               String
  delegated_amount Decimal @db.Decimal
  delegated_share  Decimal @db.Decimal
  block_number     BigInt
  contract         String? @db.VarChar
  transaction_hash String?

  @@map("advanced_delegatees")
  @@schema("ens")
}

view ensAdvancedVotingPower {
  delegate                 String   @unique
  vp_allowance             Decimal  @db.Decimal
  vp_delegatable_allowance Decimal  @db.Decimal
  delegated_vp             Decimal  @db.Decimal
  advanced_vp              Decimal  @db.Decimal
  subdelegated_share       Decimal? @db.Decimal
  contract                 String   @db.VarChar

  @@map("advanced_voting_power")
  @@schema("ens")
}

view ensAuthorityChainsSnaps {
  id                   String   @unique
  delegate             String
  rules                Json[]
  chain                String[]
  proxy                String
  balance              Decimal  @db.Decimal
  allowance            Decimal  @db.Decimal
  contract             String?  @db.VarChar
  balance_block_number BigInt
  balance_ordinal      Decimal? @db.Decimal

  @@map("authority_chains_snaps")
  @@schema("ens")
}

view ensProposalTypes {
  id                 String @unique
  contract           String @db.VarChar
  block_number       BigInt
  proposal_type_id   String
  quorum             String
  approval_threshold String
  name               String
  inputs             Json

  @@map("proposal_types")
  @@schema("ens")
}

view ensStakedDeposits {
  deposit_id  BigInt  @unique
  depositor   String
  beneficiary String
  delegatee   String
  amount      Decimal @db.Decimal

  @@map("staked_deposits")
  @@schema("ens")
}

view ensDelegateChangedEvents {
  chain_id          Int
  address           String
  block_number      BigInt
  block_hash        String
  log_index         BigInt
  transaction_index BigInt
  transaction_hash  String @unique
  delegator         String
  from_delegate     String
  to_delegate       String

  @@map("delegate_changed_events")
  @@schema("ens")
}

view etherfiDelegatees {
  delegator        String  @unique
  delegatee        String
  block_number     BigInt
  balance          Decimal @db.Decimal
  contract         String?
  transaction_hash String?

  @@map("delegatees")
  @@schema("etherfi")
}

view etherfiDelegates {
  delegate          String   @unique
  contract          String?
  num_of_delegators Decimal? @db.Decimal
  direct_vp         Decimal? @db.Decimal
  advanced_vp       Decimal? @db.Decimal
  voting_power      Decimal? @db.Decimal

  @@map("delegates")
  @@schema("etherfi")
}

view etherfiVotableSupply {
  chain_id       Int?
  address        String?
  votable_supply String  @unique

  @@map("votable_supply")
  @@schema("etherfi")
}

view etherfiVotingPower {
  delegate     String  @unique
  voting_power String?
  contract     String

  @@map("voting_power")
  @@schema("etherfi")
}

view etherfiVotingPowerSnaps {
  id                String   @id
  delegate          String?
  balance           String?
  block_number      BigInt?
  ordinal           Decimal? @db.Decimal
  transaction_index BigInt?
  log_index         BigInt?
  contract          String?

  @@map("voting_power_snaps")
  @@schema("etherfi")
}

view etherfiVoterStats {
  voter              String   @unique
  proposals_voted    BigInt?
  participation_rate Float?
  last_10_props      Decimal? @db.Decimal
  for                BigInt?
  abstain            BigInt?
  against            BigInt?
  proposals_proposed BigInt?
  contract           String?

  @@map("voter_stats")
  @@schema("etherfi")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view etherfiVotes {
  transaction_hash String       @unique @db.VarChar
  proposal_id      String
  voter            String
  support          String
  weight           Decimal      @db.Decimal
  reason           String?
  block_number     BigInt
  params           String?
  start_block      String?
  description      String?
  proposal_data    Json
  proposal_type    ProposalType
  contract         String?
  chain_id         Int?

  @@map("votes")
  @@schema("etherfi")
}

view etherfiAdvancedDelegatees {
  pair             String  @unique
  from             String
  to               String
  delegated_amount Decimal @db.Decimal
  delegated_share  Decimal @db.Decimal
  block_number     BigInt
  contract         String? @db.VarChar
  transaction_hash String?

  @@map("advanced_delegatees")
  @@schema("etherfi")
}

view etherfiAdvancedVotingPower {
  delegate                 String   @unique
  vp_allowance             Decimal  @db.Decimal
  vp_delegatable_allowance Decimal  @db.Decimal
  delegated_vp             Decimal  @db.Decimal
  advanced_vp              Decimal  @db.Decimal
  subdelegated_share       Decimal? @db.Decimal
  contract                 String   @db.VarChar

  @@map("advanced_voting_power")
  @@schema("etherfi")
}

view etherfiAuthorityChainsSnaps {
  id                   String   @unique
  delegate             String
  rules                Json[]
  chain                String[]
  proxy                String
  balance              Decimal  @db.Decimal
  allowance            Decimal  @db.Decimal
  contract             String?  @db.VarChar
  balance_block_number BigInt
  balance_ordinal      Decimal? @db.Decimal

  @@map("authority_chains_snaps")
  @@schema("etherfi")
}

view etherfiProposalTypes {
  id                 String @unique
  contract           String @db.VarChar
  block_number       BigInt
  proposal_type_id   String
  quorum             String
  approval_threshold String
  name               String
  inputs             Json

  @@map("proposal_types")
  @@schema("etherfi")
}

view etherfiStakedDeposits {
  deposit_id  BigInt  @unique
  depositor   String
  beneficiary String
  delegatee   String
  amount      Decimal @db.Decimal

  @@map("staked_deposits")
  @@schema("etherfi")
}

view etherfiDelegateChangedEvents {
  chain_id          Int
  address           String
  block_number      BigInt
  block_hash        String
  log_index         BigInt
  transaction_index BigInt
  transaction_hash  String @unique
  delegator         String
  from_delegate     String
  to_delegate       String

  @@map("delegate_changed_events")
  @@schema("etherfi")
}

view uniswapDelegatees {
  delegator        String  @unique
  delegatee        String
  block_number     BigInt
  balance          Decimal @db.Decimal
  contract         String?
  transaction_hash String?

  @@map("delegatees")
  @@schema("uniswap")
}

view uniswapDelegates {
  delegate          String   @unique
  contract          String?
  num_of_delegators Decimal? @db.Decimal
  direct_vp         Decimal? @db.Decimal
  advanced_vp       Decimal? @db.Decimal
  voting_power      Decimal? @db.Decimal

  @@map("delegates")
  @@schema("uniswap")
}

view uniswapVotableSupply {
  votable_supply String @unique

  @@map("votable_supply")
  @@schema("uniswap")
}

view uniswapVotingPower {
  delegate     String  @unique
  voting_power String?
  contract     String

  @@map("voting_power")
  @@schema("uniswap")
}

view uniswapVotingPowerSnaps {
  id                String   @id
  delegate          String?
  balance           String?
  block_number      BigInt?
  ordinal           Decimal? @db.Decimal
  transaction_index BigInt?
  log_index         String?
  contract          String?

  @@map("voting_power_snaps")
  @@schema("uniswap")
}

view uniswapVoterStats {
  voter              String   @unique
  proposals_voted    BigInt?
  participation_rate Float?
  last_10_props      Decimal? @db.Decimal
  for                BigInt?
  abstain            BigInt?
  against            BigInt?
  proposals_proposed BigInt?
  contract           String?

  @@map("voter_stats")
  @@schema("uniswap")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view uniswapVotes {
  transaction_hash String       @unique @db.VarChar
  proposal_id      String
  voter            String
  support          String
  weight           Decimal      @db.Decimal
  reason           String?
  block_number     BigInt
  params           String?
  start_block      String?
  description      String?
  proposal_data    Json
  proposal_type    ProposalType
  contract         String?
  chain_id         Int?

  @@map("votes")
  @@schema("uniswap")
}

view uniswapAdvancedDelegatees {
  pair             String  @unique
  from             String
  to               String
  delegated_amount Decimal @db.Decimal
  delegated_share  Decimal @db.Decimal
  block_number     BigInt
  contract         String? @db.VarChar
  transaction_hash String?

  @@map("advanced_delegatees")
  @@schema("uniswap")
}

view uniswapAdvancedVotingPower {
  delegate                 String   @unique
  vp_allowance             Decimal  @db.Decimal
  vp_delegatable_allowance Decimal  @db.Decimal
  delegated_vp             Decimal  @db.Decimal
  advanced_vp              Decimal  @db.Decimal
  subdelegated_share       Decimal? @db.Decimal
  contract                 String   @db.VarChar

  @@map("advanced_voting_power")
  @@schema("uniswap")
}

view uniswapAuthorityChainsSnaps {
  id                   String   @unique
  delegate             String
  rules                Json[]
  chain                String[]
  proxy                String
  balance              Decimal  @db.Decimal
  allowance            Decimal  @db.Decimal
  contract             String?  @db.VarChar
  balance_block_number BigInt
  balance_ordinal      Decimal? @db.Decimal

  @@map("authority_chains_snaps")
  @@schema("uniswap")
}

view uniswapProposalTypes {
  id                 String @unique
  contract           String @db.VarChar
  block_number       BigInt
  proposal_type_id   String
  quorum             String
  approval_threshold String
  name               String
  inputs             Json

  @@map("proposal_types")
  @@schema("uniswap")
}

view uniswapStakedDeposits {
  deposit_id  BigInt  @unique
  depositor   String
  beneficiary String
  delegatee   String
  amount      Decimal @db.Decimal

  @@map("staked_deposits")
  @@schema("uniswap")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view uniswapDelegateChangedEvents {
  chain_id          Int
  address           String
  block_number      BigInt
  block_hash        String
  log_index         String
  transaction_index BigInt
  transaction_hash  String @unique
  delegator         String
  from_delegate     String
  to_delegate       String

  @@map("delegate_changed_events")
  @@schema("uniswap")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view advanced_voting_power_raw_snaps {
  chain_str           String?
  delegate            String?
  chain               String[]
  rules               Json[]
  allowance           Decimal? @db.Decimal
  subdelegated_share  Decimal? @db.Decimal
  subdelegated_amount Decimal? @db.Decimal
  balance             Decimal? @db.Decimal
  block_number        BigInt?
  proxy               String?
  contract            String?
  ordinal             Decimal? @db.Decimal

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view subdelegations {
  to                   String?
  from                 String?
  from_proxy           String?
  subdelegation_rules  Json?
  block_number         BigInt?
  balance              String?
  balance_block_number BigInt?
  contract             String?

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view subdelegations_snaps {
  to                   String?
  from                 String?
  from_proxy           String?
  subdelegation_rules  Json?
  block_number         BigInt?
  balance              String?
  balance_block_number BigInt?
  contract             String?
  ordinal              Decimal? @db.Decimal
  balance_ordinal      Decimal? @db.Decimal

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view direct_chains {
  delegate  String?
  rules     Json[]
  chain     String[]
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view authority_chains {
  delegate  String?
  rules     Json[]
  chain     String[]
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view delegates_wrapper {
  delegate          String?
  num_of_delegators Decimal? @db.Decimal
  direct_vp         Decimal? @db.Decimal
  advanced_vp       Decimal? @db.Decimal
  voting_power      Decimal? @db.Decimal
  contract          String?

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view direct_chains_snaps {
  delegate             String?
  rules                Json[]
  chain                String[]
  proxy                String?
  balance              Decimal? @db.Decimal
  balance_block_number BigInt?
  allowance            Decimal? @db.Decimal
  contract             String?
  balance_ordinal      Decimal? @db.Decimal

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view vote_cast_events {
  transaction_hash String?
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?
  chain_id         Int?

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view vote_cast_with_params_events {
  transaction_hash String?
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?
  chain_id         Int?

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view authority_chains_snaps_wrapper {
  delegate             String?
  rules                Json[]
  chain                String[]
  proxy                String?
  balance              Decimal? @db.Decimal
  balance_block_number BigInt?
  allowance            Decimal? @db.Decimal
  contract             String?
  balance_ordinal      Decimal? @db.Decimal

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view authority_chains_wrapper {
  delegate  String?
  rules     Json[]
  chain     String[]
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view subdelegation_events {
  to                  String?
  from                String?
  subdelegation_rules Json?
  block_number        BigInt?
  contract            String?
  row_number          BigInt?
  ordinal             Decimal? @db.Decimal

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view ens_advanced_voting_power_raw_snaps {
  chain_str           String?
  delegate            String?
  chain               String[]
  rules               Json?
  allowance           Decimal? @db.Decimal
  subdelegated_share  Decimal? @db.Decimal
  subdelegated_amount Decimal? @db.Decimal
  balance             Decimal? @db.Decimal
  block_number        BigInt?
  proxy               String?
  contract            String?  @db.VarChar
  ordinal             Decimal? @db.Decimal

  @@map("advanced_voting_power_raw_snaps")
  @@ignore
  @@schema("ens")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view ens_authority_chains {
  delegate  String?
  rules     Json?
  chain     String[]
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("authority_chains")
  @@ignore
  @@schema("ens")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view etherfi_advanced_voting_power_raw_snaps {
  chain_str           String?
  delegate            String?
  chain               String[]
  rules               Json?
  allowance           Decimal? @db.Decimal
  subdelegated_share  Decimal? @db.Decimal
  subdelegated_amount Decimal? @db.Decimal
  balance             Decimal? @db.Decimal
  block_number        BigInt?
  proxy               String?
  contract            String?  @db.VarChar
  ordinal             Decimal? @db.Decimal

  @@map("advanced_voting_power_raw_snaps")
  @@ignore
  @@schema("etherfi")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view etherfi_authority_chains {
  delegate  String?
  rules     Json?
  chain     String[]
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("authority_chains")
  @@ignore
  @@schema("etherfi")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view ens_vote_cast_events {
  transaction_hash String?
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?
  chain_id         Int?

  @@map("vote_cast_events")
  @@ignore
  @@schema("ens")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view ens_vote_cast_with_params_events {
  transaction_hash String?
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?
  chain_id         Int?

  @@map("vote_cast_with_params_events")
  @@ignore
  @@schema("ens")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view etherfi_vote_cast_events {
  transaction_hash String?
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?
  chain_id         Int?

  @@map("vote_cast_events")
  @@ignore
  @@schema("etherfi")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view etherfi_vote_cast_with_params_events {
  transaction_hash String?
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?
  chain_id         Int?

  @@map("vote_cast_with_params_events")
  @@ignore
  @@schema("etherfi")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view uniswap_advanced_voting_power_raw_snaps {
  chain_str           String?
  delegate            String?
  chain               String[]
  rules               Json?
  allowance           Decimal? @db.Decimal
  subdelegated_share  Decimal? @db.Decimal
  subdelegated_amount Decimal? @db.Decimal
  balance             Decimal? @db.Decimal
  block_number        BigInt?
  proxy               String?
  contract            String?  @db.VarChar
  ordinal             Decimal? @db.Decimal

  @@map("advanced_voting_power_raw_snaps")
  @@ignore
  @@schema("uniswap")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view uniswap_authority_chains {
  delegate  String?
  rules     Json?
  chain     String[]
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("authority_chains")
  @@ignore
  @@schema("uniswap")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view uniswap_direct_chains {
  delegate  String?
  rules     Json?
  chain     String?
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("direct_chains")
  @@ignore
  @@schema("uniswap")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view uniswap_direct_chains_snaps {
  delegate             String?
  rules                Json?
  chain                String?
  proxy                String?
  balance              Decimal? @db.Decimal
  balance_block_number BigInt?
  allowance            Decimal? @db.Decimal
  contract             String?  @db.VarChar
  balance_ordinal      Decimal? @db.Decimal

  @@map("direct_chains_snaps")
  @@ignore
  @@schema("uniswap")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view uniswap_vote_cast_events {
  transaction_hash String?
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?
  chain_id         Int?

  @@map("vote_cast_events")
  @@ignore
  @@schema("uniswap")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view uniswap_vote_cast_with_params_events {
  transaction_hash String?
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?
  chain_id         Int?

  @@map("vote_cast_with_params_events")
  @@ignore
  @@schema("uniswap")
}

view cyberAdvancedDelegatees {
  pair             String  @unique
  from             String
  to               String
  delegated_amount Decimal @db.Decimal
  delegated_share  Decimal @db.Decimal
  block_number     BigInt
  contract         String? @db.VarChar
  transaction_hash String?

  @@map("advanced_delegatees")
  @@schema("cyber")
}

view cyberAdvancedVotingPower {
  delegate                 String   @unique
  vp_allowance             Decimal  @db.Decimal
  vp_delegatable_allowance Decimal  @db.Decimal
  delegated_vp             Decimal  @db.Decimal
  advanced_vp              Decimal  @db.Decimal
  subdelegated_share       Decimal? @db.Decimal
  contract                 String   @db.VarChar

  @@map("advanced_voting_power")
  @@schema("cyber")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view cyber_advanced_voting_power_raw_snaps {
  chain_str           String?
  delegate            String?
  chain               String[]
  rules               Json?
  allowance           Decimal? @db.Decimal
  subdelegated_share  Decimal? @db.Decimal
  subdelegated_amount Decimal? @db.Decimal
  balance             Decimal? @db.Decimal
  block_number        BigInt?
  proxy               String?
  contract            String?  @db.VarChar
  ordinal             Decimal? @db.Decimal

  @@map("advanced_voting_power_raw_snaps")
  @@ignore
  @@schema("cyber")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view cyber_authority_chains {
  delegate  String?
  rules     Json?
  chain     String[]
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("authority_chains")
  @@ignore
  @@schema("cyber")
}

view cyberAuthorityChainsSnaps {
  id                   String   @unique
  delegate             String
  rules                Json?
  chain                String[]
  proxy                String
  balance              Decimal  @db.Decimal
  allowance            Decimal  @db.Decimal
  contract             String   @db.VarChar
  balance_block_number BigInt?
  balance_ordinal      Decimal? @db.Decimal

  @@map("authority_chains_snaps")
  @@schema("cyber")
}

view cyberDelegateChangedEvents {
  chain_id          Int
  address           String
  block_number      BigInt
  block_hash        String
  log_index         BigInt?
  transaction_index BigInt?
  transaction_hash  String  @unique
  delegator         String
  from_delegate     String
  to_delegate       String

  @@map("delegate_changed_events")
  @@schema("cyber")
}

view cyberDelegatees {
  delegator        String  @unique
  delegatee        String
  block_number     BigInt
  balance          Decimal @db.Decimal
  contract         String?
  transaction_hash String?

  @@map("delegatees")
  @@schema("cyber")
}

view cyberDelegates {
  delegate          String  @unique
  contract          String?
  num_of_delegators Decimal @db.Decimal
  direct_vp         Decimal @db.Decimal
  advanced_vp       Decimal @db.Decimal
  voting_power      Decimal @db.Decimal

  @@map("delegates")
  @@schema("cyber")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view cyber_direct_chains {
  delegate  String?
  rules     Json?
  chain     String?
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("direct_chains")
  @@ignore
  @@schema("cyber")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view cyber_direct_chains_snaps {
  delegate             String?
  rules                Json?
  chain                String?
  proxy                String?
  balance              Decimal? @db.Decimal
  balance_block_number BigInt?
  allowance            Decimal? @db.Decimal
  contract             String?  @db.VarChar
  balance_ordinal      Decimal? @db.Decimal

  @@map("direct_chains_snaps")
  @@ignore
  @@schema("cyber")
}

view cyberProposalTypes {
  id                 String @unique
  contract           String
  block_number       BigInt
  proposal_type_id   String
  quorum             String
  approval_threshold String
  name               String
  inputs             Json

  @@map("proposal_types")
  @@schema("cyber")
}

view cyberStakedDeposits {
  deposit_id  BigInt  @unique
  depositor   String
  beneficiary String
  delegatee   String
  amount      Decimal @db.Decimal

  @@map("staked_deposits")
  @@schema("cyber")
}

view cyberVotableSupply {
  chain_id       Int?
  address        String?
  votable_supply String  @unique

  @@map("votable_supply")
  @@schema("cyber")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view cyber_vote_cast_events {
  transaction_hash String?
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?
  chain_id         Int?

  @@map("vote_cast_events")
  @@ignore
  @@schema("cyber")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view cyber_vote_cast_with_params_events {
  transaction_hash String?
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?
  chain_id         Int?

  @@map("vote_cast_with_params_events")
  @@ignore
  @@schema("cyber")
}

view cyberVoterStats {
  voter              String   @unique
  proposals_voted    BigInt?
  participation_rate Float?
  last_10_props      Decimal? @db.Decimal
  for                BigInt?
  abstain            BigInt?
  against            BigInt?
  proposals_proposed BigInt?
  contract           String?

  @@map("voter_stats")
  @@schema("cyber")
}

view cyberVotes {
  transaction_hash String  @unique @db.VarChar
  proposal_id      String
  voter            String
  support          String
  weight           Decimal @db.Decimal
  reason           String?
  block_number     BigInt
  params           String?
  start_block      String?
  description      String?
  proposal_data    Json
  proposal_type    String
  contract         String?
  chain_id         Int?

  @@map("votes")
  @@schema("cyber")
}

view cyberVotingPower {
  delegate     String  @unique
  voting_power String?
  contract     String

  @@map("voting_power")
  @@schema("cyber")
}

view cyberVotingPowerSnaps {
  id                String   @id
  delegate          String?
  balance           String?
  block_number      BigInt?
  ordinal           Decimal? @db.Decimal
  transaction_index BigInt?
  log_index         BigInt?
  contract          String?

  @@map("voting_power_snaps")
  @@schema("cyber")
}

view scrollAdvancedDelegatees {
  pair             String  @unique
  from             String
  to               String
  delegated_amount Decimal @db.Decimal
  delegated_share  Decimal @db.Decimal
  block_number     BigInt
  contract         String?
  transaction_hash String?

  @@map("advanced_delegatees")
  @@schema("scroll")
}

view scrollAdvancedVotingPower {
  delegate                 String   @unique
  vp_allowance             Decimal  @db.Decimal
  vp_delegatable_allowance Decimal  @db.Decimal
  delegated_vp             Decimal  @db.Decimal
  advanced_vp              Decimal  @db.Decimal
  subdelegated_share       Decimal? @db.Decimal
  contract                 String   @db.VarChar

  @@map("advanced_voting_power")
  @@schema("scroll")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view scroll_advanced_voting_power_raw_snaps {
  chain_str           String?
  delegate            String?
  chain               String[]
  rules               Json?
  allowance           Decimal? @db.Decimal
  subdelegated_share  Decimal? @db.Decimal
  subdelegated_amount Decimal? @db.Decimal
  balance             Decimal? @db.Decimal
  block_number        BigInt?
  proxy               String?
  contract            String?  @db.VarChar
  ordinal             Decimal? @db.Decimal

  @@map("advanced_voting_power_raw_snaps")
  @@ignore
  @@schema("scroll")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view scroll_authority_chains {
  delegate  String?
  rules     Json?
  chain     String[]
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("authority_chains")
  @@ignore
  @@schema("scroll")
}

view scrollAuthorityChainsSnaps {
  id                   String   @unique
  delegate             String
  rules                Json?
  chain                String[]
  proxy                String
  balance              Decimal  @db.Decimal
  allowance            Decimal  @db.Decimal
  contract             String   @db.VarChar
  balance_block_number BigInt?
  balance_ordinal      Decimal? @db.Decimal

  @@map("authority_chains_snaps")
  @@schema("scroll")
}

view scrollDelegateChangedEvents {
  chain_id          Int
  address           String
  block_number      BigInt
  block_hash        String
  log_index         BigInt?
  transaction_index BigInt?
  transaction_hash  String  @unique
  delegator         String
  from_delegate     String
  to_delegate       String

  @@map("delegate_changed_events")
  @@schema("scroll")
}

view scrollDelegatees {
  delegator        String  @unique
  delegatee        String
  block_number     BigInt
  balance          Decimal @db.Decimal
  contract         String?
  transaction_hash String?

  @@map("delegatees")
  @@schema("scroll")
}

view scrollDelegates {
  delegate          String  @unique
  contract          String?
  num_of_delegators Decimal @db.Decimal
  direct_vp         Decimal @db.Decimal
  advanced_vp       Decimal @db.Decimal
  voting_power      Decimal @db.Decimal

  @@map("delegates")
  @@schema("scroll")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view scroll_direct_chains {
  delegate  String?
  rules     Json?
  chain     String?
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("direct_chains")
  @@ignore
  @@schema("scroll")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view scroll_direct_chains_snaps {
  delegate             String?
  rules                Json?
  chain                String?
  proxy                String?
  balance              Decimal? @db.Decimal
  balance_block_number BigInt?
  allowance            Decimal? @db.Decimal
  contract             String?  @db.VarChar
  balance_ordinal      Decimal? @db.Decimal

  @@map("direct_chains_snaps")
  @@ignore
  @@schema("scroll")
}

view scrollProposalTypes {
  id                 String @unique
  contract           String
  block_number       BigInt
  proposal_type_id   String
  quorum             String
  approval_threshold String
  name               String
  inputs             Json

  @@map("proposal_types")
  @@schema("scroll")
}

view scrollStakedDeposits {
  deposit_id  BigInt  @unique
  depositor   String
  beneficiary String
  delegatee   String
  amount      Decimal @db.Decimal

  @@map("staked_deposits")
  @@schema("scroll")
}

view scrollVotableSupply {
  chain_id       Int?
  address        String?
  votable_supply String  @unique

  @@map("votable_supply")
  @@schema("scroll")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view scroll_vote_cast_events {
  transaction_hash String?
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?
  chain_id         Int?

  @@map("vote_cast_events")
  @@ignore
  @@schema("scroll")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view scroll_vote_cast_with_params_events {
  transaction_hash String?
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?
  chain_id         Int?

  @@map("vote_cast_with_params_events")
  @@ignore
  @@schema("scroll")
}

view scrollVoterStats {
  voter              String   @unique
  proposals_voted    BigInt?
  participation_rate Float?
  last_10_props      Decimal? @db.Decimal
  for                BigInt?
  abstain            BigInt?
  against            BigInt?
  proposals_proposed BigInt?
  contract           String?

  @@map("voter_stats")
  @@schema("scroll")
}

view scrollVotes {
  transaction_hash String  @unique @db.VarChar
  proposal_id      String
  voter            String
  support          String
  weight           Decimal @db.Decimal
  reason           String?
  block_number     BigInt
  params           String?
  start_block      String?
  description      String?
  proposal_data    Json
  proposal_type    String
  contract         String?
  chain_id         Int?

  @@map("votes")
  @@schema("scroll")
}

view scrollVotingPower {
  delegate     String  @unique
  voting_power String?
  contract     String

  @@map("voting_power")
  @@schema("scroll")
}

view scrollVotingPowerSnaps {
  id                String   @id
  delegate          String?
  balance           String?
  block_number      BigInt?
  ordinal           Decimal? @db.Decimal
  transaction_index BigInt?
  log_index         String?
  contract          String?

  @@map("voting_power_snaps")
  @@schema("scroll")
}

view deriveAdvancedDelegatees {
  pair             String  @unique
  from             String
  to               String
  delegated_amount Decimal @db.Decimal
  delegated_share  Decimal @db.Decimal
  block_number     BigInt
  contract         String?
  transaction_hash String?

  @@map("advanced_delegatees")
  @@schema("derive")
}

view deriveAdvancedVotingPower {
  delegate                 String   @unique
  vp_allowance             Decimal  @db.Decimal
  vp_delegatable_allowance Decimal  @db.Decimal
  delegated_vp             Decimal  @db.Decimal
  advanced_vp              Decimal  @db.Decimal
  subdelegated_share       Decimal? @db.Decimal
  contract                 String   @db.VarChar

  @@map("advanced_voting_power")
  @@schema("derive")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view derive_advanced_voting_power_raw_snaps {
  chain_str           String?
  delegate            String?
  chain               String[]
  rules               Json?
  allowance           Decimal? @db.Decimal
  subdelegated_share  Decimal? @db.Decimal
  subdelegated_amount Decimal? @db.Decimal
  balance             Decimal? @db.Decimal
  block_number        BigInt?
  proxy               String?
  contract            String?  @db.VarChar
  ordinal             Decimal? @db.Decimal

  @@map("advanced_voting_power_raw_snaps")
  @@ignore
  @@schema("derive")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view derive_authority_chains {
  delegate  String?
  rules     Json?
  chain     String[]
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("authority_chains")
  @@ignore
  @@schema("derive")
}

view deriveAuthorityChainsSnaps {
  id                   String   @unique
  delegate             String
  rules                Json?
  chain                String[]
  proxy                String
  balance              Decimal  @db.Decimal
  allowance            Decimal  @db.Decimal
  contract             String   @db.VarChar
  balance_block_number BigInt?
  balance_ordinal      Decimal? @db.Decimal

  @@map("authority_chains_snaps")
  @@schema("derive")
}

view deriveDelegateChangedEvents {
  chain_id          Int
  address           String
  block_number      BigInt
  block_hash        String
  log_index         BigInt?
  transaction_index BigInt?
  transaction_hash  String  @unique
  delegator         String
  from_delegate     String
  to_delegate       String

  @@map("delegate_changed_events")
  @@schema("derive")
}

view deriveDelegatees {
  delegator        String  @unique
  delegatee        String
  block_number     BigInt
  balance          Decimal @db.Decimal
  contract         String?
  transaction_hash String?

  @@map("delegatees")
  @@schema("derive")
}

view deriveDelegates {
  delegate          String  @unique
  contract          String?
  num_of_delegators Decimal @db.Decimal
  direct_vp         Decimal @db.Decimal
  advanced_vp       Decimal @db.Decimal
  voting_power      Decimal @db.Decimal

  @@map("delegates")
  @@schema("derive")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view derive_direct_chains {
  delegate  String?
  rules     Json?
  chain     String?
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("direct_chains")
  @@ignore
  @@schema("derive")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view derive_direct_chains_snaps {
  delegate             String?
  rules                Json?
  chain                String?
  proxy                String?
  balance              Decimal? @db.Decimal
  balance_block_number BigInt?
  allowance            Decimal? @db.Decimal
  contract             String?  @db.VarChar
  balance_ordinal      Decimal? @db.Decimal

  @@map("direct_chains_snaps")
  @@ignore
  @@schema("derive")
}

view deriveProposalTypes {
  id                 String @unique
  contract           String
  block_number       BigInt
  proposal_type_id   String
  quorum             String
  approval_threshold String
  name               String
  inputs             Json

  @@map("proposal_types")
  @@schema("derive")
}

view deriveStakedDeposits {
  deposit_id  BigInt  @unique
  depositor   String
  beneficiary String
  delegatee   String
  amount      Decimal @db.Decimal

  @@map("staked_deposits")
  @@schema("derive")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view derive_vote_cast_events {
  transaction_hash String?
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?
  chain_id         Int?

  @@map("vote_cast_events")
  @@ignore
  @@schema("derive")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view derive_vote_cast_with_params_events {
  transaction_hash String?
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?
  chain_id         Int?

  @@map("vote_cast_with_params_events")
  @@ignore
  @@schema("derive")
}

view deriveVoterStats {
  voter              String   @unique
  proposals_voted    BigInt?
  participation_rate Float?
  last_10_props      Decimal? @db.Decimal
  for                BigInt?
  abstain            BigInt?
  against            BigInt?
  proposals_proposed BigInt?
  contract           String?

  @@map("voter_stats")
  @@schema("derive")
}

view deriveVotes {
  transaction_hash String  @unique @db.VarChar
  proposal_id      String
  voter            String
  support          String
  weight           Decimal @db.Decimal
  reason           String?
  block_number     BigInt
  params           String?
  start_block      String?
  description      String?
  proposal_data    Json
  proposal_type    String
  contract         String?
  chain_id         Int?

  @@map("votes")
  @@schema("derive")
}

view deriveVotingPower {
  delegate     String  @unique
  voting_power String?
  contract     String

  @@map("voting_power")
  @@schema("derive")
}

view deriveVotingPowerSnaps {
  id                String   @id
  delegate          String?
  balance           String?
  block_number      BigInt?
  ordinal           Decimal? @db.Decimal
  transaction_index BigInt?
  log_index         String?
  contract          String?

  @@map("voting_power_snaps")
  @@schema("derive")
}

view pguildAdvancedDelegatees {
  pair             String  @unique
  from             String
  to               String
  delegated_amount Decimal @db.Decimal
  delegated_share  Decimal @db.Decimal
  block_number     BigInt
  contract         String? @db.VarChar
  transaction_hash String?

  @@map("advanced_delegatees")
  @@schema("pguild")
}

view pguildAdvancedVotingPower {
  delegate                 String   @unique
  vp_allowance             Decimal  @db.Decimal
  vp_delegatable_allowance Decimal  @db.Decimal
  delegated_vp             Decimal  @db.Decimal
  advanced_vp              Decimal  @db.Decimal
  subdelegated_share       Decimal? @db.Decimal
  contract                 String   @db.VarChar

  @@map("advanced_voting_power")
  @@schema("pguild")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view pguild_advanced_voting_power_raw_snaps {
  chain_str           String?
  delegate            String?
  chain               String[]
  rules               Json?
  allowance           Decimal? @db.Decimal
  subdelegated_share  Decimal? @db.Decimal
  subdelegated_amount Decimal? @db.Decimal
  balance             Decimal? @db.Decimal
  block_number        BigInt?
  proxy               String?
  contract            String?  @db.VarChar
  ordinal             Decimal? @db.Decimal

  @@map("advanced_voting_power_raw_snaps")
  @@ignore
  @@schema("pguild")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view pguild_authority_chains {
  delegate  String?
  rules     Json?
  chain     String[]
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("authority_chains")
  @@ignore
  @@schema("pguild")
}

view pguildAuthorityChainsSnaps {
  id                   String   @unique
  delegate             String
  rules                Json?
  chain                String[]
  proxy                String
  balance              Decimal  @db.Decimal
  allowance            Decimal  @db.Decimal
  contract             String   @db.VarChar
  balance_block_number BigInt?
  balance_ordinal      Decimal? @db.Decimal

  @@map("authority_chains_snaps")
  @@schema("pguild")
}

view pguildDelegateChangedEvents {
  chain_id          Int
  address           String
  block_number      BigInt
  block_hash        String
  log_index         String?
  transaction_index BigInt?
  transaction_hash  String  @unique
  delegator         String
  from_delegate     String
  to_delegate       String

  @@map("delegate_changed_events")
  @@schema("pguild")
}

view pguildDelegatees {
  delegator        String  @unique
  delegatee        String
  block_number     BigInt
  balance          Decimal @db.Decimal
  contract         String?
  transaction_hash String?

  @@map("delegatees")
  @@schema("pguild")
}

view pguildDelegates {
  delegate          String  @unique
  contract          String?
  num_of_delegators Decimal @db.Decimal
  direct_vp         Decimal @db.Decimal
  advanced_vp       Decimal @db.Decimal
  voting_power      Decimal @db.Decimal

  @@map("delegates")
  @@schema("pguild")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view pguild_direct_chains {
  delegate  String?
  rules     Json?
  chain     String?
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("direct_chains")
  @@ignore
  @@schema("pguild")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view pguild_direct_chains_snaps {
  delegate             String?
  rules                Json?
  chain                String?
  proxy                String?
  balance              Decimal? @db.Decimal
  balance_block_number BigInt?
  allowance            Decimal? @db.Decimal
  contract             String?  @db.VarChar
  balance_ordinal      Decimal? @db.Decimal

  @@map("direct_chains_snaps")
  @@ignore
  @@schema("pguild")
}

view pguildProposalTypes {
  id                 String  @unique
  contract           String
  block_number       BigInt
  proposal_type_id   String
  quorum             String
  approval_threshold String
  name               String
  description        String?
  module             String?
  inputs             Json

  @@map("proposal_types")
  @@schema("pguild")
}

view pguildStakedDeposits {
  deposit_id  BigInt  @unique
  depositor   String
  beneficiary String
  delegatee   String
  amount      Decimal @db.Decimal

  @@map("staked_deposits")
  @@schema("pguild")
}

view pguildVotableSupply {
  chain_id       Int?
  address        String?
  votable_supply String  @unique

  @@map("votable_supply")
  @@schema("pguild")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view pguild_vote_cast_events {
  transaction_hash String?
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?
  chain_id         Int?

  @@map("vote_cast_events")
  @@ignore
  @@schema("pguild")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view pguild_vote_cast_with_params_events {
  transaction_hash String?
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?
  chain_id         Int?

  @@map("vote_cast_with_params_events")
  @@ignore
  @@schema("pguild")
}

view pguildVoterStats {
  voter              String   @unique
  proposals_voted    BigInt?
  participation_rate Float?
  last_10_props      Decimal? @db.Decimal
  for                BigInt?
  abstain            BigInt?
  against            BigInt?
  proposals_proposed BigInt?
  contract           String?

  @@map("voter_stats")
  @@schema("pguild")
}

view pguildVotes {
  transaction_hash String  @unique @db.VarChar
  proposal_id      String
  voter            String
  support          String
  weight           Decimal @db.Decimal
  reason           String?
  block_number     BigInt
  params           String?
  start_block      String?
  description      String?
  proposal_data    Json
  proposal_type    String
  contract         String?
  chain_id         Int?

  @@map("votes")
  @@schema("pguild")
}

view pguildVotingPower {
  delegate     String  @unique
  voting_power String?
  contract     String

  @@map("voting_power")
  @@schema("pguild")
}

view pguildVotingPowerSnaps {
  id                String   @id
  delegate          String?
  balance           String?
  block_number      BigInt?
  ordinal           Decimal? @db.Decimal
  transaction_index BigInt?
  log_index         String?
  contract          String?

  @@map("voting_power_snaps")
  @@schema("pguild")
}

view boostAdvancedDelegatees {
  pair             String  @unique
  from             String
  to               String
  delegated_amount Decimal @db.Decimal
  delegated_share  Decimal @db.Decimal
  block_number     BigInt
  contract         String? @db.VarChar
  transaction_hash String?

  @@map("advanced_delegatees")
  @@schema("boost")
}

view boostAdvancedVotingPower {
  delegate                 String   @unique
  vp_allowance             Decimal  @db.Decimal
  vp_delegatable_allowance Decimal  @db.Decimal
  delegated_vp             Decimal  @db.Decimal
  advanced_vp              Decimal  @db.Decimal
  subdelegated_share       Decimal? @db.Decimal
  contract                 String   @db.VarChar

  @@map("advanced_voting_power")
  @@schema("boost")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view boost_advanced_voting_power_raw_snaps {
  chain_str           String?
  delegate            String?
  chain               String[]
  rules               Json?
  allowance           Decimal? @db.Decimal
  subdelegated_share  Decimal? @db.Decimal
  subdelegated_amount Decimal? @db.Decimal
  balance             Decimal? @db.Decimal
  block_number        BigInt?
  proxy               String?
  contract            String?  @db.VarChar
  ordinal             Decimal? @db.Decimal

  @@map("advanced_voting_power_raw_snaps")
  @@ignore
  @@schema("boost")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view boost_authority_chains {
  delegate  String?
  rules     Json?
  chain     String[]
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("authority_chains")
  @@ignore
  @@schema("boost")
}

view boostAuthorityChainsSnaps {
  id                   String   @unique
  delegate             String
  rules                Json?
  chain                String[]
  proxy                String
  balance              Decimal  @db.Decimal
  allowance            Decimal  @db.Decimal
  contract             String   @db.VarChar
  balance_block_number BigInt?
  balance_ordinal      Decimal? @db.Decimal

  @@map("authority_chains_snaps")
  @@schema("boost")
}

view boostDelegateChangedEvents {
  chain_id          Int
  address           String
  block_number      BigInt
  block_hash        String
  log_index         String?
  transaction_index BigInt?
  transaction_hash  String  @unique
  delegator         String
  from_delegate     String
  to_delegate       String

  @@map("delegate_changed_events")
  @@schema("boost")
}

view boostDelegatees {
  delegator        String  @unique
  delegatee        String
  block_number     BigInt
  balance          Decimal @db.Decimal
  contract         String?
  transaction_hash String?

  @@map("delegatees")
  @@schema("boost")
}

view boostDelegates {
  delegate          String  @unique
  contract          String?
  num_of_delegators Decimal @db.Decimal
  direct_vp         Decimal @db.Decimal
  advanced_vp       Decimal @db.Decimal
  voting_power      Decimal @db.Decimal

  @@map("delegates")
  @@schema("boost")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view boost_direct_chains {
  delegate  String?
  rules     Json?
  chain     String?
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("direct_chains")
  @@ignore
  @@schema("boost")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view boost_direct_chains_snaps {
  delegate             String?
  rules                Json?
  chain                String?
  proxy                String?
  balance              Decimal? @db.Decimal
  balance_block_number BigInt?
  allowance            Decimal? @db.Decimal
  contract             String?  @db.VarChar
  balance_ordinal      Decimal? @db.Decimal

  @@map("direct_chains_snaps")
  @@ignore
  @@schema("boost")
}

view boostProposalTypes {
  id                 String @unique
  contract           String
  block_number       BigInt
  proposal_type_id   String
  quorum             String
  approval_threshold String
  name               String
  inputs             Json

  @@map("proposal_types")
  @@schema("boost")
}

view boostProposals {
  proposal_id                String       @unique
  contract                   String       @db.VarChar
  proposer                   String
  description                String?
  ordinal                    Decimal      @db.Decimal
  created_block              BigInt?
  start_block                String
  end_block                  String?
  cancelled_block            BigInt?
  queued_block               BigInt?
  executed_block             BigInt?
  proposal_data              Json?
  proposal_data_raw          String?
  proposal_type              ProposalType
  proposal_type_data         Json?
  proposal_results           Json?
  created_transaction_hash   String?
  cancelled_transaction_hash String?      @db.VarChar
  queued_transaction_hash    String?      @db.VarChar
  executed_transaction_hash  String?      @db.VarChar

  @@map("proposals")
  @@schema("boost")
}

view boostStakedDeposits {
  deposit_id  BigInt  @unique
  depositor   String
  beneficiary String
  delegatee   String
  amount      Decimal @db.Decimal

  @@map("staked_deposits")
  @@schema("boost")
}

view boostVotableSupply {
  chain_id       Int?
  address        String?
  votable_supply String  @unique

  @@map("votable_supply")
  @@schema("boost")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view boost_vote_cast_events {
  transaction_hash String?
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?
  chain_id         Int?

  @@map("vote_cast_events")
  @@ignore
  @@schema("boost")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view boost_vote_cast_with_params_events {
  transaction_hash String?
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?
  chain_id         Int?

  @@map("vote_cast_with_params_events")
  @@ignore
  @@schema("boost")
}

view boostVoterStats {
  voter              String   @unique
  proposals_voted    BigInt?
  participation_rate Float?
  last_10_props      Decimal? @db.Decimal
  for                BigInt?
  abstain            BigInt?
  against            BigInt?
  proposals_proposed BigInt?
  contract           String?

  @@map("voter_stats")
  @@schema("boost")
}

view boostVotes {
  transaction_hash String       @unique @db.VarChar
  proposal_id      String
  voter            String
  support          String
  weight           Decimal      @db.Decimal
  reason           String?
  block_number     BigInt
  params           String?
  start_block      String?
  description      String?
  proposal_data    Json
  proposal_type    ProposalType
  contract         String?
  chain_id         Int?

  @@map("votes")
  @@schema("boost")
}

view boostVotingPower {
  delegate     String  @unique
  voting_power String?
  contract     String

  @@map("voting_power")
  @@schema("boost")
}

view boostVotingPowerSnaps {
  id                String   @id
  delegate          String?
  balance           String?
  block_number      BigInt?
  ordinal           Decimal? @db.Decimal
  transaction_index BigInt?
  log_index         String?
  contract          String?

  @@map("voting_power_snaps")
  @@schema("boost")
}

view xaiAdvancedDelegatees {
  pair             String  @unique
  from             String
  to               String
  delegated_amount Decimal @db.Decimal
  delegated_share  Decimal @db.Decimal
  block_number     BigInt
  contract         String? @db.VarChar
  transaction_hash String?

  @@map("advanced_delegatees")
  @@schema("xai")
}

view xaiAdvancedVotingPower {
  delegate                 String   @unique
  vp_allowance             Decimal  @db.Decimal
  vp_delegatable_allowance Decimal  @db.Decimal
  delegated_vp             Decimal  @db.Decimal
  advanced_vp              Decimal  @db.Decimal
  subdelegated_share       Decimal? @db.Decimal
  contract                 String   @db.VarChar

  @@map("advanced_voting_power")
  @@schema("xai")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view xai_advanced_voting_power_raw_snaps {
  chain_str           String?
  delegate            String?
  chain               String[]
  rules               Json?
  allowance           Decimal? @db.Decimal
  subdelegated_share  Decimal? @db.Decimal
  subdelegated_amount Decimal? @db.Decimal
  balance             Decimal? @db.Decimal
  block_number        BigInt?
  proxy               String?
  contract            String?  @db.VarChar
  ordinal             Decimal? @db.Decimal

  @@map("advanced_voting_power_raw_snaps")
  @@ignore
  @@schema("xai")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view xai_authority_chains {
  delegate  String?
  rules     Json?
  chain     String[]
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("authority_chains")
  @@ignore
  @@schema("xai")
}

view xaiAuthorityChainsSnaps {
  id                   String   @unique
  delegate             String
  rules                Json?
  chain                String[]
  proxy                String
  balance              Decimal  @db.Decimal
  allowance            Decimal  @db.Decimal
  contract             String   @db.VarChar
  balance_block_number BigInt?
  balance_ordinal      Decimal? @db.Decimal

  @@map("authority_chains_snaps")
  @@schema("xai")
}

view xaiDelegateChangedEvents {
  chain_id          Int
  address           String
  block_number      BigInt
  block_hash        String
  log_index         BigInt?
  transaction_index BigInt?
  transaction_hash  String  @unique
  delegator         String
  from_delegate     String
  to_delegate       String

  @@map("delegate_changed_events")
  @@schema("xai")
}

view xaiDelegatees {
  delegator        String  @unique
  delegatee        String
  block_number     BigInt
  balance          Int
  contract         String?
  transaction_hash String?

  @@map("delegatees")
  @@schema("xai")
}

view xaiDelegates {
  delegate          String  @unique
  contract          String?
  num_of_delegators Decimal @db.Decimal
  direct_vp         Decimal @db.Decimal
  advanced_vp       Decimal @db.Decimal
  voting_power      Decimal @db.Decimal

  @@map("delegates")
  @@schema("xai")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view xai_direct_chains {
  delegate  String?
  rules     Json?
  chain     String?
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("direct_chains")
  @@ignore
  @@schema("xai")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view xai_direct_chains_snaps {
  delegate             String?
  rules                Json?
  chain                String?
  proxy                String?
  balance              Decimal? @db.Decimal
  balance_block_number BigInt?
  allowance            Decimal? @db.Decimal
  contract             String?  @db.VarChar
  balance_ordinal      Decimal? @db.Decimal

  @@map("direct_chains_snaps")
  @@ignore
  @@schema("xai")
}

view xaiProposalTypes {
  id                 String @unique
  contract           String
  block_number       BigInt
  proposal_type_id   String
  quorum             String
  approval_threshold String
  name               String
  inputs             Json

  @@map("proposal_types")
  @@schema("xai")
}

view xaiStakedDeposits {
  deposit_id  BigInt  @unique
  depositor   String
  beneficiary String
  delegatee   String
  amount      Decimal @db.Decimal

  @@map("staked_deposits")
  @@schema("xai")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view xai_vote_cast_events {
  transaction_hash String?
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?
  chain_id         Int?

  @@map("vote_cast_events")
  @@ignore
  @@schema("xai")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view xai_vote_cast_with_params_events {
  transaction_hash String?
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?
  chain_id         Int?

  @@map("vote_cast_with_params_events")
  @@ignore
  @@schema("xai")
}

view xaiVoterStats {
  voter              String   @unique
  proposals_voted    BigInt?
  participation_rate Float?
  last_10_props      Decimal? @db.Decimal
  for                BigInt?
  abstain            BigInt?
  against            BigInt?
  proposals_proposed BigInt?
  contract           String?

  @@map("voter_stats")
  @@schema("xai")
}

view xaiVotes {
  transaction_hash String  @unique @db.VarChar
  proposal_id      String
  voter            String
  support          String
  weight           Decimal @db.Decimal
  reason           String?
  block_number     BigInt
  params           String?
  start_block      String?
  description      String?
  proposal_data    Json
  proposal_type    String
  contract         String?
  chain_id         Int?

  @@map("votes")
  @@schema("xai")
}

view xaiVotingPower {
  delegate     String  @unique
  voting_power String?
  contract     String

  @@map("voting_power")
  @@schema("xai")
}

view xaiVotingPowerSnaps {
  id                String   @id
  delegate          String?
  balance           String?
  block_number      BigInt?
  ordinal           Decimal? @db.Decimal
  transaction_index BigInt?
  log_index         BigInt?
  contract          String?

  @@map("voting_power_snaps")
  @@schema("xai")
}

view b3AdvancedDelegatees {
  pair             String  @unique
  from             String
  to               String
  delegated_amount Decimal @db.Decimal
  delegated_share  Decimal @db.Decimal
  block_number     BigInt
  contract         String? @db.VarChar
  transaction_hash String?

  @@map("advanced_delegatees")
  @@schema("b3")
}

view b3AdvancedVotingPower {
  delegate                 String   @unique
  vp_allowance             Decimal  @db.Decimal
  vp_delegatable_allowance Decimal  @db.Decimal
  delegated_vp             Decimal  @db.Decimal
  advanced_vp              Decimal  @db.Decimal
  subdelegated_share       Decimal? @db.Decimal
  contract                 String   @db.VarChar

  @@map("advanced_voting_power")
  @@schema("b3")
}

view b3AuthorityChainsSnaps {
  id                   String   @unique
  delegate             String
  rules                Json?
  chain                String[]
  proxy                String
  balance              Decimal  @db.Decimal
  allowance            Decimal  @db.Decimal
  contract             String   @db.VarChar
  balance_block_number BigInt?
  balance_ordinal      Decimal? @db.Decimal

  @@map("authority_chains_snaps")
  @@schema("b3")
}

view b3DelegateChangedEvents {
  chain_id          Int
  address           String
  block_number      BigInt
  block_hash        String
  log_index         BigInt?
  transaction_index BigInt?
  transaction_hash  String  @unique
  delegator         String
  from_delegate     String
  to_delegate       String

  @@map("delegate_changed_events")
  @@schema("b3")
}

view b3Delegatees {
  delegator        String  @unique
  delegatee        String
  block_number     BigInt
  balance          Decimal @db.Decimal
  contract         String?
  transaction_hash String?

  @@map("delegatees")
  @@schema("b3")
}

view b3Delegates {
  delegate          String  @unique
  contract          String?
  num_of_delegators Decimal @db.Decimal
  direct_vp         Decimal @db.Decimal
  advanced_vp       Decimal @db.Decimal
  voting_power      Decimal @db.Decimal

  @@map("delegates")
  @@schema("b3")
}

view b3ProposalTypes {
  id                 String  @unique
  contract           String
  block_number       BigInt
  proposal_type_id   String
  quorum             String
  approval_threshold String
  name               String
  description        String?
  inputs             Json

  @@map("proposal_types")
  @@schema("b3")
}

view b3StakedDeposits {
  deposit_id  BigInt  @unique
  depositor   String
  beneficiary String
  delegatee   String
  amount      Decimal @db.Decimal

  @@map("staked_deposits")
  @@schema("b3")
}

view b3VotableSupply {
  chain_id       Int?
  address        String?
  votable_supply String  @unique

  @@map("votable_supply_v2")
  @@schema("b3")
}

view b3VoterStats {
  voter              String   @unique
  proposals_voted    BigInt?
  participation_rate Float?
  last_10_props      Decimal? @db.Decimal
  for                BigInt?
  abstain            BigInt?
  against            BigInt?
  proposals_proposed BigInt?
  contract           String?

  @@map("voter_stats")
  @@schema("b3")
}

view b3Votes {
  transaction_hash String  @unique @db.VarChar
  proposal_id      String
  voter            String
  support          String
  weight           Decimal @db.Decimal
  reason           String?
  block_number     BigInt
  params           String?
  start_block      String?
  description      String?
  proposal_data    Json
  proposal_type    String
  contract         String?
  chain_id         Int?

  @@map("votes")
  @@schema("b3")
}

view b3VotingPower {
  delegate     String  @unique
  voting_power String?
  contract     String

  @@map("voting_power")
  @@schema("b3")
}

view b3VotingPowerSnaps {
  id                String   @id
  delegate          String?
  balance           String?
  block_number      BigInt?
  ordinal           Decimal? @db.Decimal
  transaction_index BigInt?
  log_index         BigInt?
  contract          String?

  @@map("voting_power_snaps")
  @@schema("b3")
}

view demoAdvancedDelegatees {
  pair             String  @unique
  from             String
  to               String
  delegated_amount Decimal @db.Decimal
  delegated_share  Decimal @db.Decimal
  block_number     BigInt
  contract         String?
  transaction_hash String?

  @@map("advanced_delegatees")
  @@schema("demo")
}

view demoAdvancedVotingPower {
  delegate                 String   @unique
  vp_allowance             Decimal  @db.Decimal
  vp_delegatable_allowance Decimal  @db.Decimal
  delegated_vp             Decimal  @db.Decimal
  advanced_vp              Decimal  @db.Decimal
  subdelegated_share       Decimal? @db.Decimal
  contract                 String   @db.VarChar

  @@map("advanced_voting_power")
  @@schema("demo")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view demo_advanced_voting_power_raw_snaps {
  chain_str           String?
  delegate            String?
  chain               String[]
  rules               Json?
  allowance           Decimal? @db.Decimal
  subdelegated_share  Decimal? @db.Decimal
  subdelegated_amount Decimal? @db.Decimal
  balance             Decimal? @db.Decimal
  block_number        BigInt?
  proxy               String?
  contract            String?  @db.VarChar
  ordinal             Decimal? @db.Decimal

  @@map("advanced_voting_power_raw_snaps")
  @@ignore
  @@schema("demo")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view demo_authority_chains {
  delegate  String?
  rules     Json?
  chain     String[]
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("authority_chains")
  @@ignore
  @@schema("demo")
}

view demoAuthorityChainsSnaps {
  id                   String   @unique
  delegate             String
  rules                Json?
  chain                String[]
  proxy                String
  balance              Decimal  @db.Decimal
  allowance            Decimal  @db.Decimal
  contract             String   @db.VarChar
  balance_block_number BigInt?
  balance_ordinal      Decimal? @db.Decimal

  @@map("authority_chains_snaps")
  @@schema("demo")
}

view demoDelegateChangedEvents {
  chain_id          Int
  address           String
  block_number      BigInt
  block_hash        String
  log_index         BigInt?
  transaction_index BigInt?
  transaction_hash  String  @unique
  delegator         String
  from_delegate     String
  to_delegate       String

  @@map("delegate_changed_events")
  @@schema("demo")
}

view demoDelegatees {
  delegator        String  @unique
  delegatee        String
  block_number     BigInt
  balance          Decimal @db.Decimal
  contract         String?
  transaction_hash String?

  @@map("delegatees")
  @@schema("demo")
}

view demoDelegates {
  delegate          String  @unique
  contract          String?
  num_of_delegators Decimal @db.Decimal
  direct_vp         Decimal @db.Decimal
  advanced_vp       Decimal @db.Decimal
  voting_power      Decimal @db.Decimal

  @@map("delegates")
  @@schema("demo")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view demo_direct_chains {
  delegate  String?
  rules     Json?
  chain     String?
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("direct_chains")
  @@ignore
  @@schema("demo")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view demo_direct_chains_snaps {
  delegate             String?
  rules                Json?
  chain                String?
  proxy                String?
  balance              Decimal? @db.Decimal
  balance_block_number BigInt?
  allowance            Decimal? @db.Decimal
  contract             String?  @db.VarChar
  balance_ordinal      Decimal? @db.Decimal

  @@map("direct_chains_snaps")
  @@ignore
  @@schema("demo")
}

view demoProposalTypes {
  id                 String  @unique
  contract           String
  block_number       BigInt
  proposal_type_id   String
  quorum             String
  approval_threshold String
  name               String
  description        String?
  inputs             Json

  @@map("proposal_types")
  @@schema("demo")
}

view demoStakedDeposits {
  deposit_id  BigInt  @unique
  depositor   String
  beneficiary String
  delegatee   String
  amount      Decimal @db.Decimal

  @@map("staked_deposits")
  @@schema("demo")
}

view demoVotableSupply {
  chain_id       Int?
  address        String?
  votable_supply String  @unique

  @@map("votable_supply")
  @@schema("demo")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view demo_vote_cast_events {
  transaction_hash String?
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?
  chain_id         Int?

  @@map("vote_cast_events")
  @@ignore
  @@schema("demo")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view demo_vote_cast_with_params_events {
  transaction_hash String?
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?
  chain_id         Int?

  @@map("vote_cast_with_params_events")
  @@ignore
  @@schema("demo")
}

view demoVoterStats {
  voter              String   @unique
  proposals_voted    BigInt?
  participation_rate Float?
  last_10_props      Decimal? @db.Decimal
  for                BigInt?
  abstain            BigInt?
  against            BigInt?
  proposals_proposed BigInt?
  contract           String?

  @@map("voter_stats")
  @@schema("demo")
}

view demoVotes {
  transaction_hash String  @unique @db.VarChar
  proposal_id      String
  voter            String
  support          String
  weight           Decimal @db.Decimal
  reason           String?
  block_number     BigInt
  params           String?
  start_block      String?
  description      String?
  proposal_data    Json
  proposal_type    String
  contract         String?
  chain_id         Int?

  @@map("votes")
  @@schema("demo")
}

view demoVotingPower {
  delegate     String  @unique
  voting_power String?
  contract     String

  @@map("voting_power")
  @@schema("demo")
}

view demoVotingPowerSnaps {
  id                String   @id
  delegate          String?
  balance           String?
  block_number      BigInt?
  ordinal           Decimal? @db.Decimal
  transaction_index BigInt?
  log_index         String?
  contract          String?

  @@map("voting_power_snaps")
  @@schema("demo")
}

view lineaAdvancedDelegatees {
  pair             String  @unique
  from             String
  to               String
  delegated_amount Decimal @db.Decimal
  delegated_share  Decimal @db.Decimal
  block_number     BigInt
  contract         String?
  transaction_hash String?

  @@map("advanced_delegatees")
  @@schema("linea")
}

view lineaAdvancedVotingPower {
  delegate                 String   @unique
  vp_allowance             Decimal  @db.Decimal
  vp_delegatable_allowance Decimal  @db.Decimal
  delegated_vp             Decimal  @db.Decimal
  advanced_vp              Decimal  @db.Decimal
  subdelegated_share       Decimal? @db.Decimal
  contract                 String   @db.VarChar

  @@map("advanced_voting_power")
  @@schema("linea")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view linea_advanced_voting_power_raw_snaps {
  chain_str           String?
  delegate            String?
  chain               String[]
  rules               Json?
  allowance           Decimal? @db.Decimal
  subdelegated_share  Decimal? @db.Decimal
  subdelegated_amount Decimal? @db.Decimal
  balance             Decimal? @db.Decimal
  block_number        BigInt?
  proxy               String?
  contract            String?  @db.VarChar
  ordinal             Decimal? @db.Decimal

  @@map("advanced_voting_power_raw_snaps")
  @@ignore
  @@schema("linea")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view linea_authority_chains {
  delegate  String?
  rules     Json?
  chain     String[]
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("authority_chains")
  @@ignore
  @@schema("linea")
}

view lineaAuthorityChainsSnaps {
  id                   String   @unique
  delegate             String
  rules                Json?
  chain                String[]
  proxy                String
  balance              Decimal  @db.Decimal
  allowance            Decimal  @db.Decimal
  contract             String   @db.VarChar
  balance_block_number BigInt?
  balance_ordinal      Decimal? @db.Decimal

  @@map("authority_chains_snaps")
  @@schema("linea")
}

view lineaDelegateChangedEvents {
  chain_id          Int
  address           String
  block_number      BigInt
  block_hash        String
  log_index         BigInt?
  transaction_index BigInt?
  transaction_hash  String  @unique
  delegator         String
  from_delegate     String
  to_delegate       String

  @@map("delegate_changed_events")
  @@schema("linea")
}

view lineaDelegatees {
  delegator        String  @unique
  delegatee        String
  block_number     BigInt
  balance          Decimal @db.Decimal
  contract         String?
  transaction_hash String?

  @@map("delegatees")
  @@schema("linea")
}

view lineaDelegates {
  delegate          String  @unique
  contract          String?
  num_of_delegators Decimal @db.Decimal
  direct_vp         Decimal @db.Decimal
  advanced_vp       Decimal @db.Decimal
  voting_power      Decimal @db.Decimal

  @@map("delegates")
  @@schema("linea")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view linea_direct_chains {
  delegate  String?
  rules     Json?
  chain     String?
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("direct_chains")
  @@ignore
  @@schema("linea")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view linea_direct_chains_snaps {
  delegate             String?
  rules                Json?
  chain                String?
  proxy                String?
  balance              Decimal? @db.Decimal
  balance_block_number BigInt?
  allowance            Decimal? @db.Decimal
  contract             String?  @db.VarChar
  balance_ordinal      Decimal? @db.Decimal

  @@map("direct_chains_snaps")
  @@ignore
  @@schema("linea")
}

view lineaProposalTypes {
  id                 String  @unique
  contract           String
  block_number       BigInt
  proposal_type_id   String
  quorum             String
  approval_threshold String
  name               String
  description        String?
  module             String?
  inputs             Json

  @@map("proposal_types")
  @@schema("linea")
}

view lineaStakedDeposits {
  deposit_id  BigInt  @unique
  depositor   String
  beneficiary String
  delegatee   String
  amount      Decimal @db.Decimal

  @@map("staked_deposits")
  @@schema("linea")
}

view lineaVotableSupply {
  chain_id       Int?
  address        String?
  votable_supply String  @unique

  @@map("votable_supply")
  @@schema("linea")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view linea_vote_cast_events {
  transaction_hash String?
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?
  chain_id         Int?

  @@map("vote_cast_events")
  @@ignore
  @@schema("linea")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view linea_vote_cast_with_params_events {
  transaction_hash String?
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?
  chain_id         Int?

  @@map("vote_cast_with_params_events")
  @@ignore
  @@schema("linea")
}

view lineaoVoterStats {
  voter              String   @unique
  proposals_voted    BigInt?
  participation_rate Float?
  last_10_props      Decimal? @db.Decimal
  for                BigInt?
  abstain            BigInt?
  against            BigInt?
  proposals_proposed BigInt?
  contract           String?

  @@map("voter_stats")
  @@schema("linea")
}

view lineaVotes {
  transaction_hash String  @unique @db.VarChar
  proposal_id      String
  voter            String
  support          String
  weight           Decimal @db.Decimal
  reason           String?
  block_number     BigInt
  params           String?
  start_timestamp  String?
  description      String?
  proposal_data    Json
  proposal_type    String
  contract         String?
  chain_id         Int?

  @@map("votes")
  @@schema("linea")
}

view lineaVotingPower {
  delegate     String  @unique
  voting_power String?
  contract     String

  @@map("voting_power")
  @@schema("linea")
}

view lineaVotingPowerSnaps {
  id                String   @id
  delegate          String?
  balance           String?
  block_number      BigInt?
  ordinal           Decimal? @db.Decimal
  transaction_index BigInt?
  log_index         String?
  contract          String?

  @@map("voting_power_snaps")
  @@schema("linea")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view organizations {
  id           String?
  time_created BigInt?
  refUID       String?
  farcasterID  String?
  name         String?
  parentOrgUID String?
  projects     Json?   @db.Json
  ipfs_data    Json?   @db.Json

  @@ignore
  @@schema("retro_funding")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view project_applicants {
  application_id          String?
  project_id              String?
  round                   String?
  farcaser_id             String?
  name                    String?
  category                String?
  ipfs_data               Json?   @db.Json
  org_id                  String?
  org_name                String?
  org_ipfs_data           Json?   @db.Json
  application_category    String? @db.VarChar(255)
  application_subcategory Json?
  impact_statement        Json?
  team                    Json?

  @@ignore
  @@schema("retro_funding")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view project_applications {
  project_id     String?
  application_id String?
  round          String?
  farcaster_id   String?
  ipfs_data      Json?   @db.Json
  status         String?
  reason         String?

  @@ignore
  @@schema("retro_funding")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view uniswap_proposals {
  proposal_id                String?
  contract                   String?       @db.VarChar
  proposer                   String?
  description                String?
  ordinal                    Decimal?      @db.Decimal
  created_block              BigInt?
  start_block                String?
  end_block                  String?
  cancelled_block            BigInt?
  queued_block               BigInt?
  executed_block             BigInt?
  proposal_data              Json?
  proposal_data_raw          String?
  proposal_type              ProposalType?
  proposal_type_data         Json?
  proposal_results           Json?
  created_transaction_hash   String?
  cancelled_transaction_hash String?
  queued_transaction_hash    String?       @db.VarChar
  executed_transaction_hash  String?

  @@map("proposals")
  @@ignore
  @@schema("uniswap")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view derive_votable_supply {
  chain_id       Int?
  address        String?
  votable_supply String?

  @@map("votable_supply")
  @@ignore
  @@schema("derive")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view b3_advanced_voting_power_raw_snaps {
  chain_str           String?
  delegate            String?
  chain               String[]
  rules               Json?
  allowance           Decimal? @db.Decimal
  subdelegated_share  Decimal? @db.Decimal
  subdelegated_amount Decimal? @db.Decimal
  balance             Decimal? @db.Decimal
  block_number        BigInt?
  proxy               String?
  contract            String?  @db.VarChar
  ordinal             Decimal? @db.Decimal

  @@map("advanced_voting_power_raw_snaps")
  @@ignore
  @@schema("b3")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view b3_authority_chains {
  delegate  String?
  rules     Json?
  chain     String[]
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("authority_chains")
  @@ignore
  @@schema("b3")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view b3_direct_chains {
  delegate  String?
  rules     Json?
  chain     String?
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("direct_chains")
  @@ignore
  @@schema("b3")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view b3_direct_chains_snaps {
  delegate             String?
  rules                Json?
  chain                String?
  proxy                String?
  balance              Decimal? @db.Decimal
  balance_block_number BigInt?
  allowance            Decimal? @db.Decimal
  contract             String?  @db.VarChar
  balance_ordinal      Decimal? @db.Decimal

  @@map("direct_chains_snaps")
  @@ignore
  @@schema("b3")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view b3_votable_supply {
  chain_id       Int?
  address        String?
  votable_supply String?

  @@map("votable_supply")
  @@ignore
  @@schema("b3")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view b3_vote_cast_events {
  transaction_hash String?
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?
  chain_id         Int?

  @@map("vote_cast_events")
  @@ignore
  @@schema("b3")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view b3_vote_cast_with_params_events {
  transaction_hash String?
  proposal_id      String?
  voter            String?
  support          String?
  weight           Decimal? @db.Decimal
  reason           String?
  block_number     BigInt?
  params           String?
  contract         String?
  chain_id         Int?

  @@map("vote_cast_with_params_events")
  @@ignore
  @@schema("b3")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view xai_votable_supply {
  chain_id       Int?
  address        String?
  votable_supply String?

  @@map("votable_supply")
  @@ignore
  @@schema("xai")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view delgatees {
  delegator    String?
  delegatee    String?
  block_number BigInt?
  balance      Decimal? @db.Decimal

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This view or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
view optimism_votable_supply {
  chain_id       Int?
  address        String?
  votable_supply String?

  @@map("votable_supply")
  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view vote_cast_with_params_events_v2 {
  contract          String?
  id                String?
  address           String?
  block_number      BigInt?
  block_hash        String?
  log_index         BigInt?
  transaction_index BigInt?
  transaction_hash  String?
  sighash           String?
  chain_id          Int?
  event_name        String?
  voter             String?
  proposal_id       String?
  support           String?
  weight            String?
  reason            String?
  params            String?

  @@ignore
  @@schema("optimism")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view ens_direct_chains {
  delegate  String?
  rules     Json?
  chain     String?
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("direct_chains")
  @@ignore
  @@schema("ens")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view ens_direct_chains_snaps {
  delegate             String?
  rules                Json?
  chain                String?
  proxy                String?
  balance              Decimal? @db.Decimal
  balance_block_number BigInt?
  allowance            Decimal? @db.Decimal
  contract             String?  @db.VarChar
  balance_ordinal      Decimal? @db.Decimal

  @@map("direct_chains_snaps")
  @@ignore
  @@schema("ens")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view etherfi_direct_chains {
  delegate  String?
  rules     Json?
  chain     String?
  balance   Decimal? @db.Decimal
  allowance Decimal? @db.Decimal
  contract  String?  @db.VarChar

  @@map("direct_chains")
  @@ignore
  @@schema("etherfi")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view etherfi_direct_chains_snaps {
  delegate             String?
  rules                Json?
  chain                String?
  proxy                String?
  balance              Decimal? @db.Decimal
  balance_block_number BigInt?
  allowance            Decimal? @db.Decimal
  contract             String?  @db.VarChar
  balance_ordinal      Decimal? @db.Decimal

  @@map("direct_chains_snaps")
  @@ignore
  @@schema("etherfi")
}

enum DaoSlug {
  OP
  ENS
  UNI
  NOUNS
  LYRA
  ETHERFI
  UNISWAP
  CYBER
  SCROLL
  DERIVE
  PGUILD
  BOOST
  DEMO
  XAI
  B3
  LINEA
  NEWDAO
  WORLD

  @@map("dao_slug")
  @@schema("config")
}

enum Chain {
  optimism_mainnet @map("optimism-mainnet")
  ethereum_mainnet @map("ethereum-mainnet")

  @@map("chain")
  @@schema("config")
}

enum ContractType {
  governor
  token
  alligator
  proposal_types_configurator

  @@map("contract_type")
  @@schema("config")
}

enum Dao {
  optimism

  @@map("dao")
  @@schema("config")
}

enum Env {
  dev
  prod

  @@map("env")
  @@schema("config")
}

enum ProposalType {
  STANDARD
  APPROVAL
  OPTIMISTIC
  SNAPSHOT

  @@map("proposal_type")
  @@schema("config")
}

enum ProposalStage {
  ADDING_TEMP_CHECK
  DRAFTING
  ADDING_GITHUB_PR
  AWAITING_SUBMISSION
  AWAITING_SPONSORSHIP
  PENDING
  ACTIVE
  EXECUTED
  QUEUED
  CANCELED
  DEFEATED
  EXPIRED
  SUCCEEDED

  @@map("proposal_stage")
  @@schema("alltenant")
}

enum stage_status {
  draft
  published

  @@schema("agora")
}
