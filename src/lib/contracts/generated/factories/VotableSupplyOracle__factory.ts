/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  VotableSupplyOracle,
  VotableSupplyOracleInterface,
} from "../VotableSupplyOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "initVotableSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "checkpointBlockNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "prevVotableSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newVotableSupply",
        type: "uint256",
      },
    ],
    name: "VotableSupplyCheckpointUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "prevVotableSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newVotableSupply",
        type: "uint256",
      },
    ],
    name: "VotableSupplyUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newVotableSupply",
        type: "uint256",
      },
    ],
    name: "_updateVotableSupply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newVotableSupply",
        type: "uint256",
      },
    ],
    name: "_updateVotableSupplyAt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "blockNumber",
        type: "uint32",
      },
    ],
    name: "getIndexBeforeBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestCheckpoint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "uint224",
        name: "",
        type: "uint224",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "votableSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "votableSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class VotableSupplyOracle__factory {
  static readonly abi = _abi;
  static createInterface(): VotableSupplyOracleInterface {
    return new Interface(_abi) as VotableSupplyOracleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): VotableSupplyOracle {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as VotableSupplyOracle;
  }
}
